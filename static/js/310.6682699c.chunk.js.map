{"version":3,"file":"static/js/310.6682699c.chunk.js","mappings":"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","sources":["Components/DetailView/DetailRecordView.tsx","utils/keyboardUtils.ts","helpers/KeyboardProcessor.ts","services/ToolbarPanelManager/ToolbarItem.ts","services/ToolbarPanelManager/ToolbarItemBuilder.ts","services/ForeignButtonManager/ForeignButtonUpdater.ts","services/ToolbarPanelManager/ToolbarPanelButtonEvents.ts","services/ToolbarPanelManager/ToolbarPanelButtonManager.ts","services/ToolbarPanelManager/ToolbarPanelConfig.ts","services/ToolbarPanelManager/ToolbarPanelView.ts","services/ToolbarPanelManager/ToolbarPanelConfigByTable.ts","hooks/useButtonManager.ts","Components/ToolbarPanel/ToolbarPanel.tsx","Components/modals/builders/CustomOperations/EditorComponentCustomOperations.tsx","Components/modals/builders/CustomOperations/SearchInText.tsx","constants/separators.item.ts","Components/modals/ExportModal.tsx","constants/ExportModalConstants.ts","Components/modals/SettingsModal.tsx","helpers/ImportExportResultUtils.tsx","Components/modals/ImportModal.tsx","Components/modals/UserParamsSettingsModal.tsx","Components/modals/LinkWithFilter.tsx","Components/modals/TableActionModal.tsx","Components/modals/builders/CustomOperations/StartsWith.tsx","Components/modals/builders/BuilderFilter.tsx","Components/modals/builders/SortOrderInfo.tsx","Components/modals/builders/BuilderSorting.tsx","Components/modals/builders/BuilderHiddenColumn.tsx","Components/modals/builders/Builder.tsx","Components/modals/AddNewSetting.tsx","Components/modals/EditSetting.tsx","Components/ScreenBuilder/Templates.tsx","Components/modals/ScreenBuilderConfig.tsx","Components/modals/ChildParentTableModal.tsx","models/Classes/MassUpdateOperation.ts","Components/modals/SelectBoxMassiveUpdate.tsx","hooks/useMassiveUpdate.ts","Components/modals/MassiveUpdateModal.tsx","Components/modals/AddNewRowModal.tsx","Components/modals/CloneSelectedRowsModal.tsx","constants/CompareTableConstants.ts","Components/modals/CompareTablesParametersModal.tsx","Components/modals/MergeRowsModal.tsx","Components/modals/RecalculateReportData.tsx","Components/modals/SelectionForFilterModal.tsx","Components/modals/index.js","Components/modals/ToolbarModal.tsx","context/ModalPopupContext.tsx","models/Enums/HelpLinks.ts","models/Enums/MassUpdateOperationType.ts"],"sourcesContent":["/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { useCallback, useMemo, useRef } from 'react';\nimport Form, { SimpleItem } from 'devextreme-react/form';\nimport { ColumnModel } from '../../models/Classes';\n\nimport 'devextreme-react/color-box';\nimport 'devextreme-react/select-box';\nimport 'devextreme-react/date-box';\nimport 'devextreme-react/text-area';\n\nimport './styles.css';\n\nconst DetailRecordView = ({ data, id, tableInstance, component, rowIndex, colCount }) => {\n\tconst formRef = useRef<Form>(null);\n\tconst getFormRefInstance = useCallback(() => {\n\t\treturn formRef?.current?.instance;\n\t}, [formRef]);\n\n\tconst saveValueToDataGrid = useCallback(\n\t\tasync (name, value) => {\n\t\t\tcomponent.cellValue(rowIndex, name, value);\n\t\t\tawait component.saveEditData();\n\t\t},\n\t\t[rowIndex, component],\n\t);\n\n\tconst column = useMemo<ColumnModel[]>(() => tableInstance.getTableDataModel().columns, []);\n\treturn (\n\t\t<Form\n\t\t\tid={id}\n\t\t\tformData={data}\n\t\t\treadOnly={false}\n\t\t\tshowColonAfterLabel={true}\n\t\t\tlabelLocation={'top'}\n\t\t\tvalidationGroup={'customerData'}\n\t\t\tminColWidth={300}\n\t\t\tcolCount={colCount || 4}\n\t\t\tref={formRef}\n\t\t>\n\t\t\t{column.map((column) => {\n\t\t\t\tconst edOption = {\n\t\t\t\t\t...column.getColumnEditorOptions(),\n\t\t\t\t\tdisabled: !column.getIsEditable(),\n\t\t\t\t\tonValueChanged: async (e) => {\n\t\t\t\t\t\tif (column.getValidators()) {\n\t\t\t\t\t\t\tcolumn.getValidatorForAsyncRule(e.value, data).then(async (isValid) => {\n\t\t\t\t\t\t\t\tif (isValid) {\n\t\t\t\t\t\t\t\t\tawait saveValueToDataGrid(column.getName(), e.value);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (getFormRefInstance && getFormRefInstance().validate().isValid) {\n\t\t\t\t\t\t\t\tawait saveValueToDataGrid(column.getName(), e.value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tsetParameters: async (selectedRow, dataField, value) => {\n\t\t\t\t\t\tif (getFormRefInstance && getFormRefInstance().validate().isValid) {\n\t\t\t\t\t\t\tif ((column.getIsRequired() && !!value) || !column.getIsRequired()) {\n\t\t\t\t\t\t\t\tawait saveValueToDataGrid(column.getName(), value);\n\t\t\t\t\t\t\t\tawait component.repaint();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\treturn (\n\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\tkey={column.getName()}\n\t\t\t\t\t\tdataField={column.getName()}\n\t\t\t\t\t\tname={column.getName()}\n\t\t\t\t\t\tcomponent={column.getFormCellRender(data)}\n\t\t\t\t\t\tlabel={{ text: column.getCaption() }}\n\t\t\t\t\t\teditorOptions={edOption}\n\t\t\t\t\t\teditorType={column.getViewModel().getInputType()}\n\t\t\t\t\t>\n\t\t\t\t\t\t{column.getValidationRules()}\n\t\t\t\t\t</SimpleItem>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Form>\n\t);\n};\n\nexport default React.memo(DetailRecordView);\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nconst KEY_MAP = {\n\tbackspace: 'backspace',\n\ttab: 'tab',\n\tenter: 'enter',\n\tescape: 'escape',\n\tpageup: 'pageUp',\n\tpagedown: 'pageDown',\n\tend: 'end',\n\thome: 'home',\n\tarrowleft: 'leftArrow',\n\tarrowup: 'upArrow',\n\tarrowright: 'rightArrow',\n\tarrowdown: 'downArrow',\n\tdelete: 'del',\n\t' ': 'space',\n\tf: 'F',\n\ta: 'A',\n\t'*': 'asterisk',\n\t'-': 'minus',\n\talt: 'alt',\n\tcontrol: 'control',\n\tshift: 'shift',\n};\nconst LEGACY_KEY_CODES = {\n\t8: 'backspace',\n\t9: 'tab',\n\t13: 'enter',\n\t27: 'escape',\n\t33: 'pageUp',\n\t34: 'pageDown',\n\t35: 'end',\n\t36: 'home',\n\t37: 'leftArrow',\n\t38: 'upArrow',\n\t39: 'rightArrow',\n\t40: 'downArrow',\n\t46: 'del',\n\t32: 'space',\n\t70: 'F',\n\t65: 'A',\n\t106: 'asterisk',\n\t109: 'minus',\n\t189: 'minus',\n\t173: 'minus',\n\t16: 'shift',\n\t17: 'control',\n\t18: 'alt',\n};\nconst EVENT_SOURCES_REGEX = {\n\tdx: /^dx/i,\n\tmouse: /(mouse|wheel)/i,\n\ttouch: /^touch/i,\n\tkeyboard: /^key/i,\n\tpointer: /^(ms)?pointer/i,\n};\n\nexport const normalizeKeyName = (event) => {\n\tconst isKeySupported = !!event.key;\n\tlet key = isKeySupported ? event.key : event.which;\n\tif (key) {\n\t\tif (isKeySupported) {\n\t\t\tkey = KEY_MAP[key.toLowerCase()] || key;\n\t\t} else {\n\t\t\tkey = LEGACY_KEY_CODES[key] || String.fromCharCode(key);\n\t\t}\n\t\treturn key;\n\t}\n};\n\nexport const createKeyDownOptions = (e) => ({\n\tkeyName: normalizeKeyName(e),\n\tkey: e.key,\n\tcode: e.code,\n\tctrl: e.ctrlKey,\n\tlocation: e.location,\n\tmetaKey: e.metaKey,\n\tshift: e.shiftKey,\n\talt: e.altKey,\n\twhich: e.which,\n\toriginalEvent: e,\n});\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\nimport TFunction from '../models/Types/Types';\nimport { createKeyDownOptions } from '../utils/keyboardUtils';\n\nexport class ShortcutOptions {\n\tconstructor(public code: string, public shift: boolean, public ctrl: boolean, public extraParams: any) {}\n\n\tpublic isSameKey(keyOpt) {\n\t\treturn this.code === keyOpt.code && this.ctrl === keyOpt.ctrl && this.shift === keyOpt.shift;\n\t}\n\n\tpublic toString() {\n\t\treturn `${this.code}-${this.ctrl}-${this.shift}`;\n\t}\n}\n\nclass KeyboardProcessor {\n\tpublic static instances: { [key: string]: KeyboardProcessor } = {};\n\n\tprivate keyListeners: Map<string, { [key: string]: any }> = new Map();\n\tpublic componentStorage: Map<string, object> = new Map();\n\n\tconstructor(tableType) {\n\t\tif (!KeyboardProcessor.instances[tableType]) {\n\t\t\tthis.listenKeyboardEvents();\n\t\t\tthis.setComponentInstance = this.setComponentInstance.bind(this);\n\n\t\t\tKeyboardProcessor.instances[tableType] = this;\n\t\t\treturn this;\n\t\t}\n\t\treturn KeyboardProcessor.instances[tableType];\n\t}\n\n\tpublic setComponentInstance(buttonName, component) {\n\t\tthis.componentStorage.set(buttonName, component);\n\t}\n\n\tprivate listenKeyboardEvents() {\n\t\tdocument.addEventListener('keyup', (event) => {\n\t\t\tif (event.isComposing || event.keyCode === 229) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.runListeners(createKeyDownOptions(event));\n\t\t});\n\t}\n\n\tpublic runListeners(keyDownOpt) {\n\t\t[...this.keyListeners.values()].forEach(({ buttonName, shortcutOptions, handler }) => {\n\t\t\tif (shortcutOptions.isSameKey(keyDownOpt)) {\n\t\t\t\tconst component = this.componentStorage.get(buttonName);\n\t\t\t\thandler({ itemData: shortcutOptions.extraParams, component });\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic registerShortcut(shortcutOptions: ShortcutOptions, handler: TFunction, buttonName: string) {\n\t\tthis.keyListeners.set(shortcutOptions.toString(), { buttonName, shortcutOptions, handler });\n\t}\n}\n\nexport default KeyboardProcessor;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport * as Icons from '../../assets/icons';\nimport TFunction from '../../models/Types/Types';\nimport { ShortcutOptions } from '../../helpers/KeyboardProcessor';\n\ntype WidgetType =\n\t| 'dxAutocomplete'\n\t| 'dxButton'\n\t| 'dxCheckBox'\n\t| 'dxDateBox'\n\t| 'dxMenu'\n\t| 'dxSelectBox'\n\t| 'dxTabs'\n\t| 'dxTextBox'\n\t| 'dxButtonGroup'\n\t| 'dxDropDownButton';\ntype LocateInMenuType = 'always' | 'auto' | 'never';\ntype LocationType = 'after' | 'before' | 'center';\n\nclass ToolbarItem {\n\tisDown: boolean = false;\n\tpublic component: any;\n\tprivate icon: string;\n\tprivate shortcutOptions: ShortcutOptions[] = [];\n\n\tconstructor(\n\t\tpublic readonly buttonName: string,\n\t\tprivate text: string = '',\n\t\tprivate title: string = '',\n\t\tprivate disabled: boolean = false,\n\t\tprivate cssClass: string = 'toolbar-item-custom',\n\t\tprivate locateInMenu: LocateInMenuType = 'auto',\n\t\tprivate location: LocationType = 'before',\n\t\tprivate widget: WidgetType = 'dxButton',\n\t\tprivate visible: boolean = false,\n\t\tprivate options: any = {},\n\t\tprivate children: any = null,\n\t) {}\n\n\tpublic static getIcon(name) {\n\t\treturn Icons[name] || name;\n\t}\n\n\tpublic setShortcut(code, shift = false, ctrl = false, extraParams = {}) {\n\t\tthis.shortcutOptions.push(new ShortcutOptions(code, shift, ctrl, extraParams));\n\t\treturn this;\n\t}\n\n\tpublic getShortcuts(): ShortcutOptions[] {\n\t\treturn this.shortcutOptions;\n\t}\n\n\tpublic setVisible(visible: boolean): ToolbarItem {\n\t\tthis.visible = visible;\n\t\treturn this;\n\t}\n\n\tpublic isVisible(): boolean {\n\t\treturn this.visible;\n\t}\n\n\tpublic setTitle(title: string): ToolbarItem {\n\t\tthis.title = title;\n\t\tthis.options.hint = title;\n\t\treturn this;\n\t}\n\n\tpublic setIcon(iconName = ''): ToolbarItem {\n\t\tthis.icon = ToolbarItem.getIcon(iconName);\n\t\tthis.options.icon = ToolbarItem.getIcon(iconName);\n\t\treturn this;\n\t}\n\n\tpublic setCssClass(className = ''): ToolbarItem {\n\t\tthis.cssClass += ` ${className}`;\n\t\treturn this;\n\t}\n\n\tpublic setChildren(children: any): ToolbarItem {\n\t\tthis.children = children;\n\t\treturn this;\n\t}\n\n\tpublic setWidget(widgetName: WidgetType): ToolbarItem {\n\t\tthis.widget = widgetName;\n\t\treturn this;\n\t}\n\n\tpublic setText(text?: string): ToolbarItem {\n\t\tthis.text = text;\n\t\treturn this;\n\t}\n\n\tpublic getKey(): string {\n\t\treturn this.buttonName;\n\t}\n\n\tpublic mergeOptions(options: any): ToolbarItem {\n\t\tObject.assign(this.options, options);\n\t\treturn this;\n\t}\n\n\tpublic setClickHandler(handler: TFunction) {\n\t\tthis.clickHandler = handler;\n\t\tthis.setShortcutHandler(handler);\n\t}\n\n\tpublic setShortcutHandler(handler: TFunction) {\n\t\tthis.shortcutHandler = handler;\n\t}\n\n\tpublic getClickHandler(): TFunction {\n\t\treturn this.clickHandler;\n\t}\n\n\tpublic getShortcutHandler(): TFunction {\n\t\treturn this.shortcutHandler;\n\t}\n\n\tpublic getChildren() {\n\t\treturn this.children;\n\t}\n\n\tpublic getButtonOptions() {\n\t\treturn Object.assign(this.options, this.widget !== 'dxDropDownButton' ? { onClick: this.clickHandler } : {});\n\t}\n\n\tpublic getItemProps() {\n\t\treturn {\n\t\t\ttext: this.text,\n\t\t\ttitle: this.title,\n\t\t\thint: this.title,\n\t\t\ticon: this.icon,\n\t\t\tdisabled: this.disabled,\n\t\t\tcssClass: this.cssClass,\n\t\t\tlocateInMenu: this.locateInMenu,\n\t\t\tlocation: this.location,\n\t\t\twidget: this.widget,\n\t\t\tvisible: this.visible,\n\t\t};\n\t}\n\n\tprivate clickHandler: TFunction = () => true;\n\tprivate shortcutHandler: TFunction = () => true;\n}\n\nexport default ToolbarItem;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport ToolbarItem from './ToolbarItem';\nimport ButtonNames from './ButtonNames';\nimport translate from '../../i18n/localization';\nimport {\n\tChartDescription,\n\tFilterSetting,\n\tHiddenColumnSetting,\n\tSortSetting,\n\tTableActionModel,\n\tTableReference,\n} from '../../models/Classes';\nimport { FilterActions, HiddenColumnActions, SortingActions } from '../../constants/FiltersConstants';\nimport ToolbarPanelButtonEvents from './ToolbarPanelButtonEvents';\nimport TableInstance from '../TableInstanceManager/TableInstance';\n\nclass ToolbarItemBuilder {\n\tstatic buildCloseScreenBuilderTable(tableInstance, toolbarPanelButtonEvents) {\n\t\tconst tableKey = tableInstance.getTableKey();\n\t\tconst tableName = tableInstance.getTableName();\n\t\tconst closeScreenBuilderTableButton: ToolbarItem = new ToolbarItem(ButtonNames.closeScreenBuilderTable);\n\t\tcloseScreenBuilderTableButton.setTitle(translate('CLOSE'));\n\t\tcloseScreenBuilderTableButton.setIcon('PowerIcon');\n\t\tcloseScreenBuilderTableButton.setClickHandler(\n\t\t\ttoolbarPanelButtonEvents.closeScreenBuilderTableButtonClickHandler(tableKey, tableName),\n\t\t);\n\t\treturn closeScreenBuilderTableButton;\n\t}\n\n\tstatic buildTableActionsMenuButton(tableInstance, toolbarPanelButtonEvents) {\n\t\tconst tableActions: TableActionModel[] = tableInstance.metadata.tableRelatedUserParameters\n\t\t\t.getActions()\n\t\t\t.sort((nameA, nameB) => (nameA.header > nameB.header ? 1 : -1));\n\t\tconst tableActionsMenuButton: ToolbarItem = new ToolbarItem(ButtonNames.tableActionsMenuButton);\n\t\ttableActionsMenuButton.setTitle(translate('TABLE_ACTIONS'));\n\t\ttableActionsMenuButton.setIcon('chevrondoubleright');\n\t\ttableActionsMenuButton.setWidget('dxDropDownButton');\n\t\ttableActionsMenuButton.mergeOptions({\n\t\t\titems: tableActions,\n\t\t\tdisplayExpr: 'header',\n\t\t\tdropDownOptions: { minWidth: 350 },\n\t\t\tonItemClick: toolbarPanelButtonEvents.tableActionsClickHandler(),\n\t\t\titemTemplate: (data) => data.header,\n\t\t});\n\n\t\treturn tableActionsMenuButton;\n\t}\n\n\tstatic buildReloadButton(toolbarPanelButtonEvents) {\n\t\tconst reloadButton: ToolbarItem = new ToolbarItem(ButtonNames.reloadButton);\n\t\treloadButton.setTitle(translate('_RELOAD_BUTTON') + ' (Ctrl+Shift+5)');\n\t\treloadButton.setIcon('ReloadIcon');\n\t\treloadButton.setWidget('dxButton');\n\t\treloadButton.setClickHandler(toolbarPanelButtonEvents.reloadButtonClickHandler());\n\n\t\treloadButton.setShortcut('Digit5', true, true);\n\t\treloadButton.setShortcut('KeyR', false, true);\n\t\treturn reloadButton;\n\t}\n\n\tstatic buildExecuteTableUpdateButton() {\n\t\tconst executeTableUpdateButton: ToolbarItem = new ToolbarItem(ButtonNames.executeTableUpdateButton);\n\t\texecuteTableUpdateButton.setTitle(translate('_UPDATE_BUTTON'));\n\t\texecuteTableUpdateButton.setIcon('UpdateIcon');\n\t\texecuteTableUpdateButton.setWidget('dxButton');\n\n\t\treturn executeTableUpdateButton;\n\t}\n\n\tstatic buildGetLinkButton(toolbarPanelButtonEvents) {\n\t\tconst getLinkButton: ToolbarItem = new ToolbarItem(ButtonNames.getLinkButton);\n\t\tgetLinkButton.setTitle(translate('_GET_LINK_BUTTON'));\n\t\tgetLinkButton.setIcon('LinkIcon');\n\t\tgetLinkButton.setWidget('dxButton');\n\n\t\tgetLinkButton.setClickHandler(toolbarPanelButtonEvents.getLinkButtonClickHandler());\n\n\t\treturn getLinkButton;\n\t}\n\n\tstatic buildToggleSelectionButton(toolbarPanelButtonEvents) {\n\t\tconst toggleSelectionButton: ToolbarItem = new ToolbarItem(ButtonNames.toggleSelectionButton);\n\t\ttoggleSelectionButton.setClickHandler(\n\t\t\ttoolbarPanelButtonEvents.toggleSelectionButtonClickHandler(toggleSelectionButton),\n\t\t);\n\n\t\ttoggleSelectionButton.setTitle(translate('SELECT_ALL_ROWS'));\n\t\ttoggleSelectionButton.setCssClass('toolbar-bg-icon select-all-icon');\n\n\t\ttoggleSelectionButton.setWidget('dxButton');\n\n\t\treturn toggleSelectionButton;\n\t}\n\n\tstatic buildDeleteRowsButton(toolbarPanelButtonEvents) {\n\t\tconst deleteRowsButton: ToolbarItem = new ToolbarItem(ButtonNames.deleteRowsButton);\n\t\tdeleteRowsButton.setTitle(translate('_DELETE_BUTTON') + ' (Ctrl+Shift+6)');\n\t\tdeleteRowsButton.setIcon('RemoveIcon');\n\t\tdeleteRowsButton.setWidget('dxButton');\n\t\tdeleteRowsButton.setClickHandler(toolbarPanelButtonEvents.deleteRowsButtonClickHandler());\n\t\tdeleteRowsButton.setShortcut('Digit6', true, true);\n\n\t\treturn deleteRowsButton;\n\t}\n\n\tstatic buildAddRowButton(toolbarPanelButtonEvents) {\n\t\tconst addRowButton: ToolbarItem = new ToolbarItem(ButtonNames.addRowButton);\n\t\taddRowButton.setTitle(translate('_ADD_BUTTON') + ' (Ctrl+Shift+3)');\n\t\taddRowButton.setIcon('AddIcon');\n\t\taddRowButton.setWidget('dxButton');\n\t\taddRowButton.setClickHandler(toolbarPanelButtonEvents.addRowButtonClickHandler());\n\t\taddRowButton.setShortcut('Digit3', true, true);\n\t\taddRowButton.setShortcut('Digit4', true, true);\n\n\t\treturn addRowButton;\n\t}\n\n\tstatic buildCloneRowsButton(toolbarPanelButtonEvents) {\n\t\tconst cloneRowsButton: ToolbarItem = new ToolbarItem(ButtonNames.cloneRowsButton);\n\t\tcloneRowsButton.setTitle(translate('_CLONE_BUTTON') + ' (Ctrl+Shift+4)');\n\t\tcloneRowsButton.setIcon('AddCloneIcon');\n\t\tcloneRowsButton.setWidget('dxButton');\n\t\tcloneRowsButton.setClickHandler(toolbarPanelButtonEvents.cloneRowButtonClickHandler());\n\n\t\treturn cloneRowsButton;\n\t}\n\n\tstatic buildSaveRowsButton(tableInstance, toolbarPanelButtonEvents): ToolbarItem {\n\t\tconst saveRowsButton: ToolbarItem = new ToolbarItem(ButtonNames.saveRowsButton);\n\t\tsaveRowsButton.setTitle(translate('_SAVE_BUTTON'));\n\t\tsaveRowsButton.setIcon('save');\n\t\tsaveRowsButton.setWidget('dxButton');\n\t\tsaveRowsButton.setClickHandler(toolbarPanelButtonEvents.saveRowsButtonClickHandler());\n\n\t\treturn saveRowsButton;\n\t}\n\n\tstatic buildSaveForeignKeyButton(toolbarPanelButtonEvents) {\n\t\tconst saveForeignKeyButton: ToolbarItem = new ToolbarItem(ButtonNames.saveForeignKeyButton);\n\t\tsaveForeignKeyButton.setTitle(translate('_SAVE_FOREIGN_KEY_BUTTON'));\n\t\tsaveForeignKeyButton.setIcon('SaveForeignKeyIcon');\n\t\tsaveForeignKeyButton.setWidget('dxButton');\n\t\tsaveForeignKeyButton.setClickHandler(toolbarPanelButtonEvents.saveForeignKeyButtonClickHandler());\n\t\treturn saveForeignKeyButton;\n\t}\n\n\tstatic buildMassUpdateButton(toolbarPanelButtonEvents, tableType) {\n\t\tconst massUpdateButton: ToolbarItem = new ToolbarItem(ButtonNames.massUpdateButton);\n\t\tmassUpdateButton.setTitle(translate('_MASS_UPDATE_BUTTON'));\n\t\tmassUpdateButton.setIcon('MassiveUpdateIcon');\n\t\tmassUpdateButton.setWidget('dxButton');\n\t\tmassUpdateButton.setClickHandler(toolbarPanelButtonEvents.massUpdateButtonClickHandler(tableType));\n\t\treturn massUpdateButton;\n\t}\n\n\tstatic buildExportButton(toolbarPanelButtonEvents) {\n\t\tconst exportButton: ToolbarItem = new ToolbarItem(ButtonNames.exportButton);\n\t\texportButton.setTitle(translate('_EXPORT_BUTTON'));\n\t\texportButton.setIcon('ExportIcon');\n\t\texportButton.setWidget('dxButton');\n\t\texportButton.setClickHandler(toolbarPanelButtonEvents.exportButtonClickHandler());\n\n\t\treturn exportButton;\n\t}\n\n\tstatic buildImportButton(toolbarPanelButtonEvents) {\n\t\tconst importButton: ToolbarItem = new ToolbarItem(ButtonNames.importButton);\n\t\timportButton.setTitle(translate('_IMPORT_BUTTON'));\n\t\timportButton.setIcon('ImportIcon');\n\t\timportButton.setWidget('dxButton');\n\t\timportButton.setClickHandler(toolbarPanelButtonEvents.importButtonClickHandler());\n\n\t\treturn importButton;\n\t}\n\n\tstatic buildSettingsButton(toolbarPanelButtonEvents) {\n\t\tconst settingsButton: ToolbarItem = new ToolbarItem(ButtonNames.settingsButton);\n\t\tsettingsButton.setTitle(translate('_SETTINGS_BUTTON'));\n\t\tsettingsButton.setIcon('SettingsIcon');\n\t\tsettingsButton.setWidget('dxButton');\n\n\t\tsettingsButton.setClickHandler(toolbarPanelButtonEvents.settingsButtonClickHandler());\n\n\t\treturn settingsButton;\n\t}\n\n\tstatic buildPagerPanel() {\n\t\tconst pagerPanel: ToolbarItem = new ToolbarItem(ButtonNames.pagerPanel);\n\n\t\treturn pagerPanel;\n\t}\n\n\tstatic buildCompareButton(toolbarPanelButtonEvents) {\n\t\tconst compareButton: ToolbarItem = new ToolbarItem(ButtonNames.compareButton);\n\t\tcompareButton.setTitle(translate('_COMPARE_BUTTON'));\n\t\tcompareButton.setIcon('CompareIcon');\n\t\tcompareButton.setWidget('dxButton');\n\t\tcompareButton.setClickHandler(toolbarPanelButtonEvents.compareButtonClickHandler());\n\n\t\treturn compareButton;\n\t}\n\n\tstatic buildMasterButton() {\n\t\tconst masterButton: ToolbarItem = new ToolbarItem(ButtonNames.masterButton);\n\t\tmasterButton.setTitle(translate('_MASTER_BUTTON_SELECT'));\n\t\tmasterButton.setIcon('MasterIcon');\n\t\tmasterButton.setWidget('dxButton');\n\n\t\treturn masterButton;\n\t}\n\n\tstatic buildHelpButton(toolbarPanelButtonEvents: ToolbarPanelButtonEvents) {\n\t\tconst helpButton: ToolbarItem = new ToolbarItem(ButtonNames.helpButton);\n\t\thelpButton.setTitle(translate('HELP'));\n\t\thelpButton.setIcon('HelpIcon');\n\t\thelpButton.setWidget('dxButton');\n\t\thelpButton.setClickHandler(toolbarPanelButtonEvents.helpButtonClickHandler());\n\n\t\treturn helpButton;\n\t}\n\n\tstatic buildLinksMenuButton() {\n\t\tconst linksMenuButton: ToolbarItem = new ToolbarItem(ButtonNames.linksMenuButton);\n\t\tlinksMenuButton.setTitle(translate('LINKS'));\n\t\tlinksMenuButton.setIcon('link');\n\t\tlinksMenuButton.setWidget('dxButton');\n\n\t\treturn linksMenuButton;\n\t}\n\n\tstatic buildFilterSettingButton(tableInstance: TableInstance, toolbarPanelButtonEvents, setComponentInstance) {\n\t\tconst filtersActions: FilterSetting[] = [\n\t\t\tFilterSetting.create({ settingName: translate('ADD_EDIT_FILTER'), key: FilterActions.ADD_EDIT_FILTER }),\n\t\t\tFilterSetting.create({\n\t\t\t\tsettingName: translate('_UNFILTER_BUTTON') + ' (Ctrl+Shift+7)',\n\t\t\t\tkey: FilterActions.UNFILTER,\n\t\t\t}),\n\t\t];\n\t\tconst filters: FilterSetting[] = tableInstance.filters;\n\t\tconst defaultFilterId: string = tableInstance.defaultFilter?.settingId;\n\t\tconst filterSettingButton: ToolbarItem = new ToolbarItem(ButtonNames.filterSettingButton);\n\n\t\tfilterSettingButton.setTitle(translate('_FILTER_BUTTON') + ' (Ctrl+Shift+2)');\n\t\tfilterSettingButton.setIcon('FilterIcon');\n\t\tfilterSettingButton.setWidget('dxDropDownButton');\n\t\tfilterSettingButton.setShortcutHandler(toolbarPanelButtonEvents.filterSettingButtonItemClick(filtersActions));\n\t\tfilterSettingButton.mergeOptions({\n\t\t\tlocation: 'before',\n\t\t\titems: [...filtersActions, ...filters].map((filter) => ({ ...filter })),\n\t\t\tdropDownOptions: { minWidth: 150 },\n\t\t\tselectedItemKey: defaultFilterId,\n\t\t\tdisplayExpr: 'settingName',\n\t\t\tuseSelectMode: true,\n\t\t\tkeyExpr: 'settingId',\n\t\t\tonItemClick: toolbarPanelButtonEvents.filterSettingButtonItemClick(filtersActions),\n\t\t\tonInitialized: ({ component }) => {\n\t\t\t\tsetComponentInstance(filterSettingButton.buttonName, component);\n\t\t\t},\n\t\t});\n\n\t\tfilterSettingButton.setShortcut('Digit2', true, true, { key: FilterActions.ADD_EDIT_FILTER });\n\t\tfilterSettingButton.setShortcut('Digit7', true, true, { key: FilterActions.UNFILTER });\n\t\treturn filterSettingButton;\n\t}\n\n\tstatic buildHiddenColumnSettingSplitMenuButton(tableInstance: TableInstance, toolbarPanelButtonEvents) {\n\t\tconst hiddenColumnSettingButton: ToolbarItem = new ToolbarItem(ButtonNames.hiddenColumnSettingButton);\n\t\tconst hiddenColumnSettingActions: HiddenColumnSetting[] = [\n\t\t\tHiddenColumnSetting.create({\n\t\t\t\tsettingName: translate('ADD_EDIT_FILTER'),\n\t\t\t\tkey: HiddenColumnActions.ADD_EDIT_FILTER,\n\t\t\t}),\n\t\t\tHiddenColumnSetting.create({\n\t\t\t\tsettingName: translate('_SHOW_HIDDEN_COLUMNS_BUTTON'),\n\t\t\t\tkey: HiddenColumnActions.SHOW_HIDDEN_COLUMNS,\n\t\t\t}),\n\t\t];\n\t\tconst hiddenColumnSettings: HiddenColumnSetting[] = tableInstance.hiddenColumnSettings;\n\t\tconst defaultFilterId: string = tableInstance.defaultHiddenColumn?.getSettingId();\n\n\t\thiddenColumnSettingButton.setTitle(translate('HIDDEN_COLUMNS_FILTER'));\n\t\thiddenColumnSettingButton.setIcon('HiddenColumnsIcon');\n\t\thiddenColumnSettingButton.setWidget('dxDropDownButton');\n\n\t\thiddenColumnSettingButton.mergeOptions({\n\t\t\tlocation: 'before',\n\t\t\titems: [...hiddenColumnSettingActions, ...hiddenColumnSettings].map((filter) => ({ ...filter })),\n\t\t\tdropDownOptions: { minWidth: 150 },\n\t\t\tselectedItemKey: defaultFilterId,\n\t\t\tdisplayExpr: 'settingName',\n\t\t\tuseSelectMode: true,\n\t\t\tkeyExpr: 'settingId',\n\t\t\tonItemClick:\n\t\t\t\ttoolbarPanelButtonEvents.hiddenColumnSettingSplitMenuButtonItemClick(hiddenColumnSettingActions),\n\t\t});\n\t\treturn hiddenColumnSettingButton;\n\t}\n\n\tstatic buildGroupingSettingSplitMenuButton() {\n\t\tconst groupingSettingSplitMenuButton: ToolbarItem = new ToolbarItem(ButtonNames.groupingSettingSplitMenuButton);\n\t\tgroupingSettingSplitMenuButton.setTitle(translate('GROUPING_FILTER'));\n\t\tgroupingSettingSplitMenuButton.setIcon('indeterminatestate');\n\t\tgroupingSettingSplitMenuButton.setWidget('dxButton');\n\n\t\treturn groupingSettingSplitMenuButton;\n\t}\n\n\tstatic buildTableSortButton(tableInstance: TableInstance, toolbarPanelButtonEvents): ToolbarItem {\n\t\tconst tableSortButton: ToolbarItem = new ToolbarItem(ButtonNames.tableSortButton);\n\t\tconst sortSettings: SortSetting[] = tableInstance.sortOrderSettings;\n\t\tconst defaultSortOrderId: string = tableInstance.defaultSortOrder?.getSettingId();\n\n\t\tconst sortSettingsActions: SortSetting[] = [\n\t\t\tSortSetting.create({\n\t\t\t\tsettingName: translate('ADD_EDIT_FILTER'),\n\t\t\t\tkey: SortingActions.ADD_EDIT_FILTER,\n\t\t\t}),\n\t\t\tSortSetting.create({\n\t\t\t\tsettingName: translate('REMOVE_SORTING'),\n\t\t\t\tkey: SortingActions.REMOVE_SORTING,\n\t\t\t}),\n\t\t];\n\n\t\ttableSortButton.setTitle(translate('_TABLE_SORT_BUTTON'));\n\t\ttableSortButton.setIcon('SortIcon');\n\t\ttableSortButton.setWidget('dxDropDownButton');\n\n\t\ttableSortButton.mergeOptions({\n\t\t\tlocation: 'before',\n\t\t\titems: [...sortSettingsActions, ...sortSettings].map((sortSetting) => ({ ...sortSetting })),\n\t\t\tdropDownOptions: { minWidth: 150 },\n\t\t\tselectedItemKey: defaultSortOrderId,\n\t\t\tdisplayExpr: 'settingName',\n\t\t\tuseSelectMode: true,\n\t\t\tkeyExpr: 'settingId',\n\t\t\tonItemClick: toolbarPanelButtonEvents.tableSortButtonItemClick(sortSettingsActions),\n\t\t});\n\n\t\treturn tableSortButton;\n\t}\n\n\tstatic buildViewChartMenuButton(tableInstance, toolbarPanelButtonEvents) {\n\t\tconst viewChartMenuButton: ToolbarItem = new ToolbarItem(ButtonNames.viewChartMenuButton);\n\t\tconst tableRelatedCharts: ChartDescription[] = tableInstance.tableRelatedCharts;\n\n\t\tviewChartMenuButton.setTitle(translate('DBE_CHARTS'));\n\t\tviewChartMenuButton.setIcon('ChartsIcon');\n\t\tviewChartMenuButton.setWidget('dxDropDownButton');\n\t\tviewChartMenuButton.mergeOptions({\n\t\t\titems: tableRelatedCharts,\n\t\t\tdropDownOptions: { minWidth: 350 },\n\t\t\tonItemClick: toolbarPanelButtonEvents.tableRelatedChartsButtonClickHandler(),\n\t\t\titemTemplate: (data) => translate(data.text),\n\t\t});\n\t\treturn viewChartMenuButton;\n\t}\n\n\tstatic buildChildRecordsMenuButton(tableInstance, toolbarPanelButtonEvents) {\n\t\tconst childRecordsMenuButton: ToolbarItem = new ToolbarItem(ButtonNames.childRecordsMenuButton);\n\t\tchildRecordsMenuButton.setTitle(translate('_CHILD_RECORDS_BUTTON'));\n\t\tchildRecordsMenuButton.setIcon('ShowChildIcon');\n\t\tchildRecordsMenuButton.setWidget('dxButton');\n\t\tchildRecordsMenuButton.setClickHandler(\n\t\t\ttoolbarPanelButtonEvents.openChildParentTable(translate('_CHILD_RECORDS_BUTTON'), true),\n\t\t);\n\n\t\treturn childRecordsMenuButton;\n\t}\n\n\tstatic buildParentRecordsMenuButton(tableInstance, toolbarPanelButtonEvents) {\n\t\tconst parentRecordsMenuButton: ToolbarItem = new ToolbarItem(ButtonNames.parentRecordsMenuButton);\n\t\tparentRecordsMenuButton.setTitle(translate('_PARENT_RECORDS_BUTTON'));\n\t\tparentRecordsMenuButton.setIcon('ShowParentIcon');\n\t\tparentRecordsMenuButton.setWidget('dxButton');\n\t\tparentRecordsMenuButton.setClickHandler(\n\t\t\ttoolbarPanelButtonEvents.openChildParentTable(translate('_PARENT_RECORDS_BUTTON'), false),\n\t\t);\n\n\t\treturn parentRecordsMenuButton;\n\t}\n\n\tstatic buildSynchronizeChildButton() {\n\t\tconst synchronizeChildButton: ToolbarItem = new ToolbarItem(ButtonNames.synchronizeChildButton);\n\t\tsynchronizeChildButton.setTitle(translate('_PARENT_BUTTON_SELECT'));\n\t\tsynchronizeChildButton.setIcon('columnproperties');\n\t\tsynchronizeChildButton.setWidget('dxButton');\n\n\t\treturn synchronizeChildButton;\n\t}\n\n\tstatic buildMergeButton(toolbarPanelButtonEvents) {\n\t\tconst mergeButton: ToolbarItem = new ToolbarItem(ButtonNames.mergeButton);\n\t\tmergeButton.setTitle(translate('MERGE_ROWS'));\n\t\tmergeButton.setIcon('MergeRowsIcon');\n\t\tmergeButton.setWidget('dxButton');\n\t\tmergeButton.setClickHandler(toolbarPanelButtonEvents.mergeRowsButtonClickHandler());\n\n\t\treturn mergeButton;\n\t}\n\n\tstatic buildScreenBuilderButton(toolbarPanelButtonEvents) {\n\t\tconst screenBuilderButton: ToolbarItem = new ToolbarItem(ButtonNames.screenBuilderButton);\n\t\tscreenBuilderButton.setTitle(translate('SCREEN_BUILDER'));\n\t\tscreenBuilderButton.setIcon('ScreenBuilder');\n\t\tscreenBuilderButton.setWidget('dxButton');\n\n\t\tscreenBuilderButton.setClickHandler(toolbarPanelButtonEvents.screenBuilderButtonClickHandler());\n\n\t\treturn screenBuilderButton;\n\t}\n\n\tstatic buildColumnChooserButton(toolbarPanelButtonEvents) {\n\t\tconst columnChooserButton: ToolbarItem = new ToolbarItem(ButtonNames.columnChooserButton);\n\t\tcolumnChooserButton.setTitle(translate('COLUMN_CHOOSER'));\n\t\tcolumnChooserButton.setIcon('ColumnChooserIcon');\n\t\tcolumnChooserButton.setWidget('dxButton');\n\n\t\tcolumnChooserButton.setClickHandler(toolbarPanelButtonEvents.columnChooserButtonClickHandler());\n\n\t\treturn columnChooserButton;\n\t}\n\n\tstatic buildLinkReferenceButton(tableInstance, toolbarPanelButtonEvents) {\n\t\tconst tableReferences: TableReference[] = tableInstance.tableReferences;\n\t\tconst linkReferenceButton: ToolbarItem = new ToolbarItem(ButtonNames.linkReferenceButton);\n\t\tlinkReferenceButton.setTitle(translate('LINKS'));\n\t\tlinkReferenceButton.setIcon('link');\n\t\tlinkReferenceButton.setWidget('dxDropDownButton');\n\t\tlinkReferenceButton.mergeOptions({\n\t\t\titems: tableReferences,\n\t\t\tdropDownOptions: { minWidth: 350 },\n\t\t\tonItemClick: toolbarPanelButtonEvents.linkReferenceTableButtonClickHandler(),\n\t\t\titemTemplate: (data) => translate(data.name),\n\t\t});\n\n\t\treturn linkReferenceButton;\n\t}\n\n\tstatic buildRecalculateReportDataButton(toolbarPanelButtonEvents) {\n\t\tconst recalculateReportDataButton: ToolbarItem = new ToolbarItem(ButtonNames.executeTableUpdateButton);\n\t\trecalculateReportDataButton.setTitle(translate('UPDATE'));\n\t\trecalculateReportDataButton.setIcon('UpdateIcon');\n\t\trecalculateReportDataButton.setWidget('dxButton');\n\n\t\trecalculateReportDataButton.setClickHandler(toolbarPanelButtonEvents.recalculateReportDataClickHandler());\n\n\t\treturn recalculateReportDataButton;\n\t}\n\n\tstatic buildGoToOldDBEButton(toolbarPanelButtonEvents) {\n\t\tconst recalculateReportDataButton: ToolbarItem = new ToolbarItem(ButtonNames.goToOldDBE);\n\t\trecalculateReportDataButton.setTitle(translate('BACK_TO_OLD_DBE'));\n\t\trecalculateReportDataButton.setIcon('return');\n\t\trecalculateReportDataButton.setWidget('dxButton');\n\n\t\trecalculateReportDataButton.setClickHandler(toolbarPanelButtonEvents.goToOldDBEClickHandler());\n\n\t\treturn recalculateReportDataButton;\n\t}\n}\n\nexport default ToolbarItemBuilder;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2023\n ******************************************************************************/\nimport TableInstance from '../TableInstanceManager/TableInstance';\nimport { ForeignKeyInfo } from '../../models/Classes';\nimport TableDataModel from '../TableDataModel/TableDataModel';\nimport CompareTableDataModel from '../TableDataModel/CompareTableDataModel';\nimport translate from '../../i18n/localization';\nimport Validators from '../../models/Enums/Validators';\nimport { Severity } from '../../models/Enums/Notification';\nimport NotificationController from '../Notification/NotificationController';\nimport AbstractColumnModel from '../../models/Classes/AbstractColumnModel';\nimport { isDefined } from '../../utils/utils';\nimport ForeignButtonProxy from './ForeignButtonProxy';\n\nclass ForeignButtonUpdater {\n\tprivate selectedRow: Map<string, string | number | boolean | null> = new Map();\n\tpublic notificationController: NotificationController;\n\tpublic foreignProxy: ForeignButtonProxy;\n\tconstructor(\n\t\tselectedRows,\n\t\tprivate tableInstance: TableInstance,\n\t\tprivate originalTableDataModel: TableDataModel | CompareTableDataModel,\n\t\tprivate gridInstance: any,\n\t) {\n\t\tthis.setSelectedRow(selectedRows);\n\t\tthis.notificationController = new NotificationController();\n\t\tthis.foreignProxy = new ForeignButtonProxy();\n\t\tthis.foreignButtonFilterBuilderUpdate = this.foreignButtonFilterBuilderUpdate.bind(this);\n\t\tthis.foreignButtonFormUpdate = this.foreignButtonFormUpdate.bind(this);\n\t\tthis.foreignButtonCellUpdate = this.foreignButtonCellUpdate.bind(this);\n\t}\n\n\tpublic async update() {\n\t\ttry {\n\t\t\tawait [\n\t\t\t\tthis.foreignButtonFilterBuilderUpdate,\n\t\t\t\tthis.foreignButtonFormUpdate,\n\t\t\t\tthis.foreignButtonCellUpdate,\n\t\t\t].reduce(async (promise, nextPromise) => {\n\t\t\t\treturn promise.then((runNext) => (runNext ? nextPromise() : Promise.resolve(false)));\n\t\t\t}, Promise.resolve(true));\n\t\t} catch (e) {\n\t\t\tthrow new Error(`Foreign cell update error`);\n\t\t}\n\t}\n\n\tpublic async foreignButtonFilterBuilderUpdate(): Promise<boolean> {\n\t\tconst editorOption = this.editorOptions;\n\t\tif (editorOption && Object.hasOwn(editorOption, 'setValueToBuilder')) {\n\t\t\tthis.closeParentTable();\n\t\t\tconst { setValueToBuilder } = editorOption;\n\n\t\t\tif (this.selectedRow.size !== 0) {\n\t\t\t\tconst parentTableColumnName = this.foreignKeyInfo.parentTableColumnName;\n\t\t\t\tconst value = this.selectedRow.get(parentTableColumnName);\n\t\t\t\tconst text = this.selectedRow.get(this.foreignKeyInfo.parentKeyColumnText);\n\t\t\t\tsetValueToBuilder({ foreignButtonId: value, foreignButtonText: text });\n\t\t\t} else {\n\t\t\t\tsetValueToBuilder(null);\n\t\t\t}\n\t\t\tthis.foreignProxy.clearCache(editorOption.columnName);\n\t\t\tawait this.repaintComponent();\n\n\t\t\treturn Promise.resolve(false);\n\t\t} else {\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\t}\n\n\tpublic async foreignButtonFormUpdate(): Promise<boolean> {\n\t\tconst editorOptions = this.editorOptions;\n\t\tconst dataFromCellData = this.dataFromCellData;\n\t\tif (editorOptions && dataFromCellData && Object.hasOwn(dataFromCellData, 'dataField')) {\n\t\t\tif (this.selectedRow.size === 0) {\n\t\t\t\tObject.values(this.foreignKeyInfo.joinedKeyColumnNames).forEach((columnName) => {\n\t\t\t\t\tthis.selectedRow.set(columnName, null);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst parentColumnName = this.foreignKeyInfo.joinedKeyColumnNames[this.dataFromCellData.dataField];\n\t\t\teditorOptions.setParameters(\n\t\t\t\tObject.fromEntries(this.selectedRow.entries()),\n\t\t\t\tdataFromCellData.dataField,\n\t\t\t\tthis.selectedRow.size !== 0 ? this.selectedRow.get(parentColumnName) : null,\n\t\t\t);\n\t\t\tthis.closeParentTable();\n\t\t\tthis.foreignProxy.clearCache(dataFromCellData.dataField);\n\t\t\tawait this.repaintComponent();\n\t\t\treturn Promise.resolve(false);\n\t\t} else {\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\t}\n\n\tpublic async foreignButtonCellUpdate(): Promise<boolean> {\n\t\tconst dataField = this.cellData.column.dataField;\n\t\tconst column = this.originalTableDataModel.getColumnByName(dataField);\n\t\tconst parentColumnName = this.foreignKeyInfo.joinedKeyColumnNames[dataField];\n\t\tconst data = this.dataFromCellData;\n\t\tconst rowIndex = this.cellData.rowIndex;\n\t\tconst validator = column.getValidatorName();\n\n\t\tconst newValue = this.selectedRow.size !== 0 ? this.selectedRow.get(parentColumnName) : null;\n\n\t\tconst cellToUpdate = Object.entries(this.foreignKeyInfo.joinedKeyColumnNames).reduce(\n\t\t\t(cells, [childColumn, parentColumn]) => {\n\t\t\t\tconst value =\n\t\t\t\t\tthis.selectedRow.size !== 0 && this.selectedRow.has(parentColumn)\n\t\t\t\t\t\t? this.selectedRow.get(parentColumn)\n\t\t\t\t\t\t: this.getDefaultValue(childColumn);\n\t\t\t\tthis.resolveForeignKeys(value, cells, childColumn);\n\t\t\t\treturn cells;\n\t\t\t},\n\t\t\t{ [dataField]: newValue },\n\t\t);\n\n\t\tcolumn.getValidatorForAsyncRule(newValue, { ...data, ...cellToUpdate }).then(async (isValid) => {\n\t\t\tif (isValid) {\n\t\t\t\tconst component = this.component;\n\t\t\t\tif (component) {\n\t\t\t\t\tObject.entries(cellToUpdate).forEach(([dataField, value]) => {\n\t\t\t\t\t\tcomponent.cellValue(rowIndex, dataField, value || 0);\n\t\t\t\t\t});\n\t\t\t\t\tawait component.saveEditData();\n\t\t\t\t}\n\t\t\t\tthis.foreignProxy.clearCache(dataField);\n\t\t\t\tthis.gridInstance.refresh(true);\n\t\t\t\tthis.closeParentTable();\n\t\t\t} else {\n\t\t\t\tthis.notificationController.createNotification({\n\t\t\t\t\tmessage: translate(Validators[validator]),\n\t\t\t\t\ttype: Severity.ERROR,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn Promise.resolve(false);\n\t}\n\n\tprivate getDefaultValue(columnName) {\n\t\tconst childColumnModel: AbstractColumnModel = this.originalTableDataModel.getColumnByName(columnName);\n\t\tif (childColumnModel) {\n\t\t\tconst defaultValue = childColumnModel.getViewModel().getDefaultValue();\n\t\t\treturn !isDefined(defaultValue) ? null : defaultValue.toString();\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate resolveForeignKeys(value, cells, childColumn) {\n\t\tif (value == null) {\n\t\t\tthis.originalTableDataModel.getColumns().forEach((columnModel) => {\n\t\t\t\tif (columnModel.getForeignKeyInfo() !== null) {\n\t\t\t\t\tObject.keys(columnModel.getForeignKeyInfo().getJoinedColumnNames()).forEach((key: string) => {\n\t\t\t\t\t\tif (key.equalsIgnoreCase(childColumn) && !childColumn.equalsIgnoreCase(columnModel.getName())) {\n\t\t\t\t\t\t\tObject.assign(cells, { [columnModel.getName()]: null });\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic closeParentTable() {\n\t\tthis.tableInstance.close();\n\t}\n\n\tpublic async repaintComponent(): Promise<void> {\n\t\tconst component = this.component;\n\t\tcomponent && (await component.repaint());\n\t}\n\n\tprivate get component() {\n\t\tif (Object.hasOwn(this.cellData, 'data')) {\n\t\t\tif (Object.hasOwn(this.cellData.data, 'component')) {\n\t\t\t\treturn this.cellData.data.component;\n\t\t\t}\n\t\t}\n\t\tif (Object.hasOwn(this.cellData, 'component')) {\n\t\t\treturn this.cellData.component;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate get foreignKeyInfo(): ForeignKeyInfo {\n\t\treturn this.tableInstance.foreignKeyInfo;\n\t}\n\tprivate get cellData() {\n\t\treturn this.foreignKeyInfo.cellData;\n\t}\n\tprivate get dataFromCellData() {\n\t\treturn Object.hasOwn(this.cellData, 'data') ? this.cellData.data : null;\n\t}\n\tprivate get editorOptions() {\n\t\tif (Object.hasOwn(this.dataFromCellData, 'editorOptions')) {\n\t\t\treturn this.dataFromCellData.editorOptions;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate setSelectedRow(selectedRows: never[]) {\n\t\tconst selectedRowObj = selectedRows[0];\n\t\tif (selectedRowObj) {\n\t\t\tthis.selectedRow = new Map(Object.entries(selectedRowObj));\n\t\t}\n\t}\n}\n\nexport default ForeignButtonUpdater;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport ModalsTypes from '../../constants/ModalsTypes';\nimport translate from '../../i18n/localization';\nimport {FilterActions, HiddenColumnActions, SortingActions} from '../../constants/FiltersConstants';\nimport {TypeOfUserParamSettings} from '../../constants/userParamsSettingsConstants';\nimport {ChartDescription, FilterGroup, SortSetting, TableReference} from '../../models/Classes';\nimport communicator from '../../api/Communicator';\nimport isEmpty from 'lodash/isEmpty';\nimport TableInstance from '../TableInstanceManager/TableInstance';\nimport TFunction from '../../models/Types/Types';\nimport TableInstanceManager from '../TableInstanceManager/TableInstanceManager';\nimport MassUpdateOperationType, {MassUpdateValueStrategy} from '../../models/Enums/MassUpdateOperationType';\nimport MassUpdateRange from '../../models/Enums/MassUpdateRange';\nimport CompareTableDto from '../CompareTableManager/CompareTableDto';\nimport NotificationController from '../Notification/NotificationController';\nimport {Severity} from '../../models/Enums/Notification';\nimport {WarehouseTypeForHelp, WarehouseUiType} from '../../models/Enums/Table';\nimport {generateQueryParams} from '../../utils/urlUtils';\nimport {confirm} from 'devextreme/ui/dialog';\nimport {DbeActions} from '../../models/Enums/HelpLinks';\nimport ForeignButtonUpdater from '../ForeignButtonManager/ForeignButtonUpdater';\nimport ForeignButtonProxy from '../ForeignButtonManager/ForeignButtonProxy';\n\nclass ToolbarPanelButtonEvents {\n\tpublic dbeDxGridRef: any;\n\tpublic actions: { [key: string]: TFunction } = {};\n\tpublic tableInstance: TableInstance;\n\tpublic tableInstanceManager: TableInstanceManager;\n\tpublic notificationController: NotificationController;\n\tprivate readonly warehouseId: number;\n\n\tconstructor(dbeDxGridRef: any, actions: any, tableInstance: TableInstance) {\n\t\tthis.warehouseId = tableInstance.warehouseId;\n\t\tthis.dbeDxGridRef = dbeDxGridRef;\n\t\tthis.actions = actions;\n\t\tthis.tableInstance = tableInstance;\n\t\tthis.tableInstanceManager = new TableInstanceManager();\n\t\tthis.notificationController = new NotificationController();\n\t\tthis.getDbeDxGridInstance = this.getDbeDxGridInstance.bind(this);\n\t}\n\n\tpublic getDbeDxGridInstance() {\n\t\treturn this.dbeDxGridRef.current && this.dbeDxGridRef.current.instance;\n\t}\n\n\tpublic asyncGridRepaint() {\n\t\tsetTimeout(() => {\n\t\t\tthis.getDbeDxGridInstance().repaint();\n\t\t}, 1000);\n\t}\n\n\tpublic exportButtonClickHandler() {\n\t\treturn () => {\n\t\t\tthis.actions.openModal(ModalsTypes.EXPORT_MODAL, {\n\t\t\t\twidth: 1000,\n\t\t\t\tmodalTitle: translate('EXPORT_TO_CSV'),\n\t\t\t\ttableInstance: this.tableInstance,\n\t\t\t});\n\t\t};\n\t}\n\n\tpublic addRowButtonClickHandler() {\n\t\treturn () => {\n\t\t\tconst dxGridInstance = this.getDbeDxGridInstance();\n\n\t\t\tconst handleSubmitEvent = (parameters, successCallback?: () => void) => {\n\t\t\t\tconst params = this.tableInstance.getTableDataModel().updateOptionsToActionParams(\n\t\t\t\t\tthis.tableInstance\n\t\t\t\t\t\t.getTableDataModel()\n\t\t\t\t\t\t.getPrimaryKeys()\n\t\t\t\t\t\t.reduce((acc, key) => ({ ...acc, [key]: null }), {}),\n\t\t\t\t\t{},\n\t\t\t\t\tObject.assign(this.tableInstance.getTableDataModel().getRowDefaultValues(), parameters, {\n\t\t\t\t\t\tID_wh: this.warehouseId,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tcommunicator.addNewRows(this.tableInstance.getTableName(), [params]).then(() => {\n\t\t\t\t\tdxGridInstance.refresh(true);\n\t\t\t\t\tsuccessCallback && successCallback();\n\t\t\t\t});\n\t\t\t};\n\t\t\tthis.actions.openModal(ModalsTypes.ADD_NEW_ROW_MODAL, {\n\t\t\t\twidth: 1000,\n\t\t\t\tmodalTitle: translate('ADD_NEW_ROW'),\n\t\t\t\ttableInstance: this.tableInstance,\n\t\t\t\thandleSubmitEvent,\n\t\t\t});\n\t\t};\n\t}\n\n\tpublic cloneRowButtonClickHandler() {\n\t\treturn async () => {\n\t\t\tconst dxGridInstance = this.getDbeDxGridInstance();\n\t\t\tconst selectedRowsKeys = await dxGridInstance.getSelectedRowKeys();\n\n\t\t\tif (selectedRowsKeys.length === 0) {\n\t\t\t\tthis.notificationController.createNotification({\n\t\t\t\t\tmessage: translate('PLEASE_SELECT_ROWS_FOR_CLONING'),\n\t\t\t\t\ttype: Severity.WARNING,\n\t\t\t\t\tdisplayTime: 5000,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.actions.openModal(ModalsTypes.CLONE_SELECTED_ROWS_MODAL, {\n\t\t\t\t\tmodalTitle: translate('CLONE_ROWS'),\n\t\t\t\t\ttableInstance: this.tableInstance,\n\t\t\t\t\twidth: '88vw',\n\t\t\t\t\tasyncRender: true,\n\t\t\t\t\tselectedRows: await dxGridInstance.getSelectedRowsData(),\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic deleteRowsButtonClickHandler() {\n\t\treturn async () => {\n\t\t\tconst dxGridInstance = this.getDbeDxGridInstance();\n\t\t\tconst selectedRowsKeys = await dxGridInstance.getSelectedRowKeys();\n\t\t\tconst params = selectedRowsKeys.map((key) =>\n\t\t\t\tthis.tableInstance.getTableDataModel().updateOptionsToActionParams(key),\n\t\t\t);\n\t\t\tconst confirmed = confirm(\n\t\t\t\ttranslate('_SELECTED_ROW_$_REMOVAL_CONFIRMATION', selectedRowsKeys.length),\n\t\t\t\t'W2MO',\n\t\t\t);\n\t\t\tconfirmed.then(async (isConfirmed) => {\n\t\t\t\tif (isConfirmed) {\n\t\t\t\t\tawait communicator\n\t\t\t\t\t\t.deleteTableRows(this.tableInstance.getTableName(), params)\n\t\t\t\t\t\t.then(({ recordsDeleted, message, parameter }) => {\n\t\t\t\t\t\t\tthis.notificationController.createNotification({\n\t\t\t\t\t\t\t\tmessage: translate(message, parameter),\n\t\t\t\t\t\t\t\ttype: recordsDeleted ? Severity.SUCCESS : Severity.ERROR,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tdxGridInstance.clearSelection();\n\t\t\t\t\t\t});\n\t\t\t\t\tawait dxGridInstance.refresh(true);\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t}\n\n\tpublic toggleSelectionButtonClickHandler(toggleSelectionButton) {\n\t\treturn async (event) => {\n\t\t\tif (toggleSelectionButton.isDown) {\n\t\t\t\tawait this.getDbeDxGridInstance().clearSelection();\n\t\t\t\ttoggleSelectionButton.setTitle(translate('SELECT_ALL_ROWS'));\n\t\t\t\tevent.element.classList.remove('deselect-all-icon');\n\t\t\t\tevent.element.classList.add('select-all-icon');\n\t\t\t} else {\n\t\t\t\tawait this.getDbeDxGridInstance().selectAll();\n\t\t\t\ttoggleSelectionButton.setTitle(translate('UNSELECT_ALL_ROWS'));\n\t\t\t\tevent.element.classList.add('deselect-all-icon');\n\t\t\t\tevent.element.classList.remove('select-all-icon');\n\t\t\t}\n\t\t\ttoggleSelectionButton.isDown = !toggleSelectionButton.isDown;\n\t\t};\n\t}\n\n\tpublic tableActionsClickHandler() {\n\t\tconst getDbeDxGridInstance = this.getDbeDxGridInstance;\n\t\tconst tableInstance = this.tableInstance;\n\t\treturn async ({ itemData: actionDetail }) => {\n\t\t\tactionDetail.getTableActionParameters(tableInstance).then(async (tableActionParametersModel) => {\n\t\t\t\tconst selectedRows = await getDbeDxGridInstance().getSelectedRowsData();\n\n\t\t\t\tconst executeTableAction = (inputParams?: object, successCallback?: () => void) => {\n\t\t\t\t\tconst params = {\n\t\t\t\t\t\tprimaryKeys: this.tableInstance.getTableDataModel().getPrimaryKeys(),\n\t\t\t\t\t\tinputParams: inputParams || {},\n\t\t\t\t\t\tselectedRows,\n\t\t\t\t\t};\n\t\t\t\t\tactionDetail\n\t\t\t\t\t\t.runTableActionByOutputType(params, this.tableInstance.getTableName())\n\t\t\t\t\t\t.then(async (res) => {\n\t\t\t\t\t\t\tif (res && res.length) {\n\t\t\t\t\t\t\t\tres.forEach(({ alias, severity, parameters }) => {\n\t\t\t\t\t\t\t\t\tthis.notificationController.createNotification({\n\t\t\t\t\t\t\t\t\t\tmessage: translate(alias, parameters),\n\t\t\t\t\t\t\t\t\t\ttype: severity,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.notificationController.createNotification({\n\t\t\t\t\t\t\t\t\tmessage: translate('_SUCCESSFUL_ACTION'),\n\t\t\t\t\t\t\t\t\ttype: Severity.SUCCESS,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tgetDbeDxGridInstance().clearSelection();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tawait getDbeDxGridInstance().refresh(true);\n\t\t\t\t\t\t\tsuccessCallback && successCallback();\n\t\t\t\t\t\t\tgetDbeDxGridInstance().endCustomLoading();\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tthis.notificationController.createNotification({\n\t\t\t\t\t\t\t\tmessage: error.errorMessage || error,\n\t\t\t\t\t\t\t\ttype: Severity.ERROR,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tif (!isEmpty(tableActionParametersModel)) {\n\t\t\t\t\tactionDetail.checkBeforeExecuteAction(selectedRows, this.tableInstance.getTableName(), () => {\n\t\t\t\t\t\tthis.actions.openModal(ModalsTypes.TABLE_ACTION_MODAL, {\n\t\t\t\t\t\t\tmodalTitle: actionDetail.header,\n\t\t\t\t\t\t\t...actionDetail,\n\t\t\t\t\t\t\tselectedRows: selectedRows.length ? { ...selectedRows[0] } : {},\n\t\t\t\t\t\t\texecuteTableAction,\n\t\t\t\t\t\t\ttableInstance,\n\t\t\t\t\t\t\tasyncRender: true,\n\t\t\t\t\t\t\tdbeDxGridInstance: getDbeDxGridInstance(),\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tif (actionDetail.confirmationRequired) {\n\t\t\t\t\t\tconst confirmed = confirm(translate('_CHECK_EXECUTION_ACTION'), 'W2MO');\n\t\t\t\t\t\tconfirmed.then((isConfirmed) => {\n\t\t\t\t\t\t\tisConfirmed && executeTableAction();\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\texecuteTableAction();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t}\n\n\tpublic importButtonClickHandler() {\n\t\tconst getDbeDxGridInstance = this.getDbeDxGridInstance;\n\t\tconst tableInstance = this.tableInstance;\n\t\treturn () => {\n\t\t\tthis.actions.openModal(ModalsTypes.IMPORT_MODAL, {\n\t\t\t\twidth: 1000,\n\t\t\t\tgetDbeDxGridInstance,\n\t\t\t\tmodalTitle: translate('IMPORT'),\n\t\t\t\thideOnOutsideClick: false,\n\t\t\t\ttableInstance,\n\t\t\t});\n\t\t};\n\t}\n\n\tpublic settingsButtonClickHandler() {\n\t\tconst getDbeDxGridInstance = this.getDbeDxGridInstance;\n\t\tconst tableInstance = this.tableInstance;\n\t\treturn () => {\n\t\t\tthis.actions.openModal(ModalsTypes.SETTINGS_MODAL, {\n\t\t\t\tmodalTitle: translate('SETTINGS'),\n\t\t\t\tdbeDxGridInstance: getDbeDxGridInstance(),\n\t\t\t\ttableInstance: tableInstance,\n\t\t\t});\n\t\t};\n\t}\n\n\tpublic reloadButtonClickHandler() {\n\t\treturn async () => {\n\t\t\ttry {\n\t\t\t\tSortSetting.applySortingSetting(this.tableInstance.selectedSortOrder, this.getDbeDxGridInstance());\n\t\t\t\tif (this.tableInstance.selectedHiddenColumnFilter) {\n\t\t\t\t\tthis.getDbeDxGridInstance().option('customizeColumns', (columns) => {\n\t\t\t\t\t\tcolumns.forEach((column) => {\n\t\t\t\t\t\t\tcolumn.visible = !this.tableInstance.selectedHiddenColumnFilter.setting.includes(\n\t\t\t\t\t\t\t\tcolumn.dataField,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tnew ForeignButtonProxy().clearCache();\n\t\t\t\tawait this.getDbeDxGridInstance().refresh(true);\n\t\t\t\tthis.asyncGridRepaint();\n\t\t\t} catch (e) {\n\t\t\t\tthis.notificationController.createNotification({\n\t\t\t\t\tmessage: e,\n\t\t\t\t\ttype: Severity.ERROR,\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic compareButtonClickHandler() {\n\t\tconst getDbeDxGridInstance = this.getDbeDxGridInstance;\n\t\tconst compareTableDto = new CompareTableDto();\n\t\tconst handleCompareTable = (compareTableDto, setCompareTableData, tableName) => {\n\t\t\tcommunicator\n\t\t\t\t.compareTables(compareTableDto, tableName)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tgetDbeDxGridInstance().endCustomLoading();\n\t\t\t\t\tconst [table, isComparable] = res;\n\t\t\t\t\tif (!isComparable) {\n\t\t\t\t\t\tthis.notificationController.createNotification({\n\t\t\t\t\t\t\tmessage: translate('TABLES_ARE_EQUAL'),\n\t\t\t\t\t\t\ttype: Severity.INFO,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetCompareTableData({ tableName: table });\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tthis.notificationController.createNotification({\n\t\t\t\t\t\tmessage: error.errorMessage,\n\t\t\t\t\t\ttype: Severity.ERROR,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t};\n\n\t\treturn async () => {\n\t\t\tcompareTableDto.resetToDefaultParams();\n\t\t\tthis.actions.openModal(ModalsTypes.COMPARE_TABLES_PARAMETERS_MODAL, {\n\t\t\t\tmodalTitle: translate('COMPARE_TABLE'),\n\t\t\t\tdbeDxGridInstance: getDbeDxGridInstance(),\n\t\t\t\ttableInstance: this.tableInstance,\n\t\t\t\twidth: 800,\n\t\t\t\thandleCompareTable,\n\t\t\t});\n\t\t};\n\t}\n\n\tpublic filterSettingButtonItemClick(filtersActions) {\n\t\tconst getDbeDxGridInstance = this.getDbeDxGridInstance;\n\t\tconst tableInstance = this.tableInstance;\n\n\t\treturn ({ itemData, component }) => {\n\t\t\tswitch (itemData.key) {\n\t\t\t\tcase FilterActions.ADD_EDIT_FILTER: {\n\t\t\t\t\tthis.actions.openModal(ModalsTypes.USER_PARAMS_SETTINGS_MODAL, {\n\t\t\t\t\t\twidth: 750,\n\t\t\t\t\t\ttableInstance,\n\t\t\t\t\t\ttype: TypeOfUserParamSettings.FILTER_SETTINGS,\n\t\t\t\t\t\thideOnOutsideClick: false,\n\t\t\t\t\t\thelpKey: DbeActions.FILTERS,\n\t\t\t\t\t\tmodalTitle: translate('FILTER'),\n\t\t\t\t\t\tdbeDxGridRef: getDbeDxGridInstance(),\n\t\t\t\t\t\tapplySetting: async (filter) => {\n\t\t\t\t\t\t\ttableInstance.tableRelatedUserParameters.setSelectedFilter(filter);\n\t\t\t\t\t\t\tawait getDbeDxGridInstance().filter(filter);\n\t\t\t\t\t\t\tcomponent.instance().option('selectedItemKey', filter.settingId);\n\t\t\t\t\t\t\tthis.asyncGridRepaint();\n\t\t\t\t\t\t},\n\t\t\t\t\t\trepaintDropDown: () =>\n\t\t\t\t\t\t\tcomponent.instance().option(\n\t\t\t\t\t\t\t\t'items',\n\t\t\t\t\t\t\t\t[...filtersActions, ...tableInstance.filters].map((filter) => ({ ...filter })),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\tunfilter: async () => {\n\t\t\t\t\t\t\tcomponent.instance().option('selectedItemKey', null);\n\t\t\t\t\t\t\ttableInstance.tableRelatedUserParameters.setSelectedFilter(null);\n\t\t\t\t\t\t\tgetDbeDxGridInstance().filter(null);\n\t\t\t\t\t\t\tthis.asyncGridRepaint();\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tconst selectedFilter = getDbeDxGridInstance().filter();\n\t\t\t\t\tcomponent.instance().option('selectedItemKey', selectedFilter ? selectedFilter.settingId : null);\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase FilterActions.UNFILTER: {\n\t\t\t\t\ttableInstance.tableRelatedUserParameters.setSelectedFilter(null);\n\t\t\t\t\tgetDbeDxGridInstance().filter(null);\n\t\t\t\t\tcomponent.instance().option('selectedItemKey', null);\n\t\t\t\t\tthis.asyncGridRepaint();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault: {\n\t\t\t\t\ttableInstance.tableRelatedUserParameters.setSelectedFilter(itemData);\n\t\t\t\t\tif (itemData.setting) {\n\t\t\t\t\t\tgetDbeDxGridInstance().filter(itemData);\n\t\t\t\t\t\tcomponent.instance().option('selectedItemKey', itemData.settingId);\n\t\t\t\t\t}\n\t\t\t\t\tthis.asyncGridRepaint();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic tableSortButtonItemClick(sortSettingsActions) {\n\t\tconst getDbeDxGridInstance = this.getDbeDxGridInstance;\n\t\tconst tableInstance = this.tableInstance;\n\n\t\treturn ({ itemData, component }) => {\n\t\t\tswitch (itemData.key) {\n\t\t\t\tcase SortingActions.ADD_EDIT_FILTER: {\n\t\t\t\t\tthis.actions.openModal(ModalsTypes.USER_PARAMS_SETTINGS_MODAL, {\n\t\t\t\t\t\twidth: 750,\n\t\t\t\t\t\ttype: TypeOfUserParamSettings.SORTING_SETTING,\n\t\t\t\t\t\ttableInstance,\n\t\t\t\t\t\tmodalTitle: translate('TABLE_SORTING'),\n\t\t\t\t\t\thelpKey: DbeActions.TABLE_SORTING,\n\t\t\t\t\t\tdbeDxGridRef: getDbeDxGridInstance(),\n\t\t\t\t\t\tapplySetting: (sortingSetting) => {\n\t\t\t\t\t\t\ttableInstance.tableRelatedUserParameters.setSelectedSortOrder(sortingSetting);\n\t\t\t\t\t\t\tSortSetting.applySortingSetting(sortingSetting, getDbeDxGridInstance());\n\t\t\t\t\t\t\tcomponent.instance().option('selectedItemKey', sortingSetting.settingId);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tunfilter: async () => {\n\t\t\t\t\t\t\tcomponent.instance().option('selectedItemKey', null);\n\t\t\t\t\t\t\ttableInstance.tableRelatedUserParameters.setSelectedSortOrder(null);\n\t\t\t\t\t\t\tgetDbeDxGridInstance().clearSorting(null);\n\t\t\t\t\t\t\tgetDbeDxGridInstance().refresh(true);\n\t\t\t\t\t\t},\n\t\t\t\t\t\trepaintDropDown: () =>\n\t\t\t\t\t\t\tcomponent.instance().option(\n\t\t\t\t\t\t\t\t'items',\n\t\t\t\t\t\t\t\t[...sortSettingsActions, ...tableInstance.sortOrderSettings].map((sortSetting) => ({\n\t\t\t\t\t\t\t\t\t...sortSetting,\n\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t});\n\t\t\t\t\tconst selectedSortSetting = tableInstance.tableRelatedUserParameters.selectedSortOrder;\n\t\t\t\t\tcomponent\n\t\t\t\t\t\t.instance()\n\t\t\t\t\t\t.option('selectedItemKey', selectedSortSetting ? selectedSortSetting.settingId : null);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase SortingActions.REMOVE_SORTING: {\n\t\t\t\t\tcomponent.instance().option('selectedItemKey', null);\n\t\t\t\t\ttableInstance.tableRelatedUserParameters.setSelectedSortOrder(null);\n\t\t\t\t\tgetDbeDxGridInstance().clearSorting();\n\t\t\t\t\tthis.asyncGridRepaint();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault: {\n\t\t\t\t\ttableInstance.tableRelatedUserParameters.setSelectedSortOrder(itemData);\n\t\t\t\t\tSortSetting.applySortingSetting(itemData, getDbeDxGridInstance());\n\t\t\t\t\tcomponent.instance().option('selectedItemKey', itemData.settingId);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic hiddenColumnSettingSplitMenuButtonItemClick(hiddenColumnActions) {\n\t\tconst getDbeDxGridInstance = this.getDbeDxGridInstance;\n\t\tconst tableInstance = this.tableInstance;\n\t\tconst showAllHiddenColumns = () => {\n\t\t\tgetDbeDxGridInstance().option('customizeColumns', (columns) => {\n\t\t\t\tcolumns.forEach((column) => {\n\t\t\t\t\tcolumn.visible = true;\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t\treturn ({ itemData, component }) => {\n\t\t\tswitch (itemData.key) {\n\t\t\t\tcase HiddenColumnActions.ADD_EDIT_FILTER: {\n\t\t\t\t\tthis.actions.openModal(ModalsTypes.USER_PARAMS_SETTINGS_MODAL, {\n\t\t\t\t\t\twidth: 750,\n\t\t\t\t\t\ttype: TypeOfUserParamSettings.HIDDEN_COLUMNS_SETTING,\n\t\t\t\t\t\ttableInstance,\n\t\t\t\t\t\thideOnOutsideClick: false,\n\t\t\t\t\t\tmodalTitle: translate('HIDDEN_COLUMNS_FILTER'),\n\t\t\t\t\t\thelpKey: DbeActions.HIDDEN_COLUMN_FILTER,\n\t\t\t\t\t\tdbeDxGridRef: getDbeDxGridInstance(),\n\t\t\t\t\t\tapplySetting: (filter) => {\n\t\t\t\t\t\t\ttableInstance.tableRelatedUserParameters.setSelectedHiddenColumnFilter(filter);\n\t\t\t\t\t\t\tgetDbeDxGridInstance().option('customizeColumns', (columns) => {\n\t\t\t\t\t\t\t\tcolumns.forEach((column) => {\n\t\t\t\t\t\t\t\t\tcolumn.visible = !filter.setting.includes(column.dataField);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcomponent.instance().option('selectedItemKey', filter.settingId);\n\t\t\t\t\t\t},\n\t\t\t\t\t\trepaintDropDown: () => {\n\t\t\t\t\t\t\tcomponent.instance().option(\n\t\t\t\t\t\t\t\t'items',\n\t\t\t\t\t\t\t\t[...hiddenColumnActions, ...tableInstance.hiddenColumnSettings].map((filter) => ({\n\t\t\t\t\t\t\t\t\t...filter,\n\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tunfilter: () => {\n\t\t\t\t\t\t\tshowAllHiddenColumns();\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tconst selectedHiddenColumnFilter =\n\t\t\t\t\t\ttableInstance.tableRelatedUserParameters.selectedHiddenColumnFilter;\n\t\t\t\t\tcomponent\n\t\t\t\t\t\t.instance()\n\t\t\t\t\t\t.option(\n\t\t\t\t\t\t\t'selectedItemKey',\n\t\t\t\t\t\t\tselectedHiddenColumnFilter ? selectedHiddenColumnFilter.settingId : null,\n\t\t\t\t\t\t);\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase HiddenColumnActions.SHOW_HIDDEN_COLUMNS: {\n\t\t\t\t\ttableInstance.tableRelatedUserParameters.setSelectedHiddenColumnFilter(null);\n\t\t\t\t\tcomponent.instance().option('selectedItemKey', null);\n\t\t\t\t\tshowAllHiddenColumns();\n\t\t\t\t\tthis.asyncGridRepaint();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault: {\n\t\t\t\t\ttableInstance.tableRelatedUserParameters.setSelectedHiddenColumnFilter(itemData);\n\t\t\t\t\tgetDbeDxGridInstance().option('customizeColumns', (columns) => {\n\t\t\t\t\t\tcolumns.forEach((column) => {\n\t\t\t\t\t\t\tcolumn.visible = !itemData.setting.includes(column.dataField);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tcomponent.instance().option('selectedItemKey', itemData.settingId);\n\t\t\t\t\tthis.asyncGridRepaint();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic getLinkButtonClickHandler() {\n\t\tconst getDbeDxGridInstance = this.getDbeDxGridInstance;\n\t\tconst tableInstance = this.tableInstance;\n\t\treturn async () => {\n\t\t\tconst selectedRows = await getDbeDxGridInstance().getSelectedRowsData();\n\n\t\t\tif (selectedRows.length !== 0) {\n\t\t\t\tconst primaryKeys = tableInstance.getTableDataModel().getPrimaryKeysAsArray();\n\t\t\t\tconst valuesByPrimaryKey = primaryKeys.reduce((acc, key) => {\n\t\t\t\t\tacc.push([key, [...new Set(selectedRows.map((row) => row[key]))]]);\n\t\t\t\t\treturn acc;\n\t\t\t\t}, []);\n\t\t\t\tconst filterForLink = FilterGroup.createFilterForLink(valuesByPrimaryKey);\n\t\t\t\tconst filterString = JSON.stringify(filterForLink);\n\t\t\t\tif (filterString.length <= FilterGroup.MAX_LENGTH_URL_FILTER) {\n\t\t\t\t\tthis.actions.openModal(ModalsTypes.LINK_WITH_FILTER, {\n\t\t\t\t\t\thideOnOutsideClick: true,\n\t\t\t\t\t\tmodalTitle: translate('LINK_WITH_FILTER'),\n\t\t\t\t\t\ttableInstance: tableInstance,\n\t\t\t\t\t\tfilterString,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tNotificationController.createNotification({\n\t\t\t\t\t\tmessage: translate('DATA_IS_TOO_LONG_FOR_URL_FILTER'),\n\t\t\t\t\t\ttype: Severity.ERROR,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.notificationController.createNotification({\n\t\t\t\t\tmessage: translate('THERE_ARE_NO_SELECTED_ROWS'),\n\t\t\t\t\ttype: Severity.WARNING,\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic openChildParentTable(modalTitle: string, isChildOrParentTable) {\n\t\tconst getDbeDxGridInstance = this.getDbeDxGridInstance;\n\t\tconst tableInstance = this.tableInstance;\n\n\t\treturn async () => {\n\t\t\tthis.actions.openModal(ModalsTypes.CHILD_PARENT_TABLE_MODAL, {\n\t\t\t\twidth: 600,\n\t\t\t\thideOnOutsideClick: true,\n\t\t\t\tmodalTitle: modalTitle,\n\t\t\t\tdbeDxGridInstance: getDbeDxGridInstance(),\n\t\t\t\ttableInstance: tableInstance,\n\t\t\t\tisChildOrParentTable,\n\t\t\t});\n\t\t};\n\t}\n\n\tpublic massUpdateButtonClickHandler(tableType) {\n\t\treturn async () => {\n\t\t\tconst executeMassiveUpdate = async (\n\t\t\t\toperation: MassUpdateOperationType,\n\t\t\t\tupdatedRow,\n\t\t\t\tmassUpdateRange: MassUpdateRange,\n\t\t\t\tsuccessCallback?: () => void,\n\t\t\t) => {\n\t\t\t\tconst selectedRows = await this.getDbeDxGridInstance().getSelectedRowsData();\n\t\t\t\tconst allAppliedFilters = this.tableInstance.getTableDataModel().getAllAppliedFilters();\n\t\t\t\tconst primaryKeys = this.tableInstance.getTableDataModel().getPrimaryKeys();\n\t\t\t\tconst bodyParams = {\n\t\t\t\t\tallAppliedFilters,\n\t\t\t\t\tselectedRows,\n\t\t\t\t\tprimaryKeys,\n\t\t\t\t\toperation,\n\t\t\t\t\tupdatedRow,\n\t\t\t\t\tmassUpdateRange,\n\t\t\t\t};\n\t\t\t\tawait communicator.massiveDataUpdate(bodyParams, this.tableInstance.getTableName()).then(() => {\n\t\t\t\t\tthis.getDbeDxGridInstance().refresh(true);\n\t\t\t\t\tsuccessCallback && successCallback();\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tconst executeMassiveUpdateForCloningRows = async (\n\t\t\t\toperation: MassUpdateOperationType,\n\t\t\t\tupdatedRows,\n\t\t\t\tmassUpdateRange: MassUpdateRange,\n\t\t\t\tsuccessCallback?: () => void,\n\t\t\t) => {\n\t\t\t\tconst dxGridInstance = this.getDbeDxGridInstance();\n\t\t\t\tconst updatedRow = updatedRows[0];\n\t\t\t\tconst store = dxGridInstance.getDataSource().store();\n\t\t\t\tconst rowsForUpdate = await (async () => {\n\t\t\t\t\tif (massUpdateRange === MassUpdateRange.SELECTED_ROWS) return dxGridInstance.getSelectedRowKeys();\n\t\t\t\t\treturn dxGridInstance.getDataSource().items();\n\t\t\t\t})();\n\n\t\t\t\tconst updateValueStrategy = MassUpdateValueStrategy[operation];\n\t\t\t\tPromise.all(\n\t\t\t\t\trowsForUpdate.map((row) => {\n\t\t\t\t\t\tconst updatedValue = updateValueStrategy(row[updatedRow.columnName], updatedRow.value);\n\t\t\t\t\t\treturn store.update(row, { [updatedRow.columnName]: updatedValue });\n\t\t\t\t\t}),\n\t\t\t\t).then(() => {\n\t\t\t\t\tdxGridInstance.refresh(true);\n\t\t\t\t\tsuccessCallback && successCallback();\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tthis.actions.openModal(ModalsTypes.MASSIVE_UPDATE_MODAL, {\n\t\t\t\twidth: 700,\n\t\t\t\thideOnOutsideClick: true,\n\t\t\t\tdbeDxGridInstance: this.getDbeDxGridInstance(),\n\t\t\t\ttableInstance: this.tableInstance,\n\t\t\t\texecuteMassiveUpdate:\n\t\t\t\t\ttableType === TableInstanceManager.CLONE_ROW_IN_ORIGINAL_TABLE\n\t\t\t\t\t\t? executeMassiveUpdateForCloningRows\n\t\t\t\t\t\t: executeMassiveUpdate,\n\t\t\t\tasyncRender: true,\n\t\t\t\tmodalTitle: translate('_MASS_UPDATE'),\n\t\t\t});\n\t\t};\n\t}\n\n\tpublic saveRowsButtonClickHandler() {\n\t\treturn () => {\n\t\t\tconst newRows = this.getDbeDxGridInstance().getDataSource().items();\n\n\t\t\tconst primaryKeys = this.tableInstance\n\t\t\t\t.getTableDataModel()\n\t\t\t\t.getPrimaryKeys()\n\t\t\t\t.reduce((acc, key) => ({ ...acc, [key]: null }), {});\n\t\t\tconst rows = newRows.map((row) => {\n\t\t\t\treturn this.tableInstance.getTableDataModel().updateOptionsToActionParams(\n\t\t\t\t\tprimaryKeys,\n\t\t\t\t\t{},\n\t\t\t\t\tObject.assign(this.tableInstance.getTableDataModel().getRowDefaultValues(), row, {\n\t\t\t\t\t\tID_wh: this.warehouseId,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tcommunicator.addNewRows(this.tableInstance.getTableName(), rows).then(() => {\n\t\t\t\tthis.actions.closeModal();\n\t\t\t\tthis.getDbeDxGridInstance().refresh(true);\n\t\t\t\tthis.asyncGridRepaint();\n\t\t\t});\n\t\t};\n\t}\n\n\tpublic saveForeignKeyButtonClickHandler() {\n\t\tconst getDbeDxGridInstance = this.getDbeDxGridInstance;\n\t\tconst originalTableInstance = this.tableInstanceManager.tableInstanceStorage.get(\n\t\t\tTableInstanceManager.ORIGINAL_TABLE,\n\t\t);\n\t\treturn async () => {\n\t\t\tconst selectedRows = await getDbeDxGridInstance().getSelectedRowsData();\n\t\t\tconst foreignButtonUpdater = new ForeignButtonUpdater(\n\t\t\t\tselectedRows,\n\t\t\t\tthis.tableInstance,\n\t\t\t\toriginalTableInstance.getTableDataModel(),\n\t\t\t\tgetDbeDxGridInstance(),\n\t\t\t);\n\n\t\t\tawait foreignButtonUpdater.update();\n\t\t};\n\t}\n\n\tpublic screenBuilderButtonClickHandler() {\n\t\tconst tableInstance = this.tableInstance;\n\n\t\treturn () => {\n\t\t\tthis.actions.openModal(ModalsTypes.SCREEN_BUILDER_CONFIG, {\n\t\t\t\thideOnOutsideClick: false,\n\t\t\t\twidth: 600,\n\t\t\t\tmodalTitle: translate('SCREEN_BUILDER'),\n\t\t\t\ttableInstance,\n\t\t\t});\n\t\t};\n\t}\n\n\tpublic columnChooserButtonClickHandler() {\n\t\tconst getDbeDxGridInstance = this.getDbeDxGridInstance;\n\t\treturn () => {\n\t\t\tgetDbeDxGridInstance().showColumnChooser();\n\t\t};\n\t}\n\n\tpublic linkReferenceTableButtonClickHandler() {\n\t\tconst getDbeDxGridInstance = this.getDbeDxGridInstance;\n\t\treturn async ({ itemData }: { itemData: TableReference }) => {\n\t\t\tconst url = itemData.createUrl(await getDbeDxGridInstance().getSelectedRowsData());\n\t\t\twindow.open(url, '_blank');\n\t\t};\n\t}\n\n\tpublic tableRelatedChartsButtonClickHandler() {\n\t\tconst getDbeDxGridInstance = this.getDbeDxGridInstance;\n\t\treturn async ({ itemData }: { itemData: ChartDescription }) => {\n\t\t\tconst allRows = this.tableInstance.getTableDataModel().getTemporaryTableData();\n\t\t\tconst selectedRows = await getDbeDxGridInstance().getSelectedRowsData();\n\t\t\tconst uniqKeysData = this.tableInstance\n\t\t\t\t.getTableDataModel()\n\t\t\t\t.prepareUniqueKeysData(selectedRows.notEmpty() ? selectedRows : allRows);\n\t\t\tthis.tableInstance.selectedRowsDexieDB.addRecord(itemData.id, uniqKeysData);\n\t\t\tconst url = new URL(window.location.toString());\n\t\t\turl.searchParams.delete('tableId');\n\t\t\turl.searchParams.append('chartId', itemData.id.toString());\n\t\t\turl.pathname = `${window['CONTEXT_PATH']}/view/api/showDbeChart`;\n\t\t\twindow.open(url, '_blank');\n\t\t};\n\t}\n\n\tpublic closeScreenBuilderTableButtonClickHandler(tableKey: { [index: string]: string } = {}, tableName: string) {\n\t\tconst { updateSplitElements, destroyChildParentTable } = this.actions;\n\t\treturn () => {\n\t\t\ttableKey.screenBuilderTableKey\n\t\t\t\t? updateSplitElements(tableKey.screenBuilderTableKey, tableName)\n\t\t\t\t: destroyChildParentTable();\n\t\t};\n\t}\n\n\tpublic executeRecalculateReportData(params) {\n\t\tconst getDbeDxGridInstance = this.getDbeDxGridInstance;\n\t\tcommunicator\n\t\t\t.recalculateReportData(this.tableInstance.getMetadata().getTable().getTableName(), params)\n\t\t\t.then((result) => {\n\t\t\t\tif (!result.length) {\n\t\t\t\t\tgetDbeDxGridInstance().refresh(true);\n\t\t\t\t} else {\n\t\t\t\t\tresult.forEach(({ alias, parameters, severity, namePinned }) => {\n\t\t\t\t\t\tthis.notificationController.createNotification({\n\t\t\t\t\t\t\tmessage: translate(alias, ...parameters),\n\t\t\t\t\t\t\ttype: severity,\n\t\t\t\t\t\t\tdisplayTime: 10000,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tthis.notificationController.createNotification({\n\t\t\t\t\tmessage: error.errorMessage || translate('UPDATE_FAILED'),\n\t\t\t\t\ttype: Severity.ERROR,\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tpublic recalculateReportDataClickHandler() {\n\t\tconst tableInstance = this.tableInstance;\n\t\treturn () => {\n\t\t\ttableInstance.getReportInputParameters().length\n\t\t\t\t? this.actions.openModal(ModalsTypes.RECALCULATE_REPORT_DATA, {\n\t\t\t\t\t\thideOnOutsideClick: false,\n\t\t\t\t\t\twidth: 600,\n\t\t\t\t\t\tmodalTitle: translate('REPORT_INPUT_PARAMETERS'),\n\t\t\t\t\t\ttableInstance,\n\t\t\t\t\t\texecuteRecalculateReportData: this.executeRecalculateReportData.bind(this),\n\t\t\t\t\t\tasyncRender: true,\n\t\t\t\t  })\n\t\t\t\t: this.executeRecalculateReportData([]);\n\t\t};\n\t}\n\n\tpublic helpButtonClickHandler() {\n\t\tconst tableInstance = this.tableInstance;\n\t\tlet helpUrl;\n\t\tconst link = tableInstance.table.getHelpLink();\n\t\tif (link) {\n\t\t\tconst [topic, section, subSection] = link && link.split('/');\n\t\t\tconst layoutTypeTopic = WarehouseTypeForHelp[WarehouseUiType[this.tableInstance.warehouseUiType]];\n\t\t\tconst queryParams = generateQueryParams({ warehouseId: this.tableInstance.warehouseId });\n\t\t\thelpUrl = new URL(\n\t\t\t\t`${window.location.origin}${global.CONTEXT_PATH}/view/help/${layoutTypeTopic}/${topic || ''}/${\n\t\t\t\t\tsection || ''\n\t\t\t\t}?${queryParams}`,\n\t\t\t);\n\t\t\tsubSection && (helpUrl.hash = subSection);\n\t\t}\n\t\treturn () => {\n\t\t\twindow.open(helpUrl, '_blank');\n\t\t};\n\t}\n\n\tpublic mergeRowsButtonClickHandler() {\n\t\treturn async () => {\n\t\t\tconst dxGridInstance = this.getDbeDxGridInstance();\n\t\t\tconst selectedRowsKeys = await dxGridInstance.getSelectedRowKeys();\n\n\t\t\tconst handleMergeRows = async (tableData, finalRow, closeModal) => {\n\t\t\t\tconst primaryKeys = this.tableInstance\n\t\t\t\t\t.getTableDataModel()\n\t\t\t\t\t.getPrimaryKeys()\n\t\t\t\t\t.reduce((acc, key) => ({ ...acc, [key]: null }), {});\n\t\t\t\tconst selectedRows = tableData.map((row) => {\n\t\t\t\t\treturn this.tableInstance.getTableDataModel().updateOptionsToActionParams(\n\t\t\t\t\t\tprimaryKeys,\n\t\t\t\t\t\t{},\n\t\t\t\t\t\tObject.assign(this.tableInstance.getTableDataModel().getRowDefaultValues(), row, {\n\t\t\t\t\t\t\tID_wh: this.warehouseId,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tconst resultRow = this.tableInstance.getTableDataModel().updateOptionsToActionParams(\n\t\t\t\t\tprimaryKeys,\n\t\t\t\t\t{},\n\t\t\t\t\tObject.assign(this.tableInstance.getTableDataModel().getRowDefaultValues(), finalRow, {\n\t\t\t\t\t\tID_wh: this.warehouseId,\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\tawait communicator.mergeRows(\n\t\t\t\t\t{ selectedRows: selectedRows, resultRow: [resultRow] },\n\t\t\t\t\tthis.tableInstance.getTableName(),\n\t\t\t\t);\n\t\t\t\tawait this.getDbeDxGridInstance().refresh(true);\n\t\t\t\tcloseModal && closeModal();\n\t\t\t};\n\n\t\t\tif (selectedRowsKeys.length < 2) {\n\t\t\t\tthis.notificationController.createNotification({\n\t\t\t\t\tmessage: translate('PLEASE_SELECT_TWO_RECORDS'),\n\t\t\t\t\ttype: Severity.WARNING,\n\t\t\t\t\tdisplayTime: 5000,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst selectedRowsData = await dxGridInstance.getSelectedRowsData();\n\n\t\t\t\tthis.actions.openModal(ModalsTypes.MERGE_ROWS_MODAL, {\n\t\t\t\t\tmodalTitle: translate('MERGE_ROWS'),\n\t\t\t\t\ttableInstance: this.tableInstance,\n\t\t\t\t\twidth: '88vw',\n\t\t\t\t\tasyncRender: true,\n\t\t\t\t\tselectedRows: selectedRowsData,\n\t\t\t\t\thandleMergeRows,\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic goToOldDBEClickHandler() {\n\t\treturn () => {\n\t\t\tconst url = new URL(window.location.toString());\n\t\t\turl.pathname = `${window['CONTEXT_PATH']}/dbe`;\n\t\t\twindow.open(url, '_blank');\n\t\t};\n\t}\n}\n\nexport default ToolbarPanelButtonEvents;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport { ToolbarPanelConfig } from './ToolbarPanelConfig';\nimport ToolbarItem from './ToolbarItem';\nimport ToolbarItemBuilder from './ToolbarItemBuilder';\nimport TableInstance from '../TableInstanceManager/TableInstance';\nimport ToolbarPanelButtonEvents from './ToolbarPanelButtonEvents';\nimport TFunction from '../../models/Types/Types';\nimport ToolbarPanelConfigByTable from './ToolbarPanelConfigByTable';\nimport KeyboardProcessor from '../../helpers/KeyboardProcessor';\n\nclass ToolbarPanelButtonManager extends KeyboardProcessor {\n\tpublic static instances: { [key: string]: ToolbarPanelButtonManager } = {};\n\n\tpublic static instance: ToolbarPanelButtonManager;\n\tpublic dbeDxGridRef: any;\n\tpublic toolbarButtons: { [key: string]: ToolbarItem } = {};\n\tpublic actions: { [key: string]: TFunction } = {};\n\tpublic toolbarPanelButtonEvents: ToolbarPanelButtonEvents = null;\n\n\tconstructor(private tableInstance: TableInstance, private tableType: string) {\n\t\tsuper(tableType);\n\t\tif (!ToolbarPanelButtonManager.instances[tableType]) {\n\t\t\tthis.getDbeDxGridInstance = this.getDbeDxGridInstance.bind(this);\n\t\t\tToolbarPanelButtonManager.instances[tableType] = this;\n\t\t\treturn this;\n\t\t}\n\t\treturn ToolbarPanelButtonManager.instances[tableType];\n\t}\n\n\tpublic setDbeDxGridRef(dbeDxGridRef) {\n\t\tthis.dbeDxGridRef = dbeDxGridRef;\n\t}\n\n\tpublic getDbeDxGridInstance() {\n\t\treturn this.dbeDxGridRef.current && this.dbeDxGridRef.current.instance;\n\t}\n\n\tpublic buildToolbarButtons() {\n\t\tthis.toolbarButtons.closeScreenBuilderTableButton = ToolbarItemBuilder.buildCloseScreenBuilderTable(\n\t\t\tthis.tableInstance,\n\t\t\tthis.toolbarPanelButtonEvents,\n\t\t);\n\t\tthis.toolbarButtons.toggleSelectionButton = ToolbarItemBuilder.buildToggleSelectionButton(\n\t\t\tthis.toolbarPanelButtonEvents,\n\t\t);\n\t\tthis.toolbarButtons.reloadButton = ToolbarItemBuilder.buildReloadButton(this.toolbarPanelButtonEvents);\n\t\tthis.toolbarButtons.tableActionsMenuButton = ToolbarItemBuilder.buildTableActionsMenuButton(\n\t\t\tthis.tableInstance,\n\t\t\tthis.toolbarPanelButtonEvents,\n\t\t);\n\t\tthis.toolbarButtons.executeTableUpdateButton = ToolbarItemBuilder.buildExecuteTableUpdateButton();\n\t\tthis.toolbarButtons.getLinkButton = ToolbarItemBuilder.buildGetLinkButton(this.toolbarPanelButtonEvents);\n\t\tthis.toolbarButtons.deleteRowsButton = ToolbarItemBuilder.buildDeleteRowsButton(this.toolbarPanelButtonEvents);\n\t\tthis.toolbarButtons.addRowButton = ToolbarItemBuilder.buildAddRowButton(this.toolbarPanelButtonEvents);\n\t\tthis.toolbarButtons.cloneRowsButton = ToolbarItemBuilder.buildCloneRowsButton(this.toolbarPanelButtonEvents);\n\t\tthis.toolbarButtons.saveRowsButton = ToolbarItemBuilder.buildSaveRowsButton(\n\t\t\tthis.tableInstance,\n\t\t\tthis.toolbarPanelButtonEvents,\n\t\t);\n\t\tthis.toolbarButtons.saveForeignKeyButton = ToolbarItemBuilder.buildSaveForeignKeyButton(\n\t\t\tthis.toolbarPanelButtonEvents,\n\t\t);\n\t\tthis.toolbarButtons.massUpdateButton = ToolbarItemBuilder.buildMassUpdateButton(\n\t\t\tthis.toolbarPanelButtonEvents,\n\t\t\tthis.tableType,\n\t\t);\n\t\tthis.toolbarButtons.exportButton = ToolbarItemBuilder.buildExportButton(this.toolbarPanelButtonEvents);\n\t\tthis.toolbarButtons.importButton = ToolbarItemBuilder.buildImportButton(this.toolbarPanelButtonEvents);\n\t\tthis.toolbarButtons.settingsButton = ToolbarItemBuilder.buildSettingsButton(this.toolbarPanelButtonEvents);\n\t\tthis.toolbarButtons.pagerPanel = ToolbarItemBuilder.buildPagerPanel();\n\t\tthis.toolbarButtons.compareButton = ToolbarItemBuilder.buildCompareButton(this.toolbarPanelButtonEvents);\n\t\tthis.toolbarButtons.masterButton = ToolbarItemBuilder.buildMasterButton();\n\t\tthis.toolbarButtons.helpButton = ToolbarItemBuilder.buildHelpButton(this.toolbarPanelButtonEvents);\n\t\tthis.toolbarButtons.linksMenuButton = ToolbarItemBuilder.buildLinksMenuButton();\n\t\tthis.toolbarButtons.filterSettingButton = ToolbarItemBuilder.buildFilterSettingButton(\n\t\t\tthis.tableInstance,\n\t\t\tthis.toolbarPanelButtonEvents,\n\t\t\tthis.setComponentInstance,\n\t\t);\n\t\tthis.toolbarButtons.hiddenColumnSettingSplitMenuButton =\n\t\t\tToolbarItemBuilder.buildHiddenColumnSettingSplitMenuButton(\n\t\t\t\tthis.tableInstance,\n\t\t\t\tthis.toolbarPanelButtonEvents,\n\t\t\t);\n\t\tthis.toolbarButtons.groupingSettingSplitMenuButton = ToolbarItemBuilder.buildGroupingSettingSplitMenuButton();\n\t\tthis.toolbarButtons.tableSortButton = ToolbarItemBuilder.buildTableSortButton(\n\t\t\tthis.tableInstance,\n\t\t\tthis.toolbarPanelButtonEvents,\n\t\t);\n\t\tthis.toolbarButtons.viewChartMenuButton = ToolbarItemBuilder.buildViewChartMenuButton(\n\t\t\tthis.tableInstance,\n\t\t\tthis.toolbarPanelButtonEvents,\n\t\t);\n\t\tthis.toolbarButtons.childRecordsMenuButton = ToolbarItemBuilder.buildChildRecordsMenuButton(\n\t\t\tthis.tableInstance,\n\t\t\tthis.toolbarPanelButtonEvents,\n\t\t);\n\t\tthis.toolbarButtons.parentRecordsMenuButton = ToolbarItemBuilder.buildParentRecordsMenuButton(\n\t\t\tthis.tableInstance,\n\t\t\tthis.toolbarPanelButtonEvents,\n\t\t);\n\t\tthis.toolbarButtons.synchronizeChildButton = ToolbarItemBuilder.buildSynchronizeChildButton();\n\t\tthis.toolbarButtons.mergeButton = ToolbarItemBuilder.buildMergeButton(this.toolbarPanelButtonEvents);\n\t\tthis.toolbarButtons.screenBuilderButton = ToolbarItemBuilder.buildScreenBuilderButton(\n\t\t\tthis.toolbarPanelButtonEvents,\n\t\t);\n\t\tthis.toolbarButtons.columnChooserButton = ToolbarItemBuilder.buildColumnChooserButton(\n\t\t\tthis.toolbarPanelButtonEvents,\n\t\t);\n\t\tthis.toolbarButtons.linkReferenceButton = ToolbarItemBuilder.buildLinkReferenceButton(\n\t\t\tthis.tableInstance,\n\t\t\tthis.toolbarPanelButtonEvents,\n\t\t);\n\n\t\tthis.toolbarButtons.recalculateReportDataButton = ToolbarItemBuilder.buildRecalculateReportDataButton(\n\t\t\tthis.toolbarPanelButtonEvents,\n\t\t);\n\t\tthis.toolbarButtons.goToOldDBEButton = ToolbarItemBuilder.buildGoToOldDBEButton(this.toolbarPanelButtonEvents);\n\n\t\treturn this;\n\t}\n\n\tpublic configureButtonsVisibility(\n\t\ttoolbarPanelConfig: ToolbarPanelConfig,\n\t\ttoolbarPanelConfigByTable: ToolbarPanelConfigByTable,\n\t) {\n\t\tthis.toolbarButtons.closeScreenBuilderTableButton.setVisible(\n\t\t\ttoolbarPanelConfig.isCloseScreenBuilderTableButtonVisible,\n\t\t);\n\t\tthis.toolbarButtons.toggleSelectionButton.setVisible(toolbarPanelConfig.isToggleSelectionButton);\n\t\tthis.toolbarButtons.reloadButton.setVisible(toolbarPanelConfig.isReloadButtonVisible);\n\t\tthis.toolbarButtons.executeTableUpdateButton.setVisible(toolbarPanelConfig.isExecuteTableUpdateButtonVisible);\n\t\tthis.toolbarButtons.getLinkButton.setVisible(toolbarPanelConfig.isGetLinkButtonVisible);\n\t\tthis.toolbarButtons.deleteRowsButton.setVisible(\n\t\t\ttoolbarPanelConfig.isDeleteRowsButtonVisible && toolbarPanelConfigByTable.isDeleteRowsButtonVisible,\n\t\t);\n\t\tthis.toolbarButtons.addRowButton.setVisible(\n\t\t\ttoolbarPanelConfig.isCloneRowsButtonVisible && toolbarPanelConfigByTable.isCloneRowsButtonVisible,\n\t\t);\n\t\tthis.toolbarButtons.cloneRowsButton.setVisible(\n\t\t\ttoolbarPanelConfig.isCloneRowsButtonVisible && toolbarPanelConfigByTable.isCloneRowsButtonVisible,\n\t\t);\n\t\tthis.toolbarButtons.saveRowsButton.setVisible(toolbarPanelConfig.isSaveRowsButtonVisible);\n\t\tthis.toolbarButtons.saveForeignKeyButton.setVisible(toolbarPanelConfig.isSaveForeignKeyButtonVisible);\n\t\tthis.toolbarButtons.massUpdateButton.setVisible(\n\t\t\ttoolbarPanelConfig.isMassUpdateButtonVisible && toolbarPanelConfigByTable.isMassUpdateButtonVisible,\n\t\t);\n\t\tthis.toolbarButtons.exportButton.setVisible(\n\t\t\ttoolbarPanelConfig.isExportButtonVisible && toolbarPanelConfigByTable.isExportButtonVisible,\n\t\t);\n\t\tthis.toolbarButtons.importButton.setVisible(\n\t\t\ttoolbarPanelConfig.isImportButtonVisible && toolbarPanelConfigByTable.isImportButtonVisible,\n\t\t);\n\t\tthis.toolbarButtons.settingsButton.setVisible(toolbarPanelConfig.isSettingsButtonVisible);\n\t\tthis.toolbarButtons.pagerPanel.setVisible(toolbarPanelConfig.isPagerPanelVisible);\n\t\tthis.toolbarButtons.compareButton.setVisible(\n\t\t\ttoolbarPanelConfig.isCompareButtonVisible && toolbarPanelConfigByTable.isCompareButtonVisible,\n\t\t);\n\t\tthis.toolbarButtons.helpButton.setVisible(\n\t\t\ttoolbarPanelConfig.isUserHelpLinkVisible && toolbarPanelConfigByTable.isUserHelpLinkVisible,\n\t\t);\n\t\tthis.toolbarButtons.linksMenuButton.setVisible(toolbarPanelConfig.isLinksMenuButtonVisible);\n\t\tthis.toolbarButtons.tableActionsMenuButton.setVisible(\n\t\t\ttoolbarPanelConfig.isTableActionsMenuButtonVisible &&\n\t\t\t\ttoolbarPanelConfigByTable.isTableActionsMenuButtonVisible,\n\t\t);\n\t\tthis.toolbarButtons.filterSettingButton.setVisible(toolbarPanelConfig.isFilterSettingButtonVisible);\n\t\tthis.toolbarButtons.hiddenColumnSettingSplitMenuButton.setVisible(\n\t\t\ttoolbarPanelConfig.isHiddenColumnSettingSplitMenuButtonVisible,\n\t\t);\n\t\tthis.toolbarButtons.groupingSettingSplitMenuButton.setVisible(toolbarPanelConfig.isGroupingFilterVisible);\n\t\tthis.toolbarButtons.tableSortButton.setVisible(toolbarPanelConfig.isTableSortButtonVisible);\n\t\tthis.toolbarButtons.childRecordsMenuButton.setVisible(toolbarPanelConfig.isChildRecordsMenuButtonVisible);\n\t\tthis.toolbarButtons.parentRecordsMenuButton.setVisible(toolbarPanelConfig.isParentRecordsMenuButtonVisible);\n\t\tthis.toolbarButtons.viewChartMenuButton.setVisible(\n\t\t\ttoolbarPanelConfig.isViewChartMenuButtonVisible && toolbarPanelConfigByTable.isViewChartMenuButtonVisible,\n\t\t);\n\t\tthis.toolbarButtons.mergeButton.setVisible(\n\t\t\ttoolbarPanelConfig.isMergeButtonVisible && toolbarPanelConfigByTable.isMergeButtonVisible,\n\t\t);\n\t\tthis.toolbarButtons.screenBuilderButton.setVisible(toolbarPanelConfig.isScreenBuilderVisible);\n\t\tthis.toolbarButtons.columnChooserButton.setVisible(toolbarPanelConfig.isColumnChooserVisible);\n\t\tthis.toolbarButtons.linkReferenceButton.setVisible(\n\t\t\ttoolbarPanelConfig.isLinkReferenceButton && toolbarPanelConfigByTable.isLinkReferenceButton,\n\t\t);\n\t\tthis.toolbarButtons.recalculateReportDataButton.setVisible(\n\t\t\ttoolbarPanelConfig.isRecalculateReportDataButtonVisible &&\n\t\t\t\ttoolbarPanelConfigByTable.isRecalculateReportDataButtonVisible,\n\t\t);\n\t\tthis.toolbarButtons.goToOldDBEButton.setVisible(true);\n\n\t\treturn this;\n\t}\n\n\tpublic registerShortcuts() {\n\t\tthis.getButtonsAsArray().forEach((button: ToolbarItem) => {\n\t\t\tbutton.getShortcuts().forEach((shortcut) => {\n\t\t\t\tthis.registerShortcut(shortcut, button.getShortcutHandler(), button.buttonName);\n\t\t\t});\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tpublic setActions(actionName, action): ToolbarPanelButtonManager {\n\t\tthis.actions[actionName] = action;\n\t\treturn this;\n\t}\n\n\tpublic getButtonsAsArray(): ToolbarItem[] {\n\t\treturn [\n\t\t\tthis.toolbarButtons.closeScreenBuilderTableButton,\n\t\t\tthis.toolbarButtons.toggleSelectionButton,\n\t\t\tthis.toolbarButtons.reloadButton,\n\t\t\tthis.toolbarButtons.executeTableUpdateButton,\n\t\t\tthis.toolbarButtons.getLinkButton,\n\t\t\tthis.toolbarButtons.deleteRowsButton,\n\t\t\tthis.toolbarButtons.addRowButton,\n\t\t\tthis.toolbarButtons.cloneRowsButton,\n\t\t\tthis.toolbarButtons.saveRowsButton,\n\t\t\tthis.toolbarButtons.saveForeignKeyButton,\n\t\t\tthis.toolbarButtons.massUpdateButton,\n\t\t\tthis.toolbarButtons.exportButton,\n\t\t\tthis.toolbarButtons.importButton,\n\t\t\tthis.toolbarButtons.settingsButton,\n\t\t\tthis.toolbarButtons.pagerPanel,\n\t\t\tthis.toolbarButtons.compareButton,\n\t\t\tthis.toolbarButtons.masterButton,\n\t\t\tthis.toolbarButtons.helpButton,\n\t\t\tthis.toolbarButtons.linksMenuButton,\n\t\t\tthis.toolbarButtons.tableActionsMenuButton,\n\t\t\tthis.toolbarButtons.filterSettingButton,\n\t\t\tthis.toolbarButtons.hiddenColumnSettingSplitMenuButton,\n\t\t\tthis.toolbarButtons.groupingSettingSplitMenuButton,\n\t\t\tthis.toolbarButtons.tableSortButton,\n\t\t\tthis.toolbarButtons.viewChartMenuButton,\n\t\t\tthis.toolbarButtons.childRecordsMenuButton,\n\t\t\tthis.toolbarButtons.parentRecordsMenuButton,\n\t\t\tthis.toolbarButtons.synchronizeChildButton,\n\t\t\tthis.toolbarButtons.mergeButton,\n\t\t\tthis.toolbarButtons.screenBuilderButton,\n\t\t\tthis.toolbarButtons.columnChooserButton,\n\t\t\tthis.toolbarButtons.linkReferenceButton,\n\t\t\tthis.toolbarButtons.recalculateReportDataButton,\n\t\t\tthis.toolbarButtons.goToOldDBEButton,\n\t\t];\n\t}\n\n\tpublic getVisibleButtons(): ToolbarItem[] {\n\t\treturn this.getButtonsAsArray().filter((button) => button.isVisible());\n\t}\n\n\tpublic get dispatchForToolbar() {\n\t\treturn this.actions['toolbarPanelDispatch'];\n\t}\n\n\tpublic createToolbarBarEvents(): ToolbarPanelButtonManager {\n\t\tthis.toolbarPanelButtonEvents = new ToolbarPanelButtonEvents(\n\t\t\tthis.dbeDxGridRef,\n\t\t\tthis.actions,\n\t\t\tthis.tableInstance,\n\t\t);\n\t\treturn this;\n\t}\n}\n\nexport default ToolbarPanelButtonManager;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nclass ToolbarPanelConfigBuilder {\n\tprivate isToggleSelectionButton = false;\n\tprivate isReloadButtonVisible = false;\n\tprivate isExecuteTableUpdateButtonVisible = false;\n\tprivate isGetLinkButtonVisible = false;\n\tprivate isDeleteRowsButtonVisible = false;\n\tprivate isCloneRowsButtonVisible = false;\n\tprivate isSaveRowsButtonVisible = false;\n\tprivate isSaveForeignKeyButtonVisible = false;\n\tprivate isFilterSettingButtonVisible = false;\n\tprivate isHiddenColumnSettingSplitMenuButtonVisible = false;\n\tprivate isTableSortButtonVisible = false;\n\tprivate isChildRecordsMenuButtonVisible = false;\n\tprivate isParentRecordsMenuButtonVisible = false;\n\tprivate isMassUpdateButtonVisible = false;\n\tprivate isExportButtonVisible = false;\n\tprivate isImportButtonVisible = false;\n\tprivate isSettingsButtonVisible = false;\n\tprivate isPagerPanelVisible = false;\n\tprivate isPagerTextBoxVisible = false;\n\tprivate isCompareButtonVisible = false;\n\tprivate isTableActionsMenuButtonVisible = false;\n\tprivate isViewChartMenuButtonVisible = false;\n\tprivate isLinksMenuButtonVisible = false;\n\tprivate isUserHelpLinkVisible = false;\n\tprivate isGroupingFilterVisible = false;\n\tprivate isMergeButtonVisible = false;\n\tprivate isScreenBuilderVisible = false;\n\tprivate isColumnChooserVisible = false;\n\tprivate isCloseScreenBuilderTableButtonVisible = false;\n\tprivate isLinkReferenceButton = false;\n\tprivate isRecalculateReportDataButtonVisible = false;\n\n\tpublic setIsReloadButtonVisible(isReloadButtonVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isReloadButtonVisible = isReloadButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsToggleSelectionButton(isToggleSelectionButton: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isToggleSelectionButton = isToggleSelectionButton;\n\t\treturn this;\n\t}\n\n\tpublic setIsExecuteTableUpdateButtonVisible(isExecuteTableUpdateButtonVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isExecuteTableUpdateButtonVisible = isExecuteTableUpdateButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsGetLinkButtonVisible(isGetLinkButtonVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isGetLinkButtonVisible = isGetLinkButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsDeleteRowsButtonVisible(isDeleteRowsButtonVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isDeleteRowsButtonVisible = isDeleteRowsButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsCloneRowsButtonVisible(isCloneRowsButtonVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isCloneRowsButtonVisible = isCloneRowsButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsSaveForeignKeyButtonVisible(isSaveForeignKeyButtonVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isSaveForeignKeyButtonVisible = isSaveForeignKeyButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsSaveRowsButtonVisible(isSaveRowsButtonVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isSaveRowsButtonVisible = isSaveRowsButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsFilterSettingButtonVisible(isFilterSettingButtonVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isFilterSettingButtonVisible = isFilterSettingButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsHiddenColumnSettingSplitMenuButtonVisible(\n\t\tisHiddenColumnSettingSplitMenuButtonVisible: boolean,\n\t): ToolbarPanelConfigBuilder {\n\t\tthis.isHiddenColumnSettingSplitMenuButtonVisible = isHiddenColumnSettingSplitMenuButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsTableSortButtonVisible(isTableSortButtonVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isTableSortButtonVisible = isTableSortButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsChildRecordsMenuButtonVisible(isChildRecordsMenuButtonVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isChildRecordsMenuButtonVisible = isChildRecordsMenuButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsParentRecordsMenuButtonVisible(isParentRecordsMenuButtonVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isParentRecordsMenuButtonVisible = isParentRecordsMenuButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsMassUpdateButtonVisible(isMassUpdateButtonVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isMassUpdateButtonVisible = isMassUpdateButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsExportButtonVisible(isExportButtonVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isExportButtonVisible = isExportButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsImportButtonVisible(isImportButtonVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isImportButtonVisible = isImportButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsSettingsButtonVisible(isSettingsButtonVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isSettingsButtonVisible = isSettingsButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsPagerPanelVisible(isPagerPanelVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isPagerPanelVisible = isPagerPanelVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsPagerTextBoxVisible(isPagerTextBoxVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isPagerTextBoxVisible = isPagerTextBoxVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsCompareButtonVisible(isCompareButtonVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isCompareButtonVisible = isCompareButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsTableActionsMenuButtonVisible(isTableActionsMenuButtonVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isTableActionsMenuButtonVisible = isTableActionsMenuButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsViewChartMenuButtonVisible(isViewChartMenuButtonVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isViewChartMenuButtonVisible = isViewChartMenuButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsLinksMenuButtonVisible(isLinksMenuButtonVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isLinksMenuButtonVisible = isLinksMenuButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsUserHelpLinkVisible(isUserHelpLinkVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isUserHelpLinkVisible = isUserHelpLinkVisible;\n\t\treturn this;\n\t}\n\n\tpublic setGroupingFilterVisible(groupingFilterVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isGroupingFilterVisible = groupingFilterVisible;\n\t\treturn this;\n\t}\n\n\tpublic setMergeButtonVisible(mergeButtonVisible: boolean): ToolbarPanelConfigBuilder {\n\t\tthis.isMergeButtonVisible = mergeButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic setScreenBuilderVisible(screenBuilderVisible) {\n\t\tthis.isScreenBuilderVisible = screenBuilderVisible;\n\t\treturn this;\n\t}\n\n\tpublic setColumnChooserVisible(columnChooserVisible) {\n\t\tthis.isColumnChooserVisible = columnChooserVisible;\n\t\treturn this;\n\t}\n\n\tpublic setCloseScreenBuilderTableButtonVisible(closeScreenBuilderTableButtonVisible) {\n\t\tthis.isCloseScreenBuilderTableButtonVisible = closeScreenBuilderTableButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic setIsLinkReferenceButton(isLinkReferenceButton) {\n\t\tthis.isLinkReferenceButton = isLinkReferenceButton;\n\t\treturn this;\n\t}\n\n\tpublic setIsRecalculateReportDataButtonVisible(isRecalculateReportDataButtonVisible) {\n\t\tthis.isRecalculateReportDataButtonVisible = isRecalculateReportDataButtonVisible;\n\t\treturn this;\n\t}\n\n\tpublic build(): ToolbarPanelConfig {\n\t\treturn new ToolbarPanelConfig(\n\t\t\tthis.isToggleSelectionButton,\n\t\t\tthis.isReloadButtonVisible,\n\t\t\tthis.isExecuteTableUpdateButtonVisible,\n\t\t\tthis.isGetLinkButtonVisible,\n\t\t\tthis.isDeleteRowsButtonVisible,\n\t\t\tthis.isCloneRowsButtonVisible,\n\t\t\tthis.isSaveRowsButtonVisible,\n\t\t\tthis.isSaveForeignKeyButtonVisible,\n\t\t\tthis.isFilterSettingButtonVisible,\n\t\t\tthis.isHiddenColumnSettingSplitMenuButtonVisible,\n\t\t\tthis.isTableSortButtonVisible,\n\t\t\tthis.isChildRecordsMenuButtonVisible,\n\t\t\tthis.isMassUpdateButtonVisible,\n\t\t\tthis.isExportButtonVisible,\n\t\t\tthis.isImportButtonVisible,\n\t\t\tthis.isSettingsButtonVisible,\n\t\t\tthis.isPagerPanelVisible,\n\t\t\tthis.isPagerTextBoxVisible,\n\t\t\tthis.isCompareButtonVisible,\n\t\t\tthis.isTableActionsMenuButtonVisible,\n\t\t\tthis.isViewChartMenuButtonVisible,\n\t\t\tthis.isLinksMenuButtonVisible,\n\t\t\tthis.isUserHelpLinkVisible,\n\t\t\tthis.isParentRecordsMenuButtonVisible,\n\t\t\tthis.isMergeButtonVisible,\n\t\t\tthis.isGroupingFilterVisible,\n\t\t\tthis.isScreenBuilderVisible,\n\t\t\tthis.isColumnChooserVisible,\n\t\t\tthis.isCloseScreenBuilderTableButtonVisible,\n\t\t\tthis.isLinkReferenceButton,\n\t\t\tthis.isRecalculateReportDataButtonVisible,\n\t\t);\n\t}\n}\n\nexport class ToolbarPanelConfig {\n\tconstructor(\n\t\tpublic isToggleSelectionButton: boolean,\n\t\tpublic isReloadButtonVisible: boolean,\n\t\tpublic isExecuteTableUpdateButtonVisible: boolean,\n\t\tpublic isGetLinkButtonVisible: boolean,\n\t\tpublic isDeleteRowsButtonVisible: boolean,\n\t\tpublic isCloneRowsButtonVisible: boolean,\n\t\tpublic isSaveRowsButtonVisible: boolean,\n\t\tpublic isSaveForeignKeyButtonVisible: boolean,\n\t\tpublic isFilterSettingButtonVisible: boolean,\n\t\tpublic isHiddenColumnSettingSplitMenuButtonVisible: boolean,\n\t\tpublic isTableSortButtonVisible: boolean,\n\t\tpublic isChildRecordsMenuButtonVisible: boolean,\n\t\tpublic isMassUpdateButtonVisible: boolean,\n\t\tpublic isExportButtonVisible: boolean,\n\t\tpublic isImportButtonVisible: boolean,\n\t\tpublic isSettingsButtonVisible: boolean,\n\t\tpublic isPagerPanelVisible: boolean,\n\t\tpublic isPagerTextBoxVisible: boolean,\n\t\tpublic isCompareButtonVisible: boolean,\n\t\tpublic isTableActionsMenuButtonVisible: boolean,\n\t\tpublic isViewChartMenuButtonVisible: boolean,\n\t\tpublic isLinksMenuButtonVisible: boolean,\n\t\tpublic isUserHelpLinkVisible: boolean,\n\t\tpublic isParentRecordsMenuButtonVisible: boolean,\n\t\tpublic isMergeButtonVisible: boolean,\n\t\tpublic isGroupingFilterVisible: boolean,\n\t\tpublic isScreenBuilderVisible: boolean,\n\t\tpublic isColumnChooserVisible: boolean,\n\t\tpublic isCloseScreenBuilderTableButtonVisible: boolean,\n\t\tpublic isLinkReferenceButton: boolean,\n\t\tpublic isRecalculateReportDataButtonVisible: boolean,\n\t) {}\n}\n\nexport default ToolbarPanelConfigBuilder;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport ToolbarPanelConfigBuilder, { ToolbarPanelConfig } from './ToolbarPanelConfig';\nimport TableInstanceManager from '../TableInstanceManager/TableInstanceManager';\n\nclass ToolbarPanelView {\n\tpublic static getToolbarPanelButtonsConfig(tableName: string, saveButtonVisibility: boolean) {\n\t\tswitch (tableName) {\n\t\t\tcase TableInstanceManager.ORIGINAL_TABLE:\n\t\t\t\treturn ToolbarPanelView.getMainViewToolbarPanelConfig();\n\t\t\tcase TableInstanceManager.CLONE_ROW_IN_ORIGINAL_TABLE:\n\t\t\t\treturn ToolbarPanelView.getCloneRowViewToolbarPanelConfig();\n\t\t\tcase TableInstanceManager.SCREEN_BUILDER_TABLE:\n\t\t\t\treturn ToolbarPanelView.getScreenBuilderTablesPanelConfig();\n\t\t\tcase TableInstanceManager.FOREIGN_KEY_TABLE:\n\t\t\t\treturn ToolbarPanelView.getForeignKeyToolbarPanelConfig(saveButtonVisibility);\n\t\t\tcase TableInstanceManager.COMPARE_TABLE_RESULT:\n\t\t\t\treturn this.getCompareTableResultConfig();\n\t\t\tdefault:\n\t\t\t\treturn ToolbarPanelView.getMainViewToolbarPanelConfig();\n\t\t}\n\t}\n\n\tprivate static getMainViewToolbarPanelConfig(): ToolbarPanelConfig {\n\t\treturn new ToolbarPanelConfigBuilder()\n\t\t\t.setIsToggleSelectionButton(true)\n\t\t\t.setIsReloadButtonVisible(true)\n\t\t\t.setIsGetLinkButtonVisible(true)\n\t\t\t.setIsDeleteRowsButtonVisible(true)\n\t\t\t.setIsCloneRowsButtonVisible(true)\n\t\t\t.setIsTableActionsMenuButtonVisible(true)\n\t\t\t.setIsFilterSettingButtonVisible(true)\n\t\t\t.setIsHiddenColumnSettingSplitMenuButtonVisible(true)\n\t\t\t.setIsTableSortButtonVisible(true)\n\t\t\t.setIsChildRecordsMenuButtonVisible(true)\n\t\t\t.setIsParentRecordsMenuButtonVisible(true)\n\t\t\t.setIsMassUpdateButtonVisible(true)\n\t\t\t.setIsViewChartMenuButtonVisible(true)\n\t\t\t.setIsExportButtonVisible(true)\n\t\t\t.setIsCompareButtonVisible(true)\n\t\t\t.setIsImportButtonVisible(true)\n\t\t\t.setIsSettingsButtonVisible(true)\n\t\t\t.setScreenBuilderVisible(true)\n\t\t\t.setColumnChooserVisible(true)\n\t\t\t.setIsLinkReferenceButton(true)\n\t\t\t.setIsRecalculateReportDataButtonVisible(true)\n\t\t\t.setMergeButtonVisible(true)\n\t\t\t.setIsUserHelpLinkVisible(true)\n\t\t\t.build();\n\t}\n\n\tprivate static getForeignKeyToolbarPanelConfig(saveButtonVisibility): ToolbarPanelConfig {\n\t\treturn new ToolbarPanelConfigBuilder()\n\t\t\t.setIsReloadButtonVisible(true)\n\t\t\t.setIsGetLinkButtonVisible(true)\n\t\t\t.setIsSaveForeignKeyButtonVisible(saveButtonVisibility)\n\t\t\t.setIsDeleteRowsButtonVisible(true)\n\t\t\t.setIsCloneRowsButtonVisible(true)\n\t\t\t.setIsFilterSettingButtonVisible(true)\n\t\t\t.setIsHiddenColumnSettingSplitMenuButtonVisible(true)\n\t\t\t.setIsTableSortButtonVisible(true)\n\t\t\t.setIsChildRecordsMenuButtonVisible(true)\n\t\t\t.setIsParentRecordsMenuButtonVisible(true)\n\t\t\t.setIsExportButtonVisible(true)\n\t\t\t.setIsImportButtonVisible(true)\n\t\t\t.setIsSettingsButtonVisible(true)\n\t\t\t.setColumnChooserVisible(true)\n\t\t\t.setIsLinkReferenceButton(true)\n\t\t\t.build();\n\t}\n\n\tprivate static getCloneRowViewToolbarPanelConfig(): ToolbarPanelConfig {\n\t\treturn new ToolbarPanelConfigBuilder()\n\t\t\t.setIsSaveRowsButtonVisible(true)\n\t\t\t.setIsDeleteRowsButtonVisible(true)\n\t\t\t.setIsMassUpdateButtonVisible(true)\n\t\t\t.setIsToggleSelectionButton(true)\n\t\t\t.build();\n\t}\n\n\tprivate static getScreenBuilderTablesPanelConfig(): ToolbarPanelConfig {\n\t\treturn new ToolbarPanelConfigBuilder()\n\t\t\t.setIsToggleSelectionButton(true)\n\t\t\t.setIsReloadButtonVisible(true)\n\t\t\t.setIsGetLinkButtonVisible(true)\n\t\t\t.setIsDeleteRowsButtonVisible(true)\n\t\t\t.setIsCloneRowsButtonVisible(true)\n\t\t\t.setIsTableActionsMenuButtonVisible(true)\n\t\t\t.setIsFilterSettingButtonVisible(true)\n\t\t\t.setIsHiddenColumnSettingSplitMenuButtonVisible(true)\n\t\t\t.setIsTableSortButtonVisible(true)\n\t\t\t.setIsChildRecordsMenuButtonVisible(true)\n\t\t\t.setIsParentRecordsMenuButtonVisible(true)\n\t\t\t.setIsMassUpdateButtonVisible(true)\n\t\t\t.setIsExportButtonVisible(true)\n\t\t\t.setIsImportButtonVisible(true)\n\t\t\t.setIsSettingsButtonVisible(true)\n\t\t\t.setIsCompareButtonVisible(true)\n\t\t\t.setColumnChooserVisible(true)\n\t\t\t.setCloseScreenBuilderTableButtonVisible(true)\n\t\t\t.setIsLinkReferenceButton(true)\n\t\t\t.build();\n\t}\n\n\tprivate static getCompareTableResultConfig(): ToolbarPanelConfig {\n\t\treturn new ToolbarPanelConfigBuilder()\n\t\t\t.setIsHiddenColumnSettingSplitMenuButtonVisible(true)\n\t\t\t.setIsTableSortButtonVisible(true)\n\t\t\t.setIsPagerPanelVisible(true)\n\t\t\t.setIsPagerTextBoxVisible(true)\n\t\t\t.build();\n\t}\n}\n\nexport default ToolbarPanelView;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport TableInstance from '../TableInstanceManager/TableInstance';\n\nclass ToolbarPanelConfigByTable {\n\tprivate tableInstance: TableInstance;\n\n\tpublic isCloneRowsButtonVisible: boolean;\n\tpublic isDeleteRowsButtonVisible: boolean;\n\tpublic isTableActionsMenuButtonVisible: boolean;\n\tpublic isExportButtonVisible: boolean;\n\tpublic isImportButtonVisible: boolean;\n\tpublic isMassUpdateButtonVisible: boolean;\n\tpublic isCompareButtonVisible: boolean;\n\tpublic isRecalculateReportDataButtonVisible: boolean;\n\tpublic isMergeButtonVisible: boolean;\n\tpublic isUserHelpLinkVisible: boolean;\n\tpublic isViewChartMenuButtonVisible: boolean;\n\tpublic isLinkReferenceButton: boolean;\n\n\tstatic build(tableInstance) {\n\t\treturn new ToolbarPanelConfigByTable(tableInstance)\n\t\t\t.setIsCloneRowsButtonVisible()\n\t\t\t.setIsDeleteRowsButtonVisible()\n\t\t\t.setIsTableActionsMenuButtonVisible()\n\t\t\t.setIsExportButtonVisible()\n\t\t\t.setIsImportButtonVisible()\n\t\t\t.setIsMassUpdateButtonVisible()\n\t\t\t.setIsCompareButtonVisible()\n\t\t\t.setIsRecalculateReportDataButtonVisible()\n\t\t\t.setIsMergeButtonVisible()\n\t\t\t.setIsUserHelpLinkVisible()\n\t\t\t.setIsViewChartMenuButtonVisible()\n\t\t\t.setIsLinkReferenceButton();\n\t}\n\tconstructor(tableInstance) {\n\t\tthis.tableInstance = tableInstance;\n\t}\n\n\tprivate setIsCloneRowsButtonVisible(): ToolbarPanelConfigByTable {\n\t\tthis.isCloneRowsButtonVisible = this.tableInstance.canAddRecords();\n\t\treturn this;\n\t}\n\n\tprivate setIsDeleteRowsButtonVisible(): ToolbarPanelConfigByTable {\n\t\tthis.isDeleteRowsButtonVisible = this.tableInstance.canDelete();\n\t\treturn this;\n\t}\n\n\tprivate setIsTableActionsMenuButtonVisible(): ToolbarPanelConfigByTable {\n\t\tthis.isTableActionsMenuButtonVisible = this.tableInstance.canExecuteTableAction();\n\t\treturn this;\n\t}\n\n\tprivate setIsExportButtonVisible(): ToolbarPanelConfigByTable {\n\t\tthis.isExportButtonVisible = this.tableInstance.canExport();\n\t\treturn this;\n\t}\n\n\tprivate setIsImportButtonVisible(): ToolbarPanelConfigByTable {\n\t\tthis.isImportButtonVisible = this.tableInstance.canImport();\n\t\treturn this;\n\t}\n\n\tprivate setIsMassUpdateButtonVisible(): ToolbarPanelConfigByTable {\n\t\tthis.isMassUpdateButtonVisible = this.tableInstance.canMassUpdate();\n\t\treturn this;\n\t}\n\n\tprivate setIsCompareButtonVisible(): ToolbarPanelConfigByTable {\n\t\tthis.isCompareButtonVisible = this.tableInstance.canCompareTable();\n\t\treturn this;\n\t}\n\n\tprivate setIsRecalculateReportDataButtonVisible(): ToolbarPanelConfigByTable {\n\t\tthis.isRecalculateReportDataButtonVisible = this.tableInstance.canExecuteUpdateTable();\n\t\treturn this;\n\t}\n\n\tprivate setIsMergeButtonVisible(): ToolbarPanelConfigByTable {\n\t\tthis.isMergeButtonVisible = this.tableInstance.canMergeRows();\n\t\treturn this;\n\t}\n\n\tprivate setIsUserHelpLinkVisible(): ToolbarPanelConfigByTable {\n\t\tthis.isUserHelpLinkVisible = this.tableInstance.hasHelpButton();\n\t\treturn this;\n\t}\n\n\tprivate setIsViewChartMenuButtonVisible(): ToolbarPanelConfigByTable {\n\t\tthis.isViewChartMenuButtonVisible = this.tableInstance.isExistTableRelatedCharts;\n\t\treturn this;\n\t}\n\n\tprivate setIsLinkReferenceButton(): ToolbarPanelConfigByTable {\n\t\tthis.isLinkReferenceButton = this.tableInstance.isExistTableReferences;\n\t\treturn this;\n\t}\n}\n\nexport default ToolbarPanelConfigByTable;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport { useMemo } from 'react';\nimport ToolbarPanelButtonManager from '../services/ToolbarPanelManager/ToolbarPanelButtonManager';\nimport ToolbarPanelView from '../services/ToolbarPanelManager/ToolbarPanelView';\nimport TableInstanceManager from '../services/TableInstanceManager/TableInstanceManager';\nimport ToolbarPanelConfigByTable from '../services/ToolbarPanelManager/ToolbarPanelConfigByTable';\nimport useScreenBuilderContext from '../context/ScreenBuilderContext';\nimport useModalWindowPopupContext from '../context/ModalPopupContext';\n\nconst useButtonManager = (tableType, tableInstance, dbeDxGridRef, saveButtonVisibility) => {\n\tconst { updateSplitElements, destroyChildParentTable, destroyScreenBuilder, screenBuilder } =\n\t\tuseScreenBuilderContext();\n\n\tconst { openModalWithProps, closeModal } = useModalWindowPopupContext();\n\n\tconst tableInstanceManager = new TableInstanceManager();\n\treturn useMemo<ToolbarPanelButtonManager>(() => {\n\t\tconst buttonManager = new ToolbarPanelButtonManager(tableInstance, tableType);\n\t\tif (dbeDxGridRef) {\n\t\t\tbuttonManager.setDbeDxGridRef(dbeDxGridRef);\n\t\t}\n\n\t\ttableInstanceManager.setButtonManager(buttonManager);\n\t\ttableInstance.setToolbarPanelButtonManager(buttonManager);\n\t\treturn buttonManager\n\t\t\t.setActions('updateSplitElements', (tableToDelete, tableName) => {\n\t\t\t\tdestroyScreenBuilder();\n\t\t\t\treturn updateSplitElements(tableToDelete, tableName, screenBuilder);\n\t\t\t})\n\t\t\t.setActions('destroyChildParentTable', destroyChildParentTable)\n\t\t\t.setActions('openModal', openModalWithProps)\n\t\t\t.setActions('closeModal', closeModal)\n\t\t\t.createToolbarBarEvents()\n\t\t\t.buildToolbarButtons()\n\t\t\t.registerShortcuts()\n\t\t\t.configureButtonsVisibility(\n\t\t\t\tToolbarPanelView.getToolbarPanelButtonsConfig(tableType, saveButtonVisibility),\n\t\t\t\tToolbarPanelConfigByTable.build(tableInstance),\n\t\t\t);\n\t}, [tableType, screenBuilder]);\n};\n\nexport default useButtonManager;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { Fragment, useEffect, useReducer } from 'react';\nimport Toolbar, { Item } from 'devextreme-react/toolbar';\nimport ToolbarItem from '../../services/ToolbarPanelManager/ToolbarItem';\n\nimport useButtonManager from '../../hooks/useButtonManager';\n\nimport './style.css';\nfunction reducer(state, action) {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_SELECTED_ITEM_KEY':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[action.payload.buttonName]: {\n\t\t\t\t\t...state[action.payload.buttonName],\n\t\t\t\t\tselectedItemKey: action.payload.selectedItemKey,\n\t\t\t\t},\n\t\t\t};\n\t\tcase 'UPDATE_ITEMS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[action.payload.buttonName]: {\n\t\t\t\t\t...state[action.payload.buttonName],\n\t\t\t\t\titems: [...state[action.payload.buttonName].items, ...action.payload.items],\n\t\t\t\t},\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nconst ToolbarPanel = ({ tableType, tableInstance, dbeDxGridRef, toolbarRef, saveButtonVisibility }) => {\n\tconst buttonsManager = useButtonManager(tableType, tableInstance, dbeDxGridRef, saveButtonVisibility);\n\tconst [state, dispatch] = useReducer(reducer, {}, () => {\n\t\treturn buttonsManager.getVisibleButtons().reduce((acc, button) => {\n\t\t\treturn { ...acc, [button.buttonName]: button.getButtonOptions() };\n\t\t}, {});\n\t});\n\n\tuseEffect(() => {\n\t\tbuttonsManager.setActions('toolbarPanelDispatch', dispatch);\n\t}, []);\n\treturn (\n\t\t<Fragment>\n\t\t\t<Toolbar ref={toolbarRef} className={'toolbar-buttons-holder'} id={'toolbar-holder'}>\n\t\t\t\t{buttonsManager.getVisibleButtons().map((button: ToolbarItem) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Item key={button.getKey()} {...button.getItemProps()} options={state[button.buttonName]}>\n\t\t\t\t\t\t\t{button.getChildren()}\n\t\t\t\t\t\t</Item>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Toolbar>\n\t\t</Fragment>\n\t);\n};\n\nToolbarPanel.defaultProps = {\n\tcloseModal: () => null,\n};\n\nexport default ToolbarPanel;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport Form, { ButtonItem, SimpleItem } from 'devextreme-react/form';\nimport { IEditorComponentProps } from '../../../../models/Interfaces/ComponentInterfaces';\nimport { isDefined } from '../../../../utils/utils';\nimport ValidationError from '../../../../models/Classes/ValidationError';\n\nimport './style.css';\n\nconst EditorComponentCustomOperations = ({ data, column }: IEditorComponentProps) => {\n\tconst formRef = useRef<Form>();\n\tconst [values, setValues] = useState(() => {\n\t\treturn data.value ? (typeof data.value === 'string' ? [data.value] : data.value) : [column.getDefaultValue()];\n\t});\n\n\tuseEffect(() => {\n\t\tdata.setValue(values);\n\t}, []);\n\n\tconst validateForm = useCallback(() => {\n\t\treturn formRef?.current?.instance.validate();\n\t}, []);\n\n\tconst saveValues = useCallback((index: number, value) => {\n\t\tsetValues((prev) => {\n\t\t\tconst values = [...prev.slice(0, index), value || column.getDefaultValue(), ...prev.slice(index + 1)];\n\t\t\tdata.setValue(values);\n\t\t\tdata.closeEditor();\n\t\t\treturn values;\n\t\t});\n\t}, []);\n\n\tconst deleteValues = useCallback((index: number) => {\n\t\tsetValues((prev) => {\n\t\t\tconst values = [...prev.slice(0, index), ...prev.slice(index + 1)];\n\t\t\tdata.setValue(values);\n\t\t\tdata.closeEditor();\n\t\t\treturn values;\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className={'editor-component-filter-builder'}>\n\t\t\t<Form ref={formRef}>\n\t\t\t\t{values.reduce((acc, value, index) => {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\t\tkey={`${value}-${index}-item`}\n\t\t\t\t\t\t\teditorType={column.getViewModel().getInputType()}\n\t\t\t\t\t\t\tcomponent={column.getCellRenderForFilterBuilder(value?.foreignButtonId)}\n\t\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\t\t...column.getEditorOptionsForFilterBuilder(value || column.getDefaultValue(), (e) => {\n\t\t\t\t\t\t\t\t\tconst validation = validateForm();\n\t\t\t\t\t\t\t\t\tif (!validation.isValid) {\n\t\t\t\t\t\t\t\t\t\tvalidation.brokenRules.forEach(({ message }) => {\n\t\t\t\t\t\t\t\t\t\t\tthrow new ValidationError(message);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tsaveValues(index, e.value);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tsetValueToBuilder: (value) => saveValues(index, value),\n\t\t\t\t\t\t\t\tcolumnName: column.getName(),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{column.getChildren()}\n\t\t\t\t\t\t</SimpleItem>,\n\t\t\t\t\t\tvalues.length !== 1 ? (\n\t\t\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\t\t\tkey={`${value}-${index}-button`}\n\t\t\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\t\t\ticon: 'remove',\n\t\t\t\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\t\t\t\tonClick: () => deleteValues(index),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : null,\n\t\t\t\t\t];\n\t\t\t\t}, [])}\n\n\t\t\t\t<ButtonItem\n\t\t\t\t\tcssClass={'add-button'}\n\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\ticon: 'add',\n\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\tsetValues((prevValues) => {\n\t\t\t\t\t\t\t\tconst values = [...prevValues, column.getDefaultValue()];\n\t\t\t\t\t\t\t\tdata.setValue(values);\n\t\t\t\t\t\t\t\treturn values;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdisabled: values.some((value) => !isDefined(value) || value === ''),\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default EditorComponentCustomOperations;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport Form, { ButtonItem, GroupItem, SimpleItem } from 'devextreme-react/form';\nimport React, { useEffect, useMemo, useState } from 'react';\n\nimport './style.css';\n\nconst endsWith = new RegExp('^(%)(.*)$', 'gm');\nconst startWith = new RegExp('^(.*)(%)$', 'gm');\n\nconst SearchInText = ({ data }) => {\n\tconst defaultValue = useMemo(() => data.value || '', []);\n\tconst [inputValue, setInputValue] = useState(defaultValue);\n\tconst [leftPercent, setLeftPercent] = useState(() => {\n\t\treturn !!defaultValue.matchAll(endsWith).next().value;\n\t});\n\tconst [rightPercent, setRightPercent] = useState(() => {\n\t\treturn !!defaultValue.matchAll(startWith).next().value;\n\t});\n\n\tuseEffect(() => {\n\t\tdata.setValue(inputValue);\n\t}, [inputValue]);\n\n\treturn (\n\t\t<Form>\n\t\t\t<GroupItem colCount={6}>\n\t\t\t\t<ButtonItem\n\t\t\t\t\tcolSpan={1}\n\t\t\t\t\tcssClass={'ends-with percent-btn'}\n\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\telementAttr: {\n\t\t\t\t\t\t\tclass: leftPercent ? 'active' : '',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ticon: 'percent',\n\t\t\t\t\t\tstylingMode: 'text',\n\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\tsetInputValue((prev) => {\n\t\t\t\t\t\t\t\tif (prev.matchAll(endsWith).next().value) {\n\t\t\t\t\t\t\t\t\tsetLeftPercent(false);\n\t\t\t\t\t\t\t\t\treturn prev.matchAll(endsWith).next().value[2];\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetLeftPercent(true);\n\t\t\t\t\t\t\t\t\treturn `%${prev}`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<SimpleItem\n\t\t\t\t\tcolSpan={4}\n\t\t\t\t\teditorType={'dxTextBox'}\n\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\tvalue: inputValue,\n\t\t\t\t\t\telementAttr: { class: 'searchInTextInput' },\n\t\t\t\t\t\tonValueChanged: ({ value }) => {\n\t\t\t\t\t\t\tsetInputValue(value);\n\t\t\t\t\t\t\tsetLeftPercent(() => {\n\t\t\t\t\t\t\t\treturn !!value.matchAll(endsWith).next().value;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tsetRightPercent(() => {\n\t\t\t\t\t\t\t\treturn !!value.matchAll(startWith).next().value;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t></SimpleItem>\n\t\t\t\t<ButtonItem\n\t\t\t\t\tcolSpan={1}\n\t\t\t\t\tcssClass={'percent-btn'}\n\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\telementAttr: {\n\t\t\t\t\t\t\tclass: rightPercent ? 'active' : '',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ticon: 'percent',\n\t\t\t\t\t\tstylingMode: 'text',\n\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\tsetInputValue((prev) => {\n\t\t\t\t\t\t\t\tif (prev.matchAll(startWith).next().value) {\n\t\t\t\t\t\t\t\t\tsetRightPercent(false);\n\t\t\t\t\t\t\t\t\treturn prev.matchAll(startWith).next().value[1];\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetRightPercent(true);\n\t\t\t\t\t\t\t\t\treturn `${prev}%`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</GroupItem>\n\t\t</Form>\n\t);\n};\n\nexport default SearchInText;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport translate from '../i18n/localization';\n\nexport const fieldSeparator = [\n\t{ id: 0, text: translate('SEMICOLON'), value: ';' },\n\t{ id: 1, text: translate('COMMA'), value: ',' },\n\t{ id: 2, text: translate('COLON'), value: ':' },\n\t{ id: 3, text: translate('PIPE'), value: '|' },\n\t{ id: 3, text: translate('EXCLAMATION_MARK'), value: '!' },\n];\n\nexport const floatingPointSeparator = [\n\t{ id: 0, text: translate('PERIOD'), value: '.' },\n\t{ id: 1, text: translate('COMMA'), value: ',' },\n];\n\nexport const nullValueEscape = [\n\t{ id: 0, text: translate('_CSV_NULL'), value: '\\\\N' },\n\t{ id: 1, text: translate('EMPTY_STRING'), value: '' },\n];\n// export const recordSeparator = [\n// \t{ id: 0, text: translate('_CSV_NULL'), value: 'LINE_BREAK_UNIX' },\n// \t{ id: 1, text: translate('_CSV_DELIMITER_MAC'), value: 'LINE_BREAK_MAC' },\n// \t{ id: 2, text: translate('_CSV_DELIMITER_WINDOWS'), value: 'LINE_BREAK_WINDOWS' },\n// ];\nexport const recordSeparator = [\n\t{ id: 0, text: translate('_CSV_NULL'), value: '\\n' },\n\t{ id: 1, text: translate('_CSV_DELIMITER_MAC'), value: '\\r' },\n\t{ id: 2, text: translate('_CSV_DELIMITER_WINDOWS'), value: '\\r\\n' },\n];\n\nexport const thousandSeparator = [\n\t{ id: 0, text: translate('EMPTY_STRING'), value: ' ' },\n\t{ id: 1, text: translate('PERIOD'), value: '.' },\n\t{ id: 2, text: translate('COMMA'), value: ',' },\n];\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport Form, { ButtonItem, GroupItem, SimpleItem } from 'devextreme-react/form';\nimport RadioGroup from 'devextreme-react/radio-group';\nimport translate from '../../i18n/localization';\nimport {\n\tfieldSeparator,\n\tfloatingPointSeparator,\n\tnullValueEscape,\n\trecordSeparator,\n} from '../../constants/separators.item';\nimport communicator from '../../api/Communicator';\nimport downloadFile from '../../utils/fileDownload';\nimport { useDbeActionsHelpLink } from '../../hooks/useHelpLink';\nimport { DbeActions } from '../../models/Enums/HelpLinks';\nimport { HelpIcon } from '../../assets/icons';\nimport { ColumnModel, FilterGroup } from '../../models/Classes';\nimport NotificationController from '../../services/Notification/NotificationController';\nimport { Severity } from '../../models/Enums/Notification';\nimport { COLUMN_SIZE_LIMIT, PRIMARY_KEY_SIZE_LIMIT, ROW_QUANTITY_LIMIT } from '../../constants/ExportModalConstants';\n\nconst ExportModal = ({ closeModal, props: { tableInstance } }) => {\n\tconst tableName = useMemo(() => tableInstance.getTableName(), []);\n\n\tconst [exportParams, setExportParams] = useState({\n\t\tfieldSeparator: fieldSeparator[0],\n\t\tfloatingPointSeparator: floatingPointSeparator[0],\n\t\tnullValueEscape: nullValueEscape[0],\n\t\trecordSeparator: recordSeparator[0],\n\t\texportIdsCheckBox: false,\n\t\tnotExportHiddenColumns: false,\n\t\tsortByPrimaryKey: true,\n\t});\n\n\tconst setExportParameters = useCallback((paramName, value) => {\n\t\tsetExportParams((prevParams) => ({ ...prevParams, [paramName]: value }));\n\t}, []);\n\n\tconst submitHandler = useCallback(() => {\n\t\tconst columnsForHiding = (() => {\n\t\t\tif (exportParams.notExportHiddenColumns) {\n\t\t\t\tconst alreadyHiddenColumns = tableInstance\n\t\t\t\t\t.getColumnChooserRef()\n\t\t\t\t\t.getColumns()\n\t\t\t\t\t.map((column) => column.dataField);\n\t\t\t\tconst { hiddenColumns, exportedHiddenColumnsCaption, hiddenColumnNames } = tableInstance\n\t\t\t\t\t.getTableDataModel()\n\t\t\t\t\t.columns.reduce(\n\t\t\t\t\t\t(acc, columnModel: ColumnModel) => {\n\t\t\t\t\t\t\tif (!alreadyHiddenColumns.includes(columnModel.getName())) {\n\t\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst defaultValue = columnModel.columnViewModel.defaultValue;\n\t\t\t\t\t\t\tif (!columnModel.isRequired || (defaultValue !== undefined && defaultValue !== null)) {\n\t\t\t\t\t\t\t\tacc.hiddenColumns.push(columnModel.getName());\n\t\t\t\t\t\t\t\tacc.hiddenColumnNames.push(columnModel.getCaption());\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tacc.exportedHiddenColumnsCaption.push(columnModel.getCaption());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ hiddenColumns: [], exportedHiddenColumnsCaption: [], hiddenColumnNames: [] },\n\t\t\t\t\t);\n\t\t\t\tif (hiddenColumnNames.length) {\n\t\t\t\t\tNotificationController.createNotification({\n\t\t\t\t\t\tmessage: translate('NOT_EXPORTED_COLUMNS_$', hiddenColumnNames.join(', ')),\n\t\t\t\t\t\ttype: Severity.SUCCESS,\n\t\t\t\t\t\tdisplayTime: 7000,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (exportedHiddenColumnsCaption.length) {\n\t\t\t\t\tNotificationController.createNotification({\n\t\t\t\t\t\tmessage: translate('REQUIRED_COLUMNS_WERE_EXPORTED_$', exportedHiddenColumnsCaption.join(', ')),\n\t\t\t\t\t\ttype: Severity.WARNING,\n\t\t\t\t\t\tdisplayTime: 7000,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn hiddenColumns.join(', ');\n\t\t\t}\n\t\t\treturn '';\n\t\t})();\n\n\t\tconst rowsCount = tableInstance.getTableDataModel().getTotalRowCount();\n\t\tconst columnCount = tableInstance.getTableDataModel().columns.length;\n\t\tconst primaryColCount = tableInstance.getTableDataModel().getPrimaryKeys().length;\n\t\tif (\n\t\t\trowsCount > ROW_QUANTITY_LIMIT &&\n\t\t\tcolumnCount > COLUMN_SIZE_LIMIT &&\n\t\t\tprimaryColCount > PRIMARY_KEY_SIZE_LIMIT\n\t\t) {\n\t\t\tNotificationController.createNotification({\n\t\t\t\tmessage: translate('EXPORT_MAY_TAKE_LONG_TIME'),\n\t\t\t\ttype: Severity.WARNING,\n\t\t\t});\n\t\t}\n\n\t\tconst csvExportSettings = {\n\t\t\tfieldSeparator: exportParams.fieldSeparator.value,\n\t\t\trecordSeparator: exportParams.recordSeparator.value,\n\t\t\tfloatingPointSeparator: exportParams.floatingPointSeparator.value,\n\t\t\tnullValueEscape: exportParams.nullValueEscape.value,\n\t\t};\n\t\tconst parameters = {\n\t\t\tcsvExportSettings,\n\t\t\treferencesAsIds: exportParams.exportIdsCheckBox,\n\t\t\tsortByPrimaryKey: exportParams.sortByPrimaryKey,\n\t\t\thiddenColumns: columnsForHiding,\n\t\t};\n\n\t\tconst formData = new FormData();\n\t\tformData.append('parameters', JSON.stringify(parameters));\n\t\tformData.append(\n\t\t\t'filter',\n\t\t\tJSON.stringify(tableInstance.getTableDataModel().getAllAppliedFilters() || FilterGroup.create(null)),\n\t\t);\n\t\tformData.append('childParentTableInfos', JSON.stringify([]));\n\n\t\tcommunicator\n\t\t\t.exportTableData(formData, tableName)\n\t\t\t.then(async (res) => {\n\t\t\t\tif (res) {\n\t\t\t\t\tdownloadFile(await res.blob(), tableInstance.getExportedDataSuggestedName());\n\t\t\t\t}\n\t\t\t})\n\t\t\t.finally(() => closeModal());\n\t}, [exportParams]);\n\n\tuseEffect(() => {\n\t\tcommunicator.retrieveUserSettings('csvExport', tableName).then((exportSettings) => {\n\t\t\tconst storedParams = {\n\t\t\t\tfieldSeparator: fieldSeparator.find((item) => item.value === exportSettings.fieldSeparator),\n\t\t\t\tfloatingPointSeparator: floatingPointSeparator.find(\n\t\t\t\t\t(item) => item.value === exportSettings.floatingPointSeparator,\n\t\t\t\t),\n\t\t\t\tnullValueEscape: nullValueEscape.find((item) => item.value === exportSettings.nullValueEscape),\n\t\t\t\trecordSeparator: recordSeparator.find((item) => item.value === exportSettings.recordSeparator),\n\t\t\t};\n\t\t\tsetExportParams((prevParams) => ({ ...prevParams, ...storedParams }));\n\t\t});\n\t}, []);\n\n\tconst helpLink = useDbeActionsHelpLink(tableInstance.warehouseUiType, DbeActions.EXPORT);\n\n\tuseEffect(() => {\n\t\tconst params = {\n\t\t\tfieldSeparator: exportParams.fieldSeparator.value,\n\t\t\tfloatingPointSeparator: exportParams.floatingPointSeparator.value,\n\t\t\tnullValueEscape: exportParams.nullValueEscape.value,\n\t\t\trecordSeparator: exportParams.recordSeparator.value,\n\t\t};\n\n\t\tcommunicator.storeUserSettings('csvExport', JSON.stringify(params), tableName);\n\t}, [exportParams]);\n\n\treturn (\n\t\t<div>\n\t\t\t<Form colCount={1} id=\"form\">\n\t\t\t\t<SimpleItem template={translate('_USE_UTF_8_ENCODING')} />\n\t\t\t\t<GroupItem colCount={4}>\n\t\t\t\t\t<GroupItem caption={translate('FIELD_SEPARATOR')}>\n\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\titems={fieldSeparator}\n\t\t\t\t\t\t\tdefaultValue={exportParams.fieldSeparator}\n\t\t\t\t\t\t\tvalue={exportParams.fieldSeparator}\n\t\t\t\t\t\t\tlayout=\"vertical\"\n\t\t\t\t\t\t\tonValueChanged={({ value }) => setExportParameters('fieldSeparator', value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GroupItem>\n\t\t\t\t\t<GroupItem caption={translate('FLOATING_POINT_SEPARATOR')}>\n\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\titems={floatingPointSeparator}\n\t\t\t\t\t\t\tdefaultValue={exportParams.floatingPointSeparator}\n\t\t\t\t\t\t\tvalue={exportParams.floatingPointSeparator}\n\t\t\t\t\t\t\tlayout=\"vertical\"\n\t\t\t\t\t\t\tonValueChanged={({ value }) => setExportParameters('floatingPointSeparator', value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GroupItem>\n\t\t\t\t\t<GroupItem caption={translate('_NULL_VALUE_ESCAPE')}>\n\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\titems={nullValueEscape}\n\t\t\t\t\t\t\tdefaultValue={exportParams.nullValueEscape}\n\t\t\t\t\t\t\tvalue={exportParams.nullValueEscape}\n\t\t\t\t\t\t\tlayout=\"vertical\"\n\t\t\t\t\t\t\tonValueChanged={({ value }) => setExportParameters('nullValueEscape', value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GroupItem>\n\t\t\t\t\t<GroupItem caption={translate('RECORD_SEPARATOR')}>\n\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\titems={recordSeparator}\n\t\t\t\t\t\t\tdefaultValue={exportParams.recordSeparator}\n\t\t\t\t\t\t\tvalue={exportParams.recordSeparator}\n\t\t\t\t\t\t\tlayout=\"vertical\"\n\t\t\t\t\t\t\tonValueChanged={({ value }) => setExportParameters('recordSeparator', value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GroupItem>\n\t\t\t\t</GroupItem>\n\t\t\t\t<GroupItem colCount={3}>\n\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\teditorType={'dxCheckBox'}\n\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\ttext: translate('REFERENCES_ARE_REPRESENTED_AS_IDS'),\n\t\t\t\t\t\t\tdefaultValue: exportParams.exportIdsCheckBox,\n\t\t\t\t\t\t\tvalue: exportParams.exportIdsCheckBox,\n\t\t\t\t\t\t\tonValueChanged: ({ value }) => setExportParameters('exportIdsCheckBox', value),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\teditorType={'dxCheckBox'}\n\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\ttext: translate('DO_NOT_EXPORT_HIDDEN_COLUMNS'),\n\t\t\t\t\t\t\tdefaultValue: exportParams.notExportHiddenColumns,\n\t\t\t\t\t\t\tvalue: exportParams.notExportHiddenColumns,\n\t\t\t\t\t\t\tonValueChanged: ({ value }) => setExportParameters('notExportHiddenColumns', value),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\teditorType={'dxCheckBox'}\n\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\ttext: translate('SORT_BY_PRIMARY_KEY'),\n\t\t\t\t\t\t\tdefaultValue: exportParams.sortByPrimaryKey,\n\t\t\t\t\t\t\tvalue: exportParams.sortByPrimaryKey,\n\t\t\t\t\t\t\tonValueChanged: ({ value }) => setExportParameters('sortByPrimaryKey', value),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</GroupItem>\n\t\t\t\t<GroupItem colCount={2}>\n\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\tcssClass={'help-button'}\n\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\ticon: HelpIcon,\n\t\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\t\tonClick: () => window.open(helpLink, '_blank'),\n\t\t\t\t\t\t\tstylingMode: 'text',\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\ttext: translate('DOWNLOAD'),\n\t\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\t\tonClick: submitHandler,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</GroupItem>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default ExportModal;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nexport const ROW_QUANTITY_LIMIT = 15000;\n//The minimum number of columns for which export takes a long time\nexport const COLUMN_SIZE_LIMIT = 15;\n//The minimum number of primary key columns for which export takes a long time (ID_wh (by default) + others (PRIMARY_KEY_SIZE_LIMIT))\nexport const PRIMARY_KEY_SIZE_LIMIT = 1;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { Fragment, useCallback, useState } from 'react';\nimport { tabTitleConstants } from '../../constants/SettingsConstants';\nimport translate from '../../i18n/localization';\nimport { useFilters, useHiddenColumns, useSettings, useSorting } from '../../hooks';\nimport Form, { ButtonItem, GroupItem, SimpleItem } from 'devextreme-react/form';\nimport { parseBoolean } from '../../utils/utils';\nimport InputType from '../../models/Enums/InputType';\nimport { RangeRule } from 'devextreme-react/validator';\nimport communicator from '../../api/Communicator';\nimport { useDbeActionsHelpLink } from '../../hooks/useHelpLink';\nimport { DbeActions } from '../../models/Enums/HelpLinks';\nimport { HelpIcon } from '../../assets/icons';\nimport { NO_FILTER } from '../../constants/FiltersConstants';\nimport { confirm } from 'devextreme/ui/dialog';\n\nconst SettingModal = ({ closeModal, props: { dbeDxGridInstance, tableInstance } }) => {\n\tconst [groupedFilters] = useFilters(tableInstance);\n\tconst [groupedSorting] = useSorting(tableInstance);\n\tconst [groupedHiddenColumns] = useHiddenColumns(tableInstance);\n\n\tconst [isAutoRefresh, setIsAutoRefresh] = useState(() => tableInstance.isAutoRefresh);\n\n\tconst applyFilter = useSettings(dbeDxGridInstance, tableInstance);\n\n\tconst handleSubmit = useCallback(async (e) => {\n\t\te.preventDefault();\n\t\tconst form = document.forms.namedItem('tableSettingsForm');\n\t\tconst formData = new FormData(form);\n\t\tconst parameters: { [key: string]: any } = [...formData.entries()].reduce((result, [paramName, value]) => {\n\t\t\treturn { ...result, [paramName]: parseBoolean(value) };\n\t\t}, {});\n\n\t\tconst parsedParams = {\n\t\t\t...parameters,\n\t\t\tdefaultFilter: tableInstance.getFilters().find((filter) => filter.settingId === parameters.defaultFilter),\n\t\t\tdefaultHiddenColumnFilter: tableInstance\n\t\t\t\t.getHiddenColumns()\n\t\t\t\t.find((filter) => filter.settingId === parameters.defaultHiddenColumnFilter),\n\t\t\tdefaultSortOrder: tableInstance\n\t\t\t\t.getSortOrderSettings()\n\t\t\t\t.find((filter) => filter.settingId === parameters.defaultSortOrder),\n\t\t};\n\t\ttableInstance.tableRelatedUserParameters.saveSettings(parsedParams);\n\t\tapplyFilter(parsedParams);\n\n\t\tawait communicator.updateDxDbeTableSettings(tableInstance.table.getTableId(), parsedParams);\n\t\tcloseModal();\n\t}, []);\n\n\tconst helpLink = useDbeActionsHelpLink(tableInstance.warehouseUiType, DbeActions.SETTINGS);\n\n\tconst resetSettingsToDefault = useCallback(() => {\n\t\tconfirm(translate('Are you sure you want to reset all table settings?'), 'W2MO').then((isConfirmed) => {\n\t\t\tisConfirmed &&\n\t\t\t\ttableInstance\n\t\t\t\t\t.getDxGridCommonSettings()\n\t\t\t\t\t.resetSettingsToDefault()\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tconfirm(\n\t\t\t\t\t\t\ttranslate('For applying changes you need to reload the page. <br> Reload page now?'),\n\t\t\t\t\t\t\t'W2MO',\n\t\t\t\t\t\t).then((reload) => {\n\t\t\t\t\t\t\treload && window.location.reload();\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<form action=\"src/Components/modals/index\" onSubmit={handleSubmit} id={'tableSettingsForm'}>\n\t\t\t\t<Form>\n\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\tdataField={'tabTitle'}\n\t\t\t\t\t\teditorType={InputType.SelectBox}\n\t\t\t\t\t\tlabel={{\n\t\t\t\t\t\t\ttext: translate('TAB_TITLE'),\n\t\t\t\t\t\t}}\n\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\titems: tabTitleConstants,\n\t\t\t\t\t\t\tdisplayExpr: 'name',\n\t\t\t\t\t\t\tvalueExpr: 'id',\n\t\t\t\t\t\t\tvalue: tableInstance.tabTitle,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\tdataField={'defaultFilter'}\n\t\t\t\t\t\teditorType={InputType.SelectBox}\n\t\t\t\t\t\tlabel={{\n\t\t\t\t\t\t\ttext: translate('DEFAULT_FILTER'),\n\t\t\t\t\t\t}}\n\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\tdataSource: groupedFilters,\n\t\t\t\t\t\t\tgrouped: true,\n\t\t\t\t\t\t\tdisplayExpr: 'settingName',\n\t\t\t\t\t\t\tvalueExpr: 'settingId',\n\t\t\t\t\t\t\tvalue: tableInstance.defaultFilter ? tableInstance.defaultFilter.settingId : NO_FILTER,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\tdataField={'defaultHiddenColumnFilter'}\n\t\t\t\t\t\teditorType={InputType.SelectBox}\n\t\t\t\t\t\tlabel={{\n\t\t\t\t\t\t\ttext: translate('DEFAULT_HIDDEN_COLUMNS'),\n\t\t\t\t\t\t}}\n\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\tdataSource: groupedHiddenColumns,\n\t\t\t\t\t\t\tgrouped: true,\n\t\t\t\t\t\t\tdisplayExpr: 'settingName',\n\t\t\t\t\t\t\tvalueExpr: 'settingId',\n\t\t\t\t\t\t\tvalue: tableInstance.defaultHiddenColumn\n\t\t\t\t\t\t\t\t? tableInstance.defaultHiddenColumn.settingId\n\t\t\t\t\t\t\t\t: NO_FILTER,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\tdataField={'defaultSortOrder'}\n\t\t\t\t\t\teditorType={InputType.SelectBox}\n\t\t\t\t\t\tlabel={{\n\t\t\t\t\t\t\ttext: translate('DEFAULT_SORTING'),\n\t\t\t\t\t\t}}\n\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\tdataSource: groupedSorting,\n\t\t\t\t\t\t\tgrouped: true,\n\t\t\t\t\t\t\tdisplayExpr: 'settingName',\n\t\t\t\t\t\t\tvalueExpr: 'settingId',\n\t\t\t\t\t\t\tvalue: tableInstance.defaultSortOrder\n\t\t\t\t\t\t\t\t? tableInstance.defaultSortOrder.settingId\n\t\t\t\t\t\t\t\t: NO_FILTER,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\tdataField={'pageSize'}\n\t\t\t\t\t\teditorType={InputType.NumberBox}\n\t\t\t\t\t\tlabel={{\n\t\t\t\t\t\t\ttext: translate('DEFAULT_PAGE_SIZE'),\n\t\t\t\t\t\t}}\n\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\tvalue: tableInstance.pageSize,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<RangeRule\n\t\t\t\t\t\t\tmax={tableInstance.table.getMaxPageSize()}\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tmessage={translate(\n\t\t\t\t\t\t\t\ttranslate(\n\t\t\t\t\t\t\t\t\t'VALUE_SHOULD_BE_NUMERIC_AND_NOT_BIGGER_THAN_$',\n\t\t\t\t\t\t\t\t\ttableInstance.table.getMaxPageSize(),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</SimpleItem>\n\n\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\tdataField={'isAutoRefresh'}\n\t\t\t\t\t\teditorType={InputType.CheckBox}\n\t\t\t\t\t\tlabel={{\n\t\t\t\t\t\t\ttext: translate('AUTO_REFRESH'),\n\t\t\t\t\t\t}}\n\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\tvalue: isAutoRefresh,\n\t\t\t\t\t\t\tonValueChanged: (e) => {\n\t\t\t\t\t\t\t\tsetIsAutoRefresh(e.value);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{isAutoRefresh && (\n\t\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\t\tdataField={'intervalInSeconds'}\n\t\t\t\t\t\t\teditorType={InputType.NumberBox}\n\t\t\t\t\t\t\tlabel={{\n\t\t\t\t\t\t\t\ttext: translate('INTERVAL_IN_SECONDS'),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\t\tvalue: tableInstance.intervalInSeconds,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<RangeRule\n\t\t\t\t\t\t\t\tmax={tableInstance.table.getMaxPageSize()}\n\t\t\t\t\t\t\t\tmin={10}\n\t\t\t\t\t\t\t\tmessage={translate(translate('VALUE_SHOULD_BE_NUMERIC_AND_IN_RANGE_$_$', 10, 5000))}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</SimpleItem>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\tdataField={'lastSelectionMode'}\n\t\t\t\t\t\teditorType={InputType.CheckBox}\n\t\t\t\t\t\tlabel={{\n\t\t\t\t\t\t\ttext: translate('LAST_SELECTION_MODE'),\n\t\t\t\t\t\t}}\n\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\tvalue: tableInstance.lastSelectionMode,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\tcolSpan={2}\n\t\t\t\t\t\thorizontalAlignment={'right'}\n\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\ttext: translate('RESET_TABLE_DYNAMICAL_SETTINGS_TO_DEFAULT'),\n\t\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\t\tonClick: () => resetSettingsToDefault(),\n\t\t\t\t\t\t\tstylingMode: 'outlined',\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<GroupItem colCount={2}>\n\t\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\t\tcolSpan={1}\n\t\t\t\t\t\t\tcssClass={'help-button'}\n\t\t\t\t\t\t\thorizontalAlignment={'left'}\n\t\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\t\ticon: HelpIcon,\n\t\t\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\t\t\tonClick: () => window.open(helpLink, '_blank'),\n\t\t\t\t\t\t\t\tstylingMode: 'text',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\t\tverticalAlignment={'center'}\n\t\t\t\t\t\t\tcolSpan={1}\n\t\t\t\t\t\t\thorizontalAlignment={'right'}\n\t\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t\ttext: translate('APPLY'),\n\t\t\t\t\t\t\t\tuseSubmitBehavior: true,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GroupItem>\n\t\t\t\t</Form>\n\t\t\t</form>\n\t\t</Fragment>\n\t);\n};\n\nexport default SettingModal;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { Fragment } from 'react';\nimport { Tooltip } from 'devextreme-react/tooltip';\nimport DataGrid, { Column, Paging, Selection } from 'devextreme-react/data-grid';\nimport translate from '../i18n/localization';\nimport NotificationController from '../services/Notification/NotificationController';\nimport { Severity } from '../models/Enums/Notification';\nimport Accordion from 'devextreme-react/accordion';\n\nclass ImportExportResultHelpers {\n\tprivate static getNotificationSeverityForImport(resultHeader) {\n\t\tswitch (resultHeader) {\n\t\t\tcase 'ALL_RECORDS_LOADED':\n\t\t\t\treturn { severity: Severity.SUCCESS, text: '_UPLOAD_SUCCESSFUL' };\n\t\t\tcase 'NOT_ALL_RECORDS_LOADED':\n\t\t\t\treturn { severity: Severity.WARNING, text: '_UPLOAD_PARTLY_SUCCESSFUL' };\n\t\t\tdefault:\n\t\t\t\treturn { severity: Severity.ERROR, text: '' };\n\t\t}\n\t}\n\n\tprivate static createNotificationHeader(failedRecords, importedRecords, headerText) {\n\t\tconst importedRowsLabel = translate('ROWS_IMPORTED_$', importedRecords);\n\t\tconst failedRowsLabel = translate('ROWS_FAILED_$', failedRecords);\n\n\t\treturn (\n\t\t\t<div className={'notification-content-header'}>\n\t\t\t\t{headerText ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<b>{translate(headerText)}</b>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</>\n\t\t\t\t) : null}\n\t\t\t\t<span>{importedRowsLabel}</span>\n\t\t\t\t<br />\n\t\t\t\t<span>{failedRowsLabel}</span>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tprivate static createNotificationBody(resultBody, skippedColumnNames) {\n\t\tif (resultBody.length === 1 && resultBody[0].recordNumber === null) {\n\t\t\treturn (\n\t\t\t\t<div className={'notification-content-body'}>\n\t\t\t\t\t{skippedColumnNames.length ? <span>{skippedColumnNames.join(', ')}</span> : null}\n\t\t\t\t\t<span>{resultBody[0].failedReason}</span>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className={'notification-content-body'}>\n\t\t\t\t\t{resultBody.length ? (\n\t\t\t\t\t\t<Accordion\n\t\t\t\t\t\t\tdataSource={[resultBody]}\n\t\t\t\t\t\t\tcollapsible={true}\n\t\t\t\t\t\t\tanimationDuration={1000}\n\t\t\t\t\t\t\titemTitleRender={() => (\n\t\t\t\t\t\t\t\t<span>{translate('SHOW_FIRST_$_FAILED_RECORDS', resultBody.length)}</span>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\titemRender={(body) => {\n\t\t\t\t\t\t\t\treturn body.map(({ failedReason, recordNumber }, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Fragment key={index}>\n\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t{translate('RECORD_$', recordNumber)}: {failedReason}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tid={'notification-content-accordion-body'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null}\n\t\t\t\t\t{skippedColumnNames.length ? (\n\t\t\t\t\t\t<Accordion\n\t\t\t\t\t\t\tdataSource={[skippedColumnNames]}\n\t\t\t\t\t\t\tanimationDuration={1000}\n\t\t\t\t\t\t\tcollapsible={true}\n\t\t\t\t\t\t\titemTitleRender={() => <span>{translate('SKIPPED_COLUMNS_$', '')}</span>}\n\t\t\t\t\t\t\titemRender={(skippedColNames) => {\n\t\t\t\t\t\t\t\treturn <span>{skippedColNames.join(', ')}</span>;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tid={'notification-content-accordion-skipped-cols'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic static parseImportResult(result) {\n\t\tconst notificationController = new NotificationController();\n\t\tconst {\n\t\t\tfailedRecords,\n\t\t\timportedRecords,\n\t\t\tisRightSeparator,\n\t\t\tresultBody,\n\t\t\tresultHeader,\n\t\t\tskippedColumnNames,\n\t\t\tpostProcessingResult,\n\t\t} = result.result;\n\t\tconst { severity, text: headerText } = ImportExportResultHelpers.getNotificationSeverityForImport(resultHeader);\n\n\t\tif (!isRightSeparator) {\n\t\t\tnotificationController.createNotification({\n\t\t\t\tmessage: translate('FIELD_SEPARATOR_IS_WRONG'),\n\t\t\t\ttype: Severity.WARNING,\n\t\t\t});\n\t\t}\n\n\t\tconst NotificationContent = (): JSX.Element => {\n\t\t\treturn (\n\t\t\t\t<div className={'notification-content'}>\n\t\t\t\t\t{ImportExportResultHelpers.createNotificationHeader(failedRecords, importedRecords, headerText)}\n\t\t\t\t\t{ImportExportResultHelpers.createNotificationBody(resultBody, skippedColumnNames)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t};\n\t\tnotificationController.createNotification({\n\t\t\tContent: NotificationContent,\n\t\t\ttype: severity,\n\t\t\tdisplayTime: 10000,\n\t\t\thasCopyButton: false,\n\t\t});\n\n\t\tpostProcessingResult.forEach((postProcessingRes) => {\n\t\t\tconst message = translate(postProcessingRes.alias, ...(postProcessingRes.parameters.split(',') || []));\n\t\t\tnotificationController.createNotification({\n\t\t\t\tmessage: message,\n\t\t\t\ttype: postProcessingRes.severity,\n\t\t\t\tdisplayTime: 10000,\n\t\t\t\thasCopyButton: false,\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic static getDataFormatsTooltip(targetSelector, visible) {\n\t\tconst createDateFormatRow = (letter, desc, example) => ({\n\t\t\tletter,\n\t\t\tdesc: translate(desc),\n\t\t\texample: example,\n\t\t});\n\t\tconst dateFormats = [\n\t\t\tcreateDateFormatRow('G', 'ERA_DESIGNATOR', 'AD'),\n\t\t\tcreateDateFormatRow('y', 'YEAR', '1996; 96'),\n\t\t\tcreateDateFormatRow('Y', 'WEEK_YEAR', '2009; 09'),\n\t\t\tcreateDateFormatRow('M', 'MONTH_IN_YEAR', 'July; Jul; 07'),\n\t\t\tcreateDateFormatRow('w', 'WEEK_IN_YEAR', '27'),\n\t\t\tcreateDateFormatRow('W', 'WEEK_IN_MONTH', '2'),\n\t\t\tcreateDateFormatRow('D', 'DAY_IN_YEAR', '189'),\n\t\t\tcreateDateFormatRow('d', 'DAY_IN_MONTH', '10'),\n\t\t\tcreateDateFormatRow('F', 'DAY_OF_WEEK_IN_MONTH', '2'),\n\t\t\tcreateDateFormatRow('E', 'DAY_NAME_IN_WEEK', 'Tuesday; Tue'),\n\t\t\tcreateDateFormatRow('u', '_DAY_NUMBER_OF_WEEK', '1'),\n\t\t\tcreateDateFormatRow('a', '_AM_PM_MARKER', 'PM'),\n\t\t\tcreateDateFormatRow('H', '_HOUR_IN_DAY_0', '0'),\n\t\t\tcreateDateFormatRow('k', '_HOUR_IN_DAY_1', '24'),\n\t\t\tcreateDateFormatRow('K', '_HOUR_IN_AM_PM_0', '0'),\n\t\t\tcreateDateFormatRow('h', '_HOUR_IN_AM_PM_1', '12'),\n\t\t\tcreateDateFormatRow('m', 'MINUTE_IN_HOUR', '30'),\n\t\t\tcreateDateFormatRow('s', 'SECOND_IN_MINUTE', '55'),\n\t\t\tcreateDateFormatRow('S', 'MILLISECOND', '978'),\n\t\t\tcreateDateFormatRow('z', 'TIME_ZONE', 'PST; GMT-08:00'),\n\t\t\tcreateDateFormatRow('Z', 'TIME_ZONE', '-800'),\n\t\t\tcreateDateFormatRow('X', 'TIME_ZONE', '-08; -0800; -08:00'),\n\t\t];\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Tooltip target={targetSelector} position=\"right\" visible={visible} hideOnOutsideClick={false}>\n\t\t\t\t\t<DataGrid\n\t\t\t\t\t\tdataSource={dateFormats}\n\t\t\t\t\t\tallowColumnReordering={false}\n\t\t\t\t\t\trowAlternationEnabled={true}\n\t\t\t\t\t\tshowBorders={false}\n\t\t\t\t\t\twidth={450}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Selection mode=\"single\" />\n\t\t\t\t\t\t<Paging defaultPageSize={100} />\n\t\t\t\t\t\t<Column dataField=\"letter\" caption={translate('LETTER')} width={40} />\n\t\t\t\t\t\t<Column dataField=\"desc\" caption={translate('DATE_OR_TIME_COMPONENT')} width={270} />\n\t\t\t\t\t\t<Column dataField=\"example\" caption={translate('EXAMPLES')} />\n\t\t\t\t\t</DataGrid>\n\t\t\t\t</Tooltip>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ImportExportResultHelpers;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport Form, { ButtonItem, GroupItem, SimpleItem } from 'devextreme-react/form';\nimport translate from '../../i18n/localization';\nimport RadioGroup from 'devextreme-react/radio-group';\nimport FileUploader from 'devextreme-react/file-uploader';\n\nimport {\n\tfieldSeparator,\n\tfloatingPointSeparator,\n\tnullValueEscape,\n\tthousandSeparator,\n} from '../../constants/separators.item';\nimport communicator from '../../api/Communicator';\nimport ImportExportResultHelpers from '../../helpers/ImportExportResultUtils';\nimport { useDbeActionsHelpLink } from '../../hooks/useHelpLink';\nimport { DbeActions } from '../../models/Enums/HelpLinks';\nimport { HelpIcon } from '../../assets/icons';\nimport { Severity } from '../../models/Enums/Notification';\nimport NotificationController from '../../services/Notification/NotificationController';\nimport debounce from 'lodash/debounce';\nimport { custom } from 'devextreme/ui/dialog';\n\nconst notifySeparatorWrong = debounce(() => {\n\tconst notificationController = new NotificationController();\n\tnotificationController.createNotification({\n\t\tmessage: translate('SEPARATORS_CAN_NOT_BE_THE_SAME'),\n\t\ttype: Severity.WARNING,\n\t});\n}, 300);\n\nconst showLoadingBox = (cancelImportTable = null) => {\n\tconst buttons = cancelImportTable\n\t\t? [\n\t\t\t\t{\n\t\t\t\t\ttext: translate('CLOSE'),\n\t\t\t\t\tonClick: (e) => {\n\t\t\t\t\t\tcancelImportTable && cancelImportTable(e);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t  ]\n\t\t: [];\n\treturn custom({\n\t\tmessageHtml: `<img src=\"\" alt=\"progress bar\"/>`,\n\t\tshowTitle: false,\n\t\tbuttons: buttons,\n\t});\n};\n\nconst ImportModal = ({ closeModal, props: { getDbeDxGridInstance, tableInstance } }) => {\n\tconst tableName = useMemo(() => tableInstance.getTableName(), []);\n\tconst [dateFormatTooltipVisibility, setDateFormatTooltipVisibility] = useState<boolean>(false);\n\tconst [importParams, setImportParams] = useState(() => ({\n\t\tfieldSeparator: fieldSeparator[0],\n\t\tfloatingPointSeparator: floatingPointSeparator[0],\n\t\tnullValueEscape: nullValueEscape[0],\n\t\tthousandSeparator: thousandSeparator[0],\n\t\timportDataFile: null,\n\t\tcustomDateFormat: 'yyyy-MM-dd HH:mm:ss',\n\t\tuseCustomDateFormat: false,\n\t\texportIdsCheckBox: false,\n\t\tupdateIfExistCheckBox: false,\n\t\toldImportTypeCheckBox: false,\n\t}));\n\n\tuseEffect(() => {\n\t\tcommunicator.retrieveUserSettings('csvImport', tableName).then((importSettings) => {\n\t\t\tconst storedParams = {\n\t\t\t\tfieldSeparator: fieldSeparator.find((item) => item.value === importSettings.fieldSeparator),\n\t\t\t\tfloatingPointSeparator: floatingPointSeparator.find(\n\t\t\t\t\t(item) => item.value === importSettings.floatingPointSeparator,\n\t\t\t\t),\n\t\t\t\tnullValueEscape: nullValueEscape.find((item) => item.value === importSettings.nullValueEscape),\n\t\t\t\tthousandSeparator: thousandSeparator.find((item) => item.value === importSettings.thousandSeparator),\n\t\t\t};\n\t\t\tsetImportParams((prevParams) => ({ ...prevParams, ...storedParams }));\n\t\t});\n\t}, []);\n\n\tconst isSeparatorsWrong = useMemo(() => {\n\t\tconst allSeparators = [\n\t\t\timportParams.fieldSeparator.value,\n\t\t\timportParams.floatingPointSeparator.value,\n\t\t\timportParams.thousandSeparator.value,\n\t\t];\n\t\tconst uniqSeparators = new Set(allSeparators);\n\t\treturn uniqSeparators.size !== allSeparators.length;\n\t}, [importParams]);\n\n\tuseEffect(() => {\n\t\tconst newParams = {\n\t\t\tfieldSeparator: importParams.fieldSeparator?.value,\n\t\t\tthousandSeparator: importParams.thousandSeparator?.value,\n\t\t\tfloatingPointSeparator: importParams.floatingPointSeparator?.value,\n\t\t\tnullValueEscape: importParams.nullValueEscape?.value,\n\t\t};\n\n\t\tcommunicator.storeUserSettings('csvImport', JSON.stringify(newParams), tableName);\n\t}, [importParams, isSeparatorsWrong]);\n\n\tconst submitHandler = useCallback(async () => {\n\t\tcloseModal();\n\t\tgetDbeDxGridInstance().beginCustomLoading(translate('DATA_IMPORTING') + '...');\n\n\t\tconst csvImportSettings = {\n\t\t\tfieldSeparator: importParams.fieldSeparator?.value,\n\t\t\tthousandSeparator: importParams.thousandSeparator?.value,\n\t\t\tfloatingPointSeparator: importParams.floatingPointSeparator?.value,\n\t\t\tnullValueEscape: importParams.nullValueEscape?.value,\n\t\t};\n\t\tconst parameters = {\n\t\t\tcsvImportSettings,\n\t\t\treferencesAsIds: importParams.exportIdsCheckBox,\n\t\t\tupdateIfExist: importParams.updateIfExistCheckBox,\n\t\t\toldImportType: importParams.oldImportTypeCheckBox,\n\t\t\tdateFormatPattern: importParams.customDateFormat,\n\t\t};\n\n\t\tconst formData = new FormData();\n\t\tformData.append('parameters', JSON.stringify(parameters));\n\t\tformData.append('uploadFile', importParams.importDataFile[0]);\n\t\tconst longTermId = await communicator.importTableData(formData, tableName);\n\t\tgetDbeDxGridInstance().endCustomLoading(translate('DATA_IMPORTING') + '...');\n\t\tconst loadingBox = showLoadingBox(() => communicator.cancelLongTermAction(longTermId));\n\t\tloadingBox.show();\n\t\tcommunicator\n\t\t\t.startLongTerm(longTermId)\n\t\t\t.then(ImportExportResultHelpers.parseImportResult)\n\t\t\t.finally(async () => {\n\t\t\t\tloadingBox.hide();\n\t\t\t\tawait getDbeDxGridInstance().refresh(false);\n\t\t\t});\n\t}, [importParams]);\n\n\tconst setImportParameters = useCallback(\n\t\t(paramName, value) => {\n\t\t\tif (!importParams[paramName]?.isEqual(value)) {\n\t\t\t\tsetImportParams((prevParams) => {\n\t\t\t\t\tconst result = { ...prevParams, [paramName]: value };\n\t\t\t\t\tisSeparatorsWrong && notifySeparatorWrong();\n\t\t\t\t\treturn result;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[importParams, isSeparatorsWrong],\n\t);\n\n\tconst helpLink = useDbeActionsHelpLink(tableInstance.warehouseUiType, DbeActions.IMPORT);\n\n\treturn (\n\t\t<div id={'import-modal-wrapper'}>\n\t\t\t{ImportExportResultHelpers.getDataFormatsTooltip('.dateFormat', dateFormatTooltipVisibility)}\n\t\t\t<Form colCount={1} id=\"import-data-form\">\n\t\t\t\t<SimpleItem template={translate('_USE_UTF_8_ENCODING')} />\n\t\t\t\t<GroupItem colCount={4}>\n\t\t\t\t\t<GroupItem caption={translate('FIELD_SEPARATOR')}>\n\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\titems={fieldSeparator}\n\t\t\t\t\t\t\tdefaultValue={importParams.fieldSeparator}\n\t\t\t\t\t\t\tvalue={importParams.fieldSeparator}\n\t\t\t\t\t\t\tlayout=\"vertical\"\n\t\t\t\t\t\t\tonValueChanged={({ value }) => setImportParameters('fieldSeparator', value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GroupItem>\n\t\t\t\t\t<GroupItem caption={translate('THOUSANDS_SEPARATOR')}>\n\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\titems={thousandSeparator}\n\t\t\t\t\t\t\tdefaultValue={importParams.thousandSeparator}\n\t\t\t\t\t\t\tvalue={importParams.thousandSeparator}\n\t\t\t\t\t\t\tlayout=\"vertical\"\n\t\t\t\t\t\t\tonValueChanged={({ value }) => setImportParameters('thousandSeparator', value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GroupItem>\n\t\t\t\t\t<GroupItem caption={translate('FLOATING_POINT_SEPARATOR')}>\n\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\titems={floatingPointSeparator}\n\t\t\t\t\t\t\tdefaultValue={importParams.floatingPointSeparator}\n\t\t\t\t\t\t\tvalue={importParams.floatingPointSeparator}\n\t\t\t\t\t\t\tlayout=\"vertical\"\n\t\t\t\t\t\t\tonValueChanged={({ value }) => setImportParameters('floatingPointSeparator', value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GroupItem>\n\t\t\t\t\t<GroupItem caption={translate('_NULL_VALUE_ESCAPE')}>\n\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\titems={nullValueEscape}\n\t\t\t\t\t\t\tdefaultValue={importParams.nullValueEscape}\n\t\t\t\t\t\t\tvalue={importParams.nullValueEscape}\n\t\t\t\t\t\t\tlayout=\"vertical\"\n\t\t\t\t\t\t\tonValueChanged={({ value }) => setImportParameters('nullValueEscape', value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GroupItem>\n\t\t\t\t</GroupItem>\n\t\t\t\t<GroupItem>\n\t\t\t\t\t<FileUploader\n\t\t\t\t\t\tselectButtonText=\"Select file\"\n\t\t\t\t\t\tlabelText=\"or Drop file here\"\n\t\t\t\t\t\taccept=\"text/csv\"\n\t\t\t\t\t\tuploadMode=\"useForm\"\n\t\t\t\t\t\tonValueChanged={({ value }) => setImportParameters('importDataFile', value)}\n\t\t\t\t\t/>\n\t\t\t\t</GroupItem>\n\t\t\t\t<GroupItem colCount={4}>\n\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\teditorType={'dxCheckBox'}\n\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\ttext: translate('_CUSTOM_DATE_FORMAT'),\n\t\t\t\t\t\t\tdefaultValue: importParams.useCustomDateFormat,\n\t\t\t\t\t\t\tvalue: importParams.useCustomDateFormat,\n\t\t\t\t\t\t\tonValueChanged: ({ value }) => setImportParameters('useCustomDateFormat', value),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\teditorType={'dxTextBox'}\n\t\t\t\t\t\tcssClass={'dateFormat'}\n\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\tdefaultValue: importParams.customDateFormat,\n\t\t\t\t\t\t\tvalue: importParams.customDateFormat,\n\t\t\t\t\t\t\treadOnly: !importParams.useCustomDateFormat,\n\t\t\t\t\t\t\tdisabled: !importParams.useCustomDateFormat,\n\t\t\t\t\t\t\tonFocusIn: () => setDateFormatTooltipVisibility(true),\n\t\t\t\t\t\t\tonFocusOut: () => setDateFormatTooltipVisibility(false),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</GroupItem>\n\t\t\t\t<GroupItem colCount={1}>\n\t\t\t\t\t<div style={{ display: importParams.useCustomDateFormat ? 'block' : 'none' }}>\n\t\t\t\t\t\t<div className={'custom-date-notifier'}>{translate('_CUSTOM_DATE_FORMAT_HINT')}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</GroupItem>\n\t\t\t\t<GroupItem colCount={3}>\n\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\teditorType={'dxCheckBox'}\n\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\ttext: translate('REFERENCES_ARE_REPRESENTED_AS_IDS'),\n\t\t\t\t\t\t\tdefaultValue: importParams.exportIdsCheckBox,\n\t\t\t\t\t\t\tvalue: importParams.exportIdsCheckBox,\n\t\t\t\t\t\t\tonValueChanged: ({ value }) => setImportParameters('exportIdsCheckBox', value),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\teditorType={'dxCheckBox'}\n\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\ttext: translate('UPDATE_IF_EXIST'),\n\t\t\t\t\t\t\tdefaultValue: importParams.updateIfExistCheckBox,\n\t\t\t\t\t\t\tvalue: importParams.updateIfExistCheckBox,\n\t\t\t\t\t\t\tonValueChanged: ({ value }) => setImportParameters('updateIfExistCheckBox', value),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\teditorType={'dxCheckBox'}\n\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\ttext: translate('USE_IMPORT_DATA_TEMPLATE'),\n\t\t\t\t\t\t\tdefaultValue: importParams.oldImportTypeCheckBox,\n\t\t\t\t\t\t\tvalue: importParams.oldImportTypeCheckBox,\n\t\t\t\t\t\t\tonValueChanged: ({ value }) => setImportParameters('oldImportTypeCheckBox', value),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</GroupItem>\n\t\t\t\t<GroupItem colCount={2}>\n\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\tcssClass={'help-button'}\n\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\ticon: HelpIcon,\n\t\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\t\tonClick: () => window.open(helpLink, '_blank'),\n\t\t\t\t\t\t\tstylingMode: 'text',\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\ttext: translate('UPLOAD'),\n\t\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\t\tonClick: submitHandler,\n\t\t\t\t\t\t\tdisabled: !importParams.importDataFile || isSeparatorsWrong,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</GroupItem>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default ImportModal;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { useRef, useState } from 'react';\nimport translate from '../../i18n/localization';\nimport DataGrid, { Column, Editing, Pager, Paging, RequiredRule, Selection } from 'devextreme-react/data-grid';\nimport { useProxiedFiltersForSaving, useSettingHooks } from '../../hooks';\nimport ModalsTypes from '../../constants/ModalsTypes';\nimport { filtersSplit } from '../../constants/FiltersConstants';\nimport { useDbeActionsHelpLink } from '../../hooks/useHelpLink';\nimport Form, { ButtonItem, SimpleItem } from 'devextreme-react/form';\nimport { HelpIcon } from '../../assets/icons';\nimport InputType from '../../models/Enums/InputType';\nimport useModalWindowPopupContext from '../../context/ModalPopupContext';\n\nimport './styles.css';\n\nconst UserParamsSettingsModal = ({ closeModal, props }) => {\n\tconst { applySetting, type, repaintDropDown, unfilter, tableInstance, helpKey, dbeDxGridRef } = props;\n\tconst { openModalWithProps } = useModalWindowPopupContext();\n\n\tconst [ownerUserFilters, setOwnerUserFilters] = useState(filtersSplit[0].value);\n\n\tconst dataGridRef = useRef<DataGrid>();\n\tconst [selectedSettingRow, setSelectedSettingRow] = useState(null);\n\n\tconst {\n\t\tbuttonName,\n\t\tsettingElements,\n\t\taddSetting,\n\t\teditSetting,\n\t\tdeleteSetting,\n\t\tbuilderKey,\n\t\tsetSelectedSetting,\n\t\tshareUnshareSetting,\n\t\tcheckSelectedSetting,\n\t\tcreateNewSetting,\n\t\ttitle,\n\t\tgetTheBiggestObjectId,\n\t\tisNameExists,\n\t\tgetNextSettingName,\n\t} = useSettingHooks(type)(tableInstance, dbeDxGridRef, ownerUserFilters !== filtersSplit[1].value);\n\n\tconst [dataSource, setProxiedSettings] = useProxiedFiltersForSaving(\n\t\ttableInstance,\n\t\tsettingElements,\n\t\teditSetting,\n\t\tshareUnshareSetting,\n\t);\n\tconst helpLink = useDbeActionsHelpLink(tableInstance.warehouseUiType, helpKey);\n\n\treturn (\n\t\t<div>\n\t\t\t<Form colCount={5}>\n\t\t\t\t<SimpleItem\n\t\t\t\t\tcolSpan={4}\n\t\t\t\t\teditorType={InputType.RadioGroup}\n\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\tlayout: 'horizontal',\n\t\t\t\t\t\tvalue: ownerUserFilters,\n\t\t\t\t\t\tvalueExpr: 'value',\n\t\t\t\t\t\titems: filtersSplit,\n\t\t\t\t\t\tonValueChanged: (e) => {\n\t\t\t\t\t\t\tsetOwnerUserFilters(e.value);\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<ButtonItem\n\t\t\t\t\tcolSpan={1}\n\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\ttext: translate('ADD'),\n\t\t\t\t\t\ttype: 'normal',\n\t\t\t\t\t\tstylingMode: 'contained',\n\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\tdisabled: ownerUserFilters === filtersSplit[1].value,\n\t\t\t\t\t\ticon: 'add',\n\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\topenModalWithProps(ModalsTypes.ADD_NEW_SETTINGS_MODAL, {\n\t\t\t\t\t\t\t\twidth: 700,\n\t\t\t\t\t\t\t\thideOnOutsideClick: false,\n\t\t\t\t\t\t\t\tsaveSetting: addSetting,\n\t\t\t\t\t\t\t\tdataGridRefSettings: dataGridRef,\n\t\t\t\t\t\t\t\tsetDataSource: setProxiedSettings,\n\t\t\t\t\t\t\t\tbuilderKey,\n\t\t\t\t\t\t\t\tmodalTitle: title,\n\t\t\t\t\t\t\t\tcreateNewSetting,\n\t\t\t\t\t\t\t\tgetTheBiggestObjectId,\n\t\t\t\t\t\t\t\ttableInstance,\n\t\t\t\t\t\t\t\tisNameExists,\n\t\t\t\t\t\t\t\tgetNextSettingName,\n\t\t\t\t\t\t\t\tbuttonName,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Form>\n\t\t\t<DataGrid\n\t\t\t\tclassName={'settings-list'}\n\t\t\t\tref={dataGridRef}\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t// @ts-ignore\n\t\t\t\tdataSource={dataSource}\n\t\t\t\tshowRowLines={true}\n\t\t\t\tallowColumnResizing={true}\n\t\t\t\tonSelectionChanged={(data) => {\n\t\t\t\t\tsetSelectedSettingRow(data.selectedRowsData[0]);\n\t\t\t\t}}\n\t\t\t\tonRowRemoved={({ data }) => {\n\t\t\t\t\tdeleteSetting(data);\n\t\t\t\t\trepaintDropDown(settingElements);\n\t\t\t\t\tif (checkSelectedSetting(data.settingId)) {\n\t\t\t\t\t\tunfilter();\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonRowInserted={() => repaintDropDown()}\n\t\t\t>\n\t\t\t\t<Editing\n\t\t\t\t\tallowUpdating={ownerUserFilters}\n\t\t\t\t\tallowAdding={false}\n\t\t\t\t\tallowDeleting={ownerUserFilters}\n\t\t\t\t\tmode=\"cell\"\n\t\t\t\t\trefreshMode={'repaint'}\n\t\t\t\t\tstartEditAction={'dblClick'}\n\t\t\t\t/>\n\t\t\t\t<Selection mode=\"single\" showCheckBoxesMode={'none'} />\n\t\t\t\t<Paging defaultPageSize={10} />\n\t\t\t\t<Pager visible={true} displayMode={true} showInfo={true} showNavigationButtons={true} />\n\t\t\t\t<Column\n\t\t\t\t\tallowEditing={ownerUserFilters}\n\t\t\t\t\tdataField={'settingName'}\n\t\t\t\t\tdataType={'string'}\n\t\t\t\t\tcaption={translate('NAME')}\n\t\t\t\t>\n\t\t\t\t\t<RequiredRule />\n\t\t\t\t</Column>\n\t\t\t\t<Column\n\t\t\t\t\tallowEditing={ownerUserFilters}\n\t\t\t\t\tdataField={'isPublic'}\n\t\t\t\t\tdataType={'boolean'}\n\t\t\t\t\tcaption={translate('PUBLIC')}\n\t\t\t\t></Column>\n\t\t\t\t<Column\n\t\t\t\t\tallowEditing={ownerUserFilters}\n\t\t\t\t\tdataField={'isShared'}\n\t\t\t\t\tdataType={'boolean'}\n\t\t\t\t\tcaption={translate('SHARED')}\n\t\t\t\t></Column>\n\t\t\t\t<Column\n\t\t\t\t\tallowEditing={false}\n\t\t\t\t\tdataField={'description'}\n\t\t\t\t\tdataType={'string'}\n\t\t\t\t\tcaption={translate('DESCRIPTION')}\n\t\t\t\t></Column>\n\t\t\t\t<Column\n\t\t\t\t\tdataField={'setting'}\n\t\t\t\t\tallowEditing={false}\n\t\t\t\t\tcellRender={(data) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={'foreign-key-btn'}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tif (ownerUserFilters) {\n\t\t\t\t\t\t\t\t\t\topenModalWithProps(ModalsTypes.EDIT_SETTING_MODAL, {\n\t\t\t\t\t\t\t\t\t\t\twidth: 700,\n\t\t\t\t\t\t\t\t\t\t\thideOnOutsideClick: false,\n\t\t\t\t\t\t\t\t\t\t\tbuilderKey,\n\t\t\t\t\t\t\t\t\t\t\tmodalTitle: data.data.settingName,\n\t\t\t\t\t\t\t\t\t\t\ttableInstance,\n\t\t\t\t\t\t\t\t\t\t\t...data,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span>{translate('EDIT_FILTER')}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t></Column>\n\t\t\t</DataGrid>\n\t\t\t<Form colCount={2}>\n\t\t\t\t<ButtonItem\n\t\t\t\t\tcolSpan={1}\n\t\t\t\t\tcssClass={'help-button'}\n\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\ticon: HelpIcon,\n\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\tonClick: () => window.open(helpLink, '_blank'),\n\t\t\t\t\t\tstylingMode: 'text',\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<ButtonItem\n\t\t\t\t\tcolSpan={1}\n\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\tactiveStateEnabled: false,\n\t\t\t\t\t\ttext: translate('APPLY'),\n\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\tstylingMode: 'contained',\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tdisabled: !selectedSettingRow,\n\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t\tsetSelectedSetting(selectedSettingRow);\n\t\t\t\t\t\t\tapplySetting(selectedSettingRow);\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default UserParamsSettingsModal;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, {useEffect, useState} from 'react';\nimport {FilterGroup} from '../../models/Classes';\nimport translate from '../../i18n/localization';\nimport Form, {ButtonItem, GroupItem, SimpleItem} from 'devextreme-react/form';\nimport InputType from '../../models/Enums/InputType';\nimport {HelpIcon} from '../../assets/icons';\nimport {useDbeActionsHelpLink} from '../../hooks/useHelpLink';\nimport {DbeActions} from '../../models/Enums/HelpLinks';\nimport NotificationController from '../../services/Notification/NotificationController';\nimport {Severity} from '../../models/Enums/Notification';\n\nconst LinkWithFilter = ({ props: { tableInstance, filterString }, closeModal }) => {\n\tconst [link, setLink] = useState<URL>(new URL(window.location.toString()));\n\n\tuseEffect(() => {\n\t\tconsole.log('filterString', filterString);\n\t\tif (filterString.length <= FilterGroup.MAX_LENGTH_URL_FILTER) {\n\t\t\tsetLink((prev) => {\n\t\t\t\tconst newUrl = new URL(prev);\n\t\t\t\tnewUrl.searchParams.delete('filter');\n\t\t\t\tnewUrl.searchParams.append('filter', filterString);\n\t\t\t\treturn newUrl;\n\t\t\t});\n\t\t} else {\n\t\t\tNotificationController.createNotification({\n\t\t\t\tmessage: translate('DATA_IS_TOO_LONG_FOR_URL_FILTER'),\n\t\t\t\ttype: Severity.ERROR,\n\t\t\t});\n\t\t}\n\t}, [filterString]);\n\n\tconst helpLink = useDbeActionsHelpLink(tableInstance.warehouseUiType, DbeActions.LINK_WITH_FILTER);\n\n\treturn (\n\t\t<Form>\n\t\t\t<SimpleItem\n\t\t\t\teditorType={InputType.TextBox}\n\t\t\t\teditorOptions={{\n\t\t\t\t\tvalue: link.toString(),\n\t\t\t\t\treadOnly: true,\n\t\t\t\t\tonFocusIn: (e) => {\n\t\t\t\t\t\te.element.getElementsByTagName('input')[0].select();\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<GroupItem colSpan={2} colCount={2}>\n\t\t\t\t<ButtonItem\n\t\t\t\t\tcssClass={'help-button'}\n\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\ticon: HelpIcon,\n\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\tonClick: () => window.open(helpLink, '_blank'),\n\t\t\t\t\t\tstylingMode: 'text',\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<ButtonItem\n\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\ttext: translate('COPY'),\n\t\t\t\t\t\tstylingMode: 'contained',\n\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\tonClick: async () => {\n\t\t\t\t\t\t\tawait navigator.clipboard.writeText(link.toString());\n\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</GroupItem>\n\t\t</Form>\n\t);\n};\n\nexport default LinkWithFilter;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { Fragment, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport communicator from '../../api/Communicator';\nimport { InputParameterModel } from '../../models/Classes';\nimport Form, { ButtonItem, GroupItem, SimpleItem } from 'devextreme-react/form';\nimport translate from '../../i18n/localization';\nimport DbeTypesFactory from '../../services/TableDataModel/DbeColumn/DbeColumnFactory';\nimport { useHelpLink } from '../../hooks';\nimport { HelpIcon } from '../../assets/icons';\nimport { confirm } from 'devextreme/ui/dialog';\nimport cellType from '../../models/Enums/CellType';\nimport { isDefined } from '../../utils/utils';\n\nimport 'devextreme-react/color-box';\nimport 'devextreme-react/select-box';\nimport 'devextreme-react/date-box';\nimport 'devextreme-react/text-area';\nimport 'devextreme-react/number-box';\n\nimport './styles.css';\n\nconst TableActionModal = ({ props, closeModal, setLoading, isLoading }) => {\n\tconst { tableId, actionId, selectedRows, executeTableAction, link, tableInstance, confirmationRequired } = props;\n\n\tconst [helpLink] = useHelpLink(tableInstance, link);\n\n\tconst inputModels = useRef<InputParameterModel[]>([]);\n\tconst paramNames = useRef<string[]>([]);\n\n\tconst [initialDisabledInputs, setDisabledInputs] = useState<string[]>([]);\n\tconst [foreignKeysObjects, setForeignKeysObject] = useState(null);\n\n\tconst formRef = useRef<Form>();\n\n\tconst [actionParameters, setActionParameters] = useState(() => selectedRows || {});\n\n\tconst handleSubmit = useCallback(\n\t\t(e) => {\n\t\t\tif (formRef.current.instance.validate().isValid) {\n\t\t\t\te.preventDefault();\n\t\t\t\tconst formData = new FormData(e.target);\n\t\t\t\tconst parameters = [...formData.entries()].reduce((result, [paramName, value]) => {\n\t\t\t\t\treturn { ...result, [paramName]: value };\n\t\t\t\t}, {});\n\n\t\t\t\tconst allParamsForRow = Object.assign(actionParameters, parameters);\n\t\t\t\tconst finalParams = paramNames.current.reduce((params, paramName) => {\n\t\t\t\t\treturn { ...params, [paramName]: allParamsForRow[paramName] };\n\t\t\t\t}, {});\n\t\t\t\texecuteTableAction(finalParams, closeModal);\n\t\t\t}\n\t\t},\n\t\t[actionParameters],\n\t);\n\n\tconst isExecuteBtnDisabled = useMemo(() => {\n\t\treturn inputModels.current.every((model) => {\n\t\t\tif (model.getIsRequired()) {\n\t\t\t\tconst name = model.getName();\n\t\t\t\tif (model.getCellType() === cellType.FOREIGN_KEY_CELL) {\n\t\t\t\t\tif (foreignKeysObjects && Object.hasOwn(foreignKeysObjects, name)) {\n\t\t\t\t\t\tconst foreignObj = foreignKeysObjects[name];\n\t\t\t\t\t\treturn !(foreignObj && Object.values(foreignObj).every((obj) => isDefined(obj)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}, [inputModels, inputModels.current, foreignKeysObjects, actionParameters]);\n\n\tconst setParameters = useCallback(\n\t\t(propName, finalValue, dataField, value) => {\n\t\t\tsetActionParameters((prevParams) => ({ ...prevParams, [propName]: value }));\n\t\t\tsetForeignKeysObject((prevParams) => ({ ...prevParams, [propName]: finalValue }));\n\t\t},\n\t\t[actionParameters],\n\t);\n\n\tuseEffect(() => {\n\t\tcommunicator.getTableActionParameterModels(tableId, actionId).then((res) => {\n\t\t\tconst inputParametersModels = InputParameterModel.createInputParametersModels(res, () =>\n\t\t\t\ttableInstance.getMetadata(),\n\t\t\t).map((input) => {\n\t\t\t\tinput.setActionId(actionId);\n\t\t\t\treturn DbeTypesFactory(input, InputParameterModel) as InputParameterModel;\n\t\t\t});\n\t\t\tinputParametersModels.map((paramModel) => {\n\t\t\t\tparamModel.getDependsOnParamsList().map(([input, value]) => {\n\t\t\t\t\tconst disabled = value ? !paramModel.getDefaultValue() : paramModel.getDefaultValue();\n\t\t\t\t\tdisabled && setDisabledInputs((prev) => [...prev, input]);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tparamNames.current = inputParametersModels.map((input) => input.getName());\n\t\t\tinputModels.current = inputParametersModels;\n\t\t\tsetLoading(true);\n\t\t});\n\t}, [tableId, actionId]);\n\n\tconst formData = useMemo(() => {\n\t\treturn inputModels.current.reduce((models, model) => {\n\t\t\treturn { ...models, [model.parameterName]: model };\n\t\t}, {});\n\t}, [inputModels]);\n\n\tconst disableFieldsByDependsOnParamsList = useCallback((e, inputModel) => {\n\t\tinputModel.getDependsOnParamsList().map(([input, value]) => {\n\t\t\tformRef?.current?.instance?.getEditor(input)?.option('disabled', value ? !e.value : e.value);\n\t\t});\n\t}, []);\n\n\tif (!isLoading) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<form\n\t\t\t\taction=\"src/Components/modals/index\"\n\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\tif (confirmationRequired) {\n\t\t\t\t\t\tconst confirmed = confirm(translate('_CHECK_EXECUTION_ACTION'), 'W2MO');\n\t\t\t\t\t\tconfirmed.then((isConfirmed) => {\n\t\t\t\t\t\t\tisConfirmed && handleSubmit(e);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\thandleSubmit(e);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tid={'tableActionForm'}\n\t\t\t>\n\t\t\t\t<Form colCount={1} formData={formData} ref={formRef}>\n\t\t\t\t\t{inputModels.current.map((inputModel) => {\n\t\t\t\t\t\tconst defaultValue =\n\t\t\t\t\t\t\tactionParameters && Object.hasOwn(actionParameters, inputModel.getName())\n\t\t\t\t\t\t\t\t? actionParameters[inputModel.getName()]\n\t\t\t\t\t\t\t\t: inputModel.getDefaultValue();\n\t\t\t\t\t\tif (inputModel.getCellType() === cellType.FOREIGN_KEY_CELL) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\t\t\t\t{...inputModel.getInputParameters()}\n\t\t\t\t\t\t\t\t\tcomponent={inputModel.getFormCellRender(\n\t\t\t\t\t\t\t\t\t\tObject.assign(\n\t\t\t\t\t\t\t\t\t\t\tforeignKeysObjects ? foreignKeysObjects[inputModel.getName()] || {} : {},\n\t\t\t\t\t\t\t\t\t\t\tactionParameters,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\t\t\t\tsetParameters: (finalValue, dataField, value) =>\n\t\t\t\t\t\t\t\t\t\t\tsetParameters(inputModel.getName(), finalValue, dataField, value),\n\t\t\t\t\t\t\t\t\t\t...inputModel.getEditorOptionsForInputParameters(),\n\t\t\t\t\t\t\t\t\t\tvalue: defaultValue,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\t\t\tname={inputModel.getName()}\n\t\t\t\t\t\t\t\tdataField={inputModel.getName()}\n\t\t\t\t\t\t\t\teditorType={inputModel.getViewModel().getInputType()}\n\t\t\t\t\t\t\t\tkey={inputModel.getName()}\n\t\t\t\t\t\t\t\tlabel={{ text: inputModel.getCaption() }}\n\t\t\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\t\t\t...inputModel.getEditorOptionsForInputParameters(),\n\t\t\t\t\t\t\t\t\tvalue: defaultValue,\n\t\t\t\t\t\t\t\t\tonValueChanged: (e) => {\n\t\t\t\t\t\t\t\t\t\tsetActionParameters((prev) => {\n\t\t\t\t\t\t\t\t\t\t\treturn { ...prev, [inputModel.getName()]: e.value };\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tdisableFieldsByDependsOnParamsList(e, inputModel);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tdisabled: initialDisabledInputs.includes(inputModel.getName()),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{inputModel.getChildren()}\n\t\t\t\t\t\t\t</SimpleItem>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t\t<GroupItem colCount={helpLink ? 2 : 1}>\n\t\t\t\t\t\t{helpLink && (\n\t\t\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\t\t\tcssClass={'help-button'}\n\t\t\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\t\t\ticon: HelpIcon,\n\t\t\t\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\t\t\t\tonClick: () => window.open(helpLink, '_blank'),\n\t\t\t\t\t\t\t\t\tstylingMode: 'text',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t\ttext: translate('_EXECUTE_BUTTON'),\n\t\t\t\t\t\t\t\tuseSubmitBehavior: true,\n\t\t\t\t\t\t\t\tdisabled: isExecuteBtnDisabled,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GroupItem>\n\t\t\t\t</Form>\n\t\t\t</form>\n\t\t</Fragment>\n\t);\n};\n\nexport default TableActionModal;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { useMemo, useState } from 'react';\nimport Form, { SimpleItem } from 'devextreme-react/form';\nimport InputType from '../../../../models/Enums/InputType';\n\nconst StartsWith = ({ data, column }) => {\n\tconst [inputValue, setInputValue] = useState(() => data.value || '');\n\tconst type = useMemo(() => {\n\t\tconst type = column.getViewModel().getInputType();\n\t\tif (type === InputType.TextBox || type === InputType.NumberBox) {\n\t\t\treturn type;\n\t\t}\n\t\treturn InputType.TextBox;\n\t}, []);\n\n\treturn (\n\t\t<Form>\n\t\t\t<SimpleItem\n\t\t\t\teditorType={type}\n\t\t\t\teditorOptions={{\n\t\t\t\t\tvalue: inputValue,\n\t\t\t\t\tonValueChanged: (e) => {\n\t\t\t\t\t\tsetInputValue(e.value);\n\t\t\t\t\t\tdata.setValue(e.value);\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t</Form>\n\t);\n};\n\nexport default StartsWith;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport FilterBuilder, { CustomOperation, Field } from 'devextreme-react/filter-builder';\nimport { ColumnModel, FilterGroup } from '../../../models/Classes';\nimport EditorComponentCustomOperations from './CustomOperations/EditorComponentCustomOperations';\nimport { DxOperations } from '../../../constants/FilterBuilderConstants';\nimport SearchInText from './CustomOperations/SearchInText';\nimport AbstractColumnModel from '../../../models/Classes/AbstractColumnModel';\nimport StartsWith from './CustomOperations/StartsWith';\nimport translate from '../../../i18n/localization';\n\nconst BuilderFilter = ({ tableInstance, defaultValue, getSettingChanges }) => {\n\tconst filterBuilderRef = useRef<FilterBuilder>();\n\tconst [selectedFilter, setSelectedFilter] = useState(() => {\n\t\treturn defaultValue && FilterGroup.parseFilterGroupToDxFilter(defaultValue);\n\t});\n\tconst fields: AbstractColumnModel[] = useMemo(() => tableInstance.getTableDataModel().getSortedColumn(), []);\n\n\tconst getColumnByFieldName = useCallback(\n\t\t(fieldName: string) => {\n\t\t\treturn fields.find((field) => field.getName() === fieldName);\n\t\t},\n\t\t[fields],\n\t);\n\n\tconst getParsedFilter = useCallback(() => {\n\t\tconst dxFilter = filterBuilderRef?.current?.instance.getFilterExpression();\n\t\treturn dxFilter && FilterGroup.createFilterGroup(dxFilter);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (selectedFilter && selectedFilter[1] === DxOperations.BETWEEN) {\n\t\t\tgetSettingChanges(getParsedFilter());\n\t\t} else {\n\t\t\tif (selectedFilter) {\n\t\t\t\tgetSettingChanges(\n\t\t\t\t\tFilterGroup.createFilterGroup(selectedFilter, null, (value) => {\n\t\t\t\t\t\t// this modifying needed for foreign buttons as we should have\n\t\t\t\t\t\t// object with text and value, but only value should be saved to filterGroup\n\t\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\t\treturn value?.map((val) => {\n\t\t\t\t\t\t\t\tconst isForeignButtonId =\n\t\t\t\t\t\t\t\t\tval instanceof Object && Object.hasOwn(val, 'foreignButtonId');\n\t\t\t\t\t\t\t\treturn isForeignButtonId ? val?.foreignButtonId : val;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (value instanceof Object && Object.hasOwn(value, 'foreignButtonId')) {\n\t\t\t\t\t\t\treturn value?.foreignButtonId;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}, [selectedFilter, filterBuilderRef, getParsedFilter]);\n\n\treturn (\n\t\t<>\n\t\t\t<FilterBuilder\n\t\t\t\tref={filterBuilderRef}\n\t\t\t\tvalue={selectedFilter}\n\t\t\t\tonValueChanged={(e) => {\n\t\t\t\t\tsetSelectedFilter(e.value);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{fields.map((column: ColumnModel) => {\n\t\t\t\t\treturn <Field {...column.getColumnParametersForFilterSetting()} />;\n\t\t\t\t})}\n\n\t\t\t\t<CustomOperation\n\t\t\t\t\tname={'anyof'}\n\t\t\t\t\tcaption={translate('IS_ANY_OF')}\n\t\t\t\t\ticon={'check'}\n\t\t\t\t\teditorRender={(data) => {\n\t\t\t\t\t\tconst column = getColumnByFieldName(data.field.dataField);\n\t\t\t\t\t\treturn <EditorComponentCustomOperations data={data} column={column} />;\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<CustomOperation\n\t\t\t\t\tname={'noneof'}\n\t\t\t\t\tcaption={translate('IS_NONE_OF')}\n\t\t\t\t\ticon={'close'}\n\t\t\t\t\teditorRender={(data) => {\n\t\t\t\t\t\tconst column = getColumnByFieldName(data.field.dataField);\n\t\t\t\t\t\treturn <EditorComponentCustomOperations data={data} column={column} />;\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<CustomOperation\n\t\t\t\t\tname={'searchintext'}\n\t\t\t\t\tcaption={translate('SEARCH_IN_TEXT')}\n\t\t\t\t\ticon={'search'}\n\t\t\t\t\teditorRender={(data) => {\n\t\t\t\t\t\treturn <SearchInText data={data} />;\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<CustomOperation\n\t\t\t\t\tname={'startswith'}\n\t\t\t\t\tcaption={translate('STARTS_WITH')}\n\t\t\t\t\ticon={'startswith'}\n\t\t\t\t\teditorRender={(data) => {\n\t\t\t\t\t\tconst column = getColumnByFieldName(data.field.dataField);\n\t\t\t\t\t\treturn <StartsWith data={data} column={column} />;\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<CustomOperation\n\t\t\t\t\tname={'endswith'}\n\t\t\t\t\tcaption={translate('ENDS_WITH')}\n\t\t\t\t\ticon={'endswith'}\n\t\t\t\t\teditorRender={(data) => {\n\t\t\t\t\t\tconst column = getColumnByFieldName(data.field.dataField);\n\t\t\t\t\t\treturn <StartsWith data={data} column={column} />;\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<CustomOperation\n\t\t\t\t\tname={'contains'}\n\t\t\t\t\tcaption={translate('CONTAINS')}\n\t\t\t\t\ticon={'contains'}\n\t\t\t\t\teditorRender={(data) => {\n\t\t\t\t\t\tconst column = getColumnByFieldName(data.field.dataField);\n\t\t\t\t\t\treturn <StartsWith data={data} column={column} />;\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<CustomOperation\n\t\t\t\t\tname={'notcontains'}\n\t\t\t\t\tcaption={translate('IS_NOT_LIKE')}\n\t\t\t\t\ticon={'doesnotcontain'}\n\t\t\t\t\teditorRender={(data) => {\n\t\t\t\t\t\treturn <SearchInText data={data} />;\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</FilterBuilder>\n\t\t</>\n\t);\n};\n\nexport default BuilderFilter;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { useMemo } from 'react';\nimport  translate from '../../../i18n/localization';\nimport { OrderingType } from '../../../models/Enums';\nimport Form, { ButtonItem, RequiredRule, SimpleItem } from 'devextreme-react/form';\nimport InputType from '../../../models/Enums/InputType';\nimport { Close } from '../../../assets/icons';\n\nconst SortOrderInfo = ({ item, setSortSettings, sortSettingsKeys, tableInstance }) => {\n\tconst [columnName, decs] = item;\n\n\tconst fields = useMemo(() => {\n\t\treturn tableInstance\n\t\t\t.getTableDataModel()\n\t\t\t.getSortedColumn()\n\t\t\t.filter((column) => {\n\t\t\t\treturn !sortSettingsKeys.includes(column.columnName) || columnName === column.columnName;\n\t\t\t});\n\t}, [columnName]);\n\n\tconst sortingValues = useMemo(() => {\n\t\treturn [\n\t\t\t{ sortOrderName: translate('_DESC'), key: OrderingType.DESCENDING },\n\t\t\t{ sortOrderName: translate('_ASC'), key: OrderingType.ASCENDING },\n\t\t];\n\t}, []);\n\n\treturn (\n\t\t<Form colCount={11} style={{ marginTop: '10px' }}>\n\t\t\t<SimpleItem\n\t\t\t\tcolSpan={5}\n\t\t\t\teditorType={InputType.SelectBox}\n\t\t\t\teditorOptions={{\n\t\t\t\t\titems: fields,\n\t\t\t\t\tsearchMode: 'contains',\n\t\t\t\t\tsearchEnabled: true,\n\t\t\t\t\tsearchExpr: (col) => col.getCaption(),\n\t\t\t\t\tdisplayExpr: (col) => col?.getCaption(),\n\t\t\t\t\tvalueExpr: 'columnName',\n\t\t\t\t\tvalue: columnName,\n\t\t\t\t\tonValueChanged: (event) => {\n\t\t\t\t\t\tconst { previousValue, value } = event;\n\t\t\t\t\t\tsetSortSettings((prev) => {\n\t\t\t\t\t\t\tconst index = prev.findIndex((sort) => sort[0] === previousValue);\n\t\t\t\t\t\t\treturn [...prev.slice(0, index), [value, decs], ...prev.slice(index + 1)];\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<RequiredRule />\n\t\t\t</SimpleItem>\n\t\t\t<SimpleItem\n\t\t\t\tcolSpan={5}\n\t\t\t\teditorType={InputType.SelectBox}\n\t\t\t\teditorOptions={{\n\t\t\t\t\titems: sortingValues,\n\t\t\t\t\tdisplayExpr: 'sortOrderName',\n\t\t\t\t\tvalueExpr: 'key',\n\t\t\t\t\tvalue: decs,\n\t\t\t\t\tonValueChanged: (event) => {\n\t\t\t\t\t\tconst { value } = event;\n\t\t\t\t\t\tsetSortSettings((prev) => {\n\t\t\t\t\t\t\tconst index = prev.findIndex((sort) => sort[0] === columnName);\n\t\t\t\t\t\t\treturn [...prev.slice(0, index), [columnName, value], ...prev.slice(index + 1)];\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<ButtonItem\n\t\t\t\tcolSpan={1}\n\t\t\t\tbuttonOptions={{\n\t\t\t\t\ticon: Close,\n\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\tsetSortSettings((prev) => {\n\t\t\t\t\t\t\treturn [...prev].filter(([colName]) => colName !== columnName);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tstylingMode: 'text',\n\t\t\t\t}}\n\t\t\t/>\n\t\t</Form>\n\t);\n};\n\nexport default SortOrderInfo;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { useEffect, useState } from 'react';\nimport translate from '../../../i18n/localization';\nimport { OrderingType } from '../../../models/Enums';\nimport SortOrderInfo from './SortOrderInfo';\nimport Form, { ButtonItem } from 'devextreme-react/form';\nimport { Add } from '../../../assets/icons';\n\nconst BuilderSorting = ({ tableInstance, defaultValue, getSettingChanges }) => {\n\tconst [sortSetting, setSortSetting] = useState([]);\n\tconst [columns, setColumns] = useState(() => tableInstance.getTableDataModel().getSortedColumn());\n\n\tuseEffect(() => {\n\t\tsetSortSetting(() => {\n\t\t\treturn (\n\t\t\t\t!defaultValue\n\t\t\t\t\t? Object.entries({ [columns[0].columnName]: OrderingType.DESCENDING })\n\t\t\t\t\t: Object.entries(defaultValue)\n\t\t\t).sort(([name1], [name2]) => {\n\t\t\t\tif (name1 < name2) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (name1 > name2) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t});\n\t}, [defaultValue]);\n\n\tuseEffect(() => {\n\t\tsetColumns((prev) => {\n\t\t\treturn prev.filter(({ columnName }) => {\n\t\t\t\treturn !Object.keys(Object.fromEntries(sortSetting)).includes(columnName);\n\t\t\t});\n\t\t});\n\t\tgetSettingChanges(Object.fromEntries(sortSetting));\n\t}, [sortSetting]);\n\n\treturn (\n\t\t<Form>\n\t\t\t<ButtonItem\n\t\t\t\tcssClass={'add-sorting-button'}\n\t\t\t\tbuttonOptions={{\n\t\t\t\t\ticon: Add,\n\t\t\t\t\ttext: translate('SORT_BY'),\n\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\tsetSortSetting((prev) => {\n\t\t\t\t\t\t\treturn [...prev, [columns[0].columnName, OrderingType.DESCENDING]];\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t{sortSetting.map((item, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<SortOrderInfo\n\t\t\t\t\t\tkey={`${item.columnName}-${index}`}\n\t\t\t\t\t\titem={item}\n\t\t\t\t\t\ttableInstance={tableInstance}\n\t\t\t\t\t\tsetSortSettings={setSortSetting}\n\t\t\t\t\t\tsortSettingsKeys={Object.keys(Object.fromEntries(sortSetting))}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Form>\n\t);\n};\n\nexport default BuilderSorting;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport translate from '../../../i18n/localization';\nimport List, { ItemDragging } from 'devextreme-react/list';\nimport Form, { ButtonItem, GroupItem } from 'devextreme-react/form';\nimport { ColumnModel } from '../../../models/Classes';\n\nconst BuilderHiddenColumn = ({ tableInstance, defaultValue = [], getSettingChanges }) => {\n\tconst primaryKeys = useMemo(() => tableInstance.getTableDataModel().getPrimaryKeys(), []);\n\tconst listRefVisible = useRef<List>();\n\tconst listRefHidden = useRef<List>();\n\tconst listOfColumn = useMemo<ColumnModel[]>(() => {\n\t\treturn tableInstance.metadata.getVisibleColumnsModelSortedByAlphabet(primaryKeys);\n\t}, []);\n\n\tconst [hiddenColumns, setHiddenColumns] = useState<ColumnModel[]>(() => {\n\t\treturn listOfColumn.filter(({ columnName }) => (defaultValue || []).includes(columnName));\n\t});\n\tconst [visibleColumns, setVisibleColumns] = useState<ColumnModel[]>(() => {\n\t\treturn listOfColumn.filter(\n\t\t\t(column) => !hiddenColumns.find(({ columnName }) => columnName === column.columnName),\n\t\t);\n\t});\n\n\tconst lastColumn = useMemo(() => visibleColumns[visibleColumns.length - 1], [visibleColumns]);\n\n\tconst [selectedHiddenColumns, setSelectedHiddenColumns] = useState<ColumnModel[]>([]);\n\tconst [selectedVisibleColumns, setSelectedVisibleColumns] = useState<ColumnModel[]>([]);\n\n\tuseEffect(() => {\n\t\tgetSettingChanges(hiddenColumns.map(({ columnName }) => columnName));\n\t}, [hiddenColumns]);\n\n\tconst deselectAll = useCallback(() => {\n\t\tlistRefVisible?.current?.instance.unselectAll();\n\t\tlistRefHidden?.current?.instance.unselectAll();\n\t}, [listRefHidden, listRefVisible]);\n\n\treturn (\n\t\t<div id={'hidden-column-wrapper'}>\n\t\t\t<Form>\n\t\t\t\t<GroupItem colCount={2} cssClass={'hidden-column-filter-wrapper'}>\n\t\t\t\t\t<GroupItem colSpan={1} colCount={2} alignItemLabels={true} caption={translate('VISIBLE_COLUMNS')}>\n\t\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\t\tcolSpan={1}\n\t\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\t\ticon: 'chevronright',\n\t\t\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\t\t\tstylingMode: 'text',\n\t\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\t\tsetHiddenColumns((prev) => {\n\t\t\t\t\t\t\t\t\t\treturn [...selectedVisibleColumns, ...prev];\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tsetVisibleColumns((prev) => {\n\t\t\t\t\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t\t\t\t\t...prev.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t(column) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t!selectedVisibleColumns.find(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t({ columnName }) => columnName === column.columnName,\n\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tsetSelectedVisibleColumns([]);\n\t\t\t\t\t\t\t\t\tsetSelectedHiddenColumns([]);\n\t\t\t\t\t\t\t\t\tdeselectAll();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\t\tcolSpan={1}\n\t\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\t\ticon: 'chevrondoubleright',\n\t\t\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\t\t\tstylingMode: 'text',\n\t\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\t\tsetHiddenColumns(\n\t\t\t\t\t\t\t\t\t\tlistOfColumn.filter(({ columnName }) => columnName !== lastColumn.columnName),\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tsetVisibleColumns([lastColumn]);\n\t\t\t\t\t\t\t\t\tdeselectAll();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GroupItem>\n\t\t\t\t\t<GroupItem\n\t\t\t\t\t\tcolSpan={1}\n\t\t\t\t\t\tcolCount={2}\n\t\t\t\t\t\talignItemLabels={true}\n\t\t\t\t\t\tcaption={translate('HIDDEN_COLUMNS')}\n\t\t\t\t\t\tcssClass={'hidden-column-control'}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\t\tcolSpan={1}\n\t\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\t\ticon: 'chevronleft',\n\t\t\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\t\t\tstylingMode: 'text',\n\t\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\t\tsetVisibleColumns((prev) => {\n\t\t\t\t\t\t\t\t\t\treturn [...selectedHiddenColumns, ...prev];\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tsetHiddenColumns((prev) => {\n\t\t\t\t\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t\t\t\t\t...prev.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t(column) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t!selectedHiddenColumns.find(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t({ columnName }) => columnName === column.columnName,\n\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tsetSelectedHiddenColumns([]);\n\t\t\t\t\t\t\t\t\tsetSelectedVisibleColumns([]);\n\t\t\t\t\t\t\t\t\tdeselectAll();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\t\tcolSpan={1}\n\t\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\t\ticon: 'chevrondoubleleft',\n\t\t\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\t\t\tstylingMode: 'text',\n\t\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\t\tsetHiddenColumns([]);\n\t\t\t\t\t\t\t\t\tsetVisibleColumns([...visibleColumns, ...hiddenColumns]);\n\t\t\t\t\t\t\t\t\tsetSelectedHiddenColumns([]);\n\t\t\t\t\t\t\t\t\tsetSelectedVisibleColumns([]);\n\t\t\t\t\t\t\t\t\tdeselectAll();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GroupItem>\n\t\t\t\t</GroupItem>\n\t\t\t</Form>\n\t\t\t<div className=\"widget-container\">\n\t\t\t\t<List\n\t\t\t\t\theight={'450px'}\n\t\t\t\t\twidth={'50%'}\n\t\t\t\t\tdataSource={visibleColumns}\n\t\t\t\t\trepaintChangesOnly={true}\n\t\t\t\t\tselectionMode={'multiple'}\n\t\t\t\t\tdisplayExpr={(column: ColumnModel) => {\n\t\t\t\t\t\treturn column.getHeader();\n\t\t\t\t\t}}\n\t\t\t\t\tref={listRefVisible}\n\t\t\t\t\tonSelectionChanged={(e) => {\n\t\t\t\t\t\tsetSelectedVisibleColumns((prev) => {\n\t\t\t\t\t\t\tconst [addedItem] = e.addedItems;\n\t\t\t\t\t\t\tconst [removedItem] = e.removedItems;\n\t\t\t\t\t\t\tif (addedItem) {\n\t\t\t\t\t\t\t\treturn [...prev, addedItem];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (removedItem) {\n\t\t\t\t\t\t\t\treturn [...prev].filter(({ columnName }) => removedItem.columnName !== columnName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<ItemDragging\n\t\t\t\t\t\tallowReordering={false}\n\t\t\t\t\t\tgroup={'columns'}\n\t\t\t\t\t\tdata={'visibleColumns'}\n\t\t\t\t\t\tonAdd={(e) => {\n\t\t\t\t\t\t\tsetVisibleColumns((prev) => {\n\t\t\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t\t\t...prev.slice(0, e.toIndex),\n\t\t\t\t\t\t\t\t\thiddenColumns[e.fromIndex],\n\t\t\t\t\t\t\t\t\t...prev.slice(e.toIndex),\n\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonRemove={(e) => {\n\t\t\t\t\t\t\tif (visibleColumns.length > 1) {\n\t\t\t\t\t\t\t\tsetVisibleColumns((prev) => {\n\t\t\t\t\t\t\t\t\treturn [...prev.slice(0, e.fromIndex), ...prev.slice(e.fromIndex + 1)];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</List>\n\t\t\t\t<List\n\t\t\t\t\theight={'400px'}\n\t\t\t\t\twidth={'50%'}\n\t\t\t\t\tdataSource={hiddenColumns}\n\t\t\t\t\trepaintChangesOnly={true}\n\t\t\t\t\tdisplayExpr={(column: ColumnModel) => {\n\t\t\t\t\t\treturn column.getHeader();\n\t\t\t\t\t}}\n\t\t\t\t\tref={listRefHidden}\n\t\t\t\t\tselectionMode={'multiple'}\n\t\t\t\t\tonSelectionChanged={(e) => {\n\t\t\t\t\t\tsetSelectedHiddenColumns((prev) => {\n\t\t\t\t\t\t\tconst [addedItem] = e.addedItems;\n\t\t\t\t\t\t\tconst [removedItem] = e.removedItems;\n\t\t\t\t\t\t\tif (addedItem) {\n\t\t\t\t\t\t\t\treturn [...prev, addedItem];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (removedItem) {\n\t\t\t\t\t\t\t\treturn [...prev].filter(({ columnName }) => removedItem.columnName !== columnName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t\tpageLoadMode={'scrollBottom'}\n\t\t\t\t>\n\t\t\t\t\t<ItemDragging\n\t\t\t\t\t\tallowReordering={false}\n\t\t\t\t\t\tgroup={'columns'}\n\t\t\t\t\t\tdata={'hiddenColumns'}\n\t\t\t\t\t\tonAdd={(e) => {\n\t\t\t\t\t\t\tsetHiddenColumns((prev) => {\n\t\t\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t\t\t...prev.slice(0, e.toIndex),\n\t\t\t\t\t\t\t\t\tvisibleColumns[e.fromIndex],\n\t\t\t\t\t\t\t\t\t...prev.slice(e.toIndex),\n\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonRemove={(e) => {\n\t\t\t\t\t\t\tsetHiddenColumns((prev) => {\n\t\t\t\t\t\t\t\treturn [...prev.slice(0, e.fromIndex), ...prev.slice(e.fromIndex + 1)];\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</List>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default BuilderHiddenColumn;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React from 'react';\nimport { BuildersTypes } from '../../../constants/ModalsTypes';\nimport BuilderFilter from './BuilderFilter';\nimport BuilderSorting from './BuilderSorting';\nimport BuilderHiddenColumn from './BuilderHiddenColumn';\n\nconst Builder = ({ builderKey, tableInstance, defaultValue, getSettingChanges }) => {\n\tswitch (builderKey) {\n\t\tcase BuildersTypes.FILTER_BUILDER:\n\t\t\treturn (\n\t\t\t\t<BuilderFilter\n\t\t\t\t\ttableInstance={tableInstance}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t\tgetSettingChanges={getSettingChanges}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase BuildersTypes.HIDDEN_COLUMNS_BUILDER:\n\t\t\treturn (\n\t\t\t\t<BuilderHiddenColumn\n\t\t\t\t\ttableInstance={tableInstance}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t\tgetSettingChanges={getSettingChanges}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase BuildersTypes.SORTING_BUILDER:\n\t\t\treturn (\n\t\t\t\t<BuilderSorting\n\t\t\t\t\ttableInstance={tableInstance}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t\tgetSettingChanges={getSettingChanges}\n\t\t\t\t/>\n\t\t\t);\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n\nexport default Builder;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { useCallback, useRef, useState } from 'react';\nimport translate from '../../i18n/localization';\nimport Builder from './builders/Builder';\nimport Form, { ButtonItem, SimpleItem } from 'devextreme-react/form';\nimport { getValidationForFilterName } from '../common/DbeColumnChildrens';\nimport InputType from '../../models/Enums/InputType';\nimport debounce from 'lodash/debounce';\nimport ButtonNames from '../../services/ToolbarPanelManager/ButtonNames';\n\nconst AddNewSetting = ({ props, closeModal }) => {\n\tconst {\n\t\tbuttonName,\n\t\tsaveSetting,\n\t\tsetDataSource,\n\t\tbuilderKey,\n\t\tcreateNewSetting,\n\t\tgetTheBiggestObjectId,\n\t\ttableInstance,\n\t\tisNameExists,\n\t\tgetNextSettingName,\n\t} = props;\n\tconst formRef = useRef<Form>();\n\n\tconst [name, setName] = useState<string>(`Filter (${getNextSettingName()})`);\n\tconst [isPublic, setIsPublic] = useState(false);\n\tconst [newSetting, setNewSetting] = useState(null);\n\tconst getSettingChanges = useCallback((settingChanges) => setNewSetting(settingChanges), []);\n\tconst getFormRefInstance = useCallback(() => {\n\t\treturn formRef && formRef.current && formRef.current.instance;\n\t}, [formRef]);\n\n\tconst toolbarPanelDispatch = useCallback(\n\t\t(...args) => {\n\t\t\treturn tableInstance.toolbarPanelButtonManager.dispatchForToolbar(...args);\n\t\t},\n\t\t[tableInstance, tableInstance.toolbarPanelButtonManager],\n\t);\n\n\treturn (\n\t\t<div>\n\t\t\t<Form ref={formRef}>\n\t\t\t\t<SimpleItem\n\t\t\t\t\teditorType={InputType.TextBox}\n\t\t\t\t\tlabel={{ text: translate('FILTER_NAME') }}\n\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\tvalue: name,\n\t\t\t\t\t\tonValueChanged: debounce(\n\t\t\t\t\t\t\t(e) => {\n\t\t\t\t\t\t\t\tsetName(e.value);\n\t\t\t\t\t\t\t\tformRef.current.instance.validate();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t500,\n\t\t\t\t\t\t\t{ leading: true },\n\t\t\t\t\t\t),\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{getValidationForFilterName(isNameExists)}\n\t\t\t\t</SimpleItem>\n\t\t\t\t<SimpleItem\n\t\t\t\t\teditorType={InputType.CheckBox}\n\t\t\t\t\tlabel={{ text: translate('PUBLIC') }}\n\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\tvalue: isPublic,\n\t\t\t\t\t\tonValueChanged: (e) => {\n\t\t\t\t\t\t\tsetIsPublic(e.value);\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Form>\n\t\t\t<div className={'builder-wrapper'}>\n\t\t\t\t<Builder\n\t\t\t\t\tbuilderKey={builderKey}\n\t\t\t\t\ttableInstance={tableInstance}\n\t\t\t\t\tdefaultValue={null}\n\t\t\t\t\tgetSettingChanges={getSettingChanges}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Form>\n\t\t\t\t<ButtonItem\n\t\t\t\t\tcolSpan={1}\n\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\ttext: translate('SAVE'),\n\t\t\t\t\t\tstylingMode: 'contained',\n\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\tdisabled: (getFormRefInstance() && !getFormRefInstance().validate().isValid) || !newSetting,\n\t\t\t\t\t\tonClick: async () => {\n\t\t\t\t\t\t\tconst newFilter = createNewSetting(name, isPublic, getTheBiggestObjectId(), newSetting);\n\t\t\t\t\t\t\tawait saveSetting(newFilter).then((res) => {\n\t\t\t\t\t\t\t\tsetDataSource((prev) => [res, ...prev]);\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\ttoolbarPanelDispatch({\n\t\t\t\t\t\t\t\ttype: 'UPDATE_ITEMS',\n\t\t\t\t\t\t\t\tpayload: { items: [newFilter].map((filter) => ({ ...filter })), buttonName },\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default AddNewSetting;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Button } from 'devextreme-react/button';\nimport translate from '../../i18n/localization';\nimport Builder from './builders/Builder';\n\nconst EditSetting = ({ closeModal, props }) => {\n\tconst { builderKey, data, component, rowIndex, tableInstance } = props;\n\tconst [settingChanges, setSettingChanges] = useState();\n\n\tconst defaultValue = useMemo(() => {\n\t\treturn data.getSetting();\n\t}, [data]);\n\n\tuseEffect(() => {\n\t\tsetSettingChanges(data.getSetting());\n\t}, [data]);\n\n\tconst getSettingChanges = useCallback((settingChanges) => {\n\t\treturn setSettingChanges(settingChanges);\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<Builder\n\t\t\t\tbuilderKey={builderKey}\n\t\t\t\ttableInstance={tableInstance}\n\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\tgetSettingChanges={getSettingChanges}\n\t\t\t/>\n\t\t\t<div className={'dx-field'}>\n\t\t\t\t<div className={'dx-field-value'}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\twidth={70}\n\t\t\t\t\t\ttext={translate('SAVE')}\n\t\t\t\t\t\ttype={'success'}\n\t\t\t\t\t\tstylingMode={'contained'}\n\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\tconst setting = settingChanges;\n\t\t\t\t\t\t\tdata.setSetting(setting);\n\t\t\t\t\t\t\tcomponent.cellValue(rowIndex, data, setting);\n\t\t\t\t\t\t\tawait component.saveEditData();\n\t\t\t\t\t\t\tawait component.refresh();\n\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default EditSetting;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { useState } from 'react';\n\nconst Templates = ({ templatesElements, defaultValue, getSelectedTemplate }) => {\n\tconst [selectedTemplate, selectTemplate] = useState(defaultValue);\n\n\treturn (\n\t\t<div className=\"form\">\n\t\t\t<div className=\"dx-fieldset\">\n\t\t\t\t<div className=\"templates-container\">\n\t\t\t\t\t{templatesElements.map((template) => {\n\t\t\t\t\t\tconst isSelected = selectedTemplate && template.ID === selectedTemplate.ID;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey={template.ID}\n\t\t\t\t\t\t\t\tclassName={`${isSelected ? 'selected ' : ''}template-image-wrapper`}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tselectTemplate(template);\n\t\t\t\t\t\t\t\t\tgetSelectedTemplate(template);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<img style={{ width: '110px' }} src={template.ImageSrc} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default React.memo(Templates);\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { SelectBox } from 'devextreme-react/select-box';\nimport Templates from '../ScreenBuilder/Templates';\nimport { screenBuilderTemplates } from '../../constants/TemplateSource';\nimport translate from '../../i18n/localization';\nimport { TableInfo } from '../../models/Classes';\nimport Form, { ButtonItem, EmptyItem, GroupItem, SimpleItem } from 'devextreme-react/form';\nimport { isDefined } from '../../utils/utils';\nimport useScreenBuilderContext from '../../context/ScreenBuilderContext';\n\nconst SelectBoxesComponent = ({ selectBoxes, tablesList, selectedTables, setSelectedTables }) => {\n\treturn selectBoxes.map((selectBox) => {\n\t\treturn (\n\t\t\t<SelectBox\n\t\t\t\tdataSource={tablesList}\n\t\t\t\tdisplayExpr={(item) => {\n\t\t\t\t\treturn item && translate(item.name);\n\t\t\t\t}}\n\t\t\t\tvalueExpr={'table_name'}\n\t\t\t\tlabel={selectBox.label}\n\t\t\t\tsearchEnabled={true}\n\t\t\t\tsearchMode={'contains'}\n\t\t\t\tsearchExpr={translate('name')}\n\t\t\t\tsearchTimeout={200}\n\t\t\t\tkey={selectBox.key}\n\t\t\t\tvalue={selectedTables[`table${selectBox.key}`]}\n\t\t\t\tonSelectionChanged={(e) => {\n\t\t\t\t\tsetSelectedTables((prev) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...prev,\n\t\t\t\t\t\t\t[`table${selectBox.key}`]: e.selectedItem?.table_name,\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t});\n};\n\nconst ScreenBuilderConfig = ({ closeModal, props: { tableInstance } }) => {\n\tconst tablesList = useMemo<TableInfo[]>(() => tableInstance.getAllVisibleTables(), []);\n\tconst { setScreenBuilderConfig, destroyScreenBuilder, screenBuilder } = useScreenBuilderContext();\n\tconst { screenBuilderTemplateID, screenBuilderTables, isScreenBuilderOn } = screenBuilder;\n\tconst defaultTemplate = useMemo(() => screenBuilderTemplates.find((el) => el.ID === screenBuilderTemplateID), []);\n\tconst [selectedTemplate, setSelectedTemplate] = useState(isScreenBuilderOn ? defaultTemplate : null);\n\tconst [selectedTables, setSelectedTables] = useState<{ [key: string]: TableInfo }>({});\n\tconst formRef = useRef<Form>();\n\n\tuseEffect(() => {\n\t\tsetSelectedTables(() => {\n\t\t\tif (!isScreenBuilderOn) {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t\tif (!selectedTemplate || (selectedTemplate && selectedTemplate.ID !== screenBuilderTemplateID)) {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t\treturn screenBuilderTables.reduce((acc, tableName, index) => {\n\t\t\t\treturn { ...acc, [`table${index + 1}`]: tableName };\n\t\t\t}, {});\n\t\t});\n\t}, [selectedTemplate]);\n\tconst selectBoxes = useMemo(() => {\n\t\tif (selectedTemplate) {\n\t\t\treturn Array(selectedTemplate.numberOfTables)\n\t\t\t\t.fill({})\n\t\t\t\t.map((_, i) => {\n\t\t\t\t\treturn { label: `Table ${i + 1}`, key: i + 1 };\n\t\t\t\t});\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}, [selectedTemplate]);\n\n\treturn (\n\t\t<div id={'screen-builder-template'}>\n\t\t\t<Form ref={formRef}>\n\t\t\t\t<SimpleItem\n\t\t\t\t\trender={() => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Templates\n\t\t\t\t\t\t\t\ttemplatesElements={screenBuilderTemplates}\n\t\t\t\t\t\t\t\tdefaultValue={selectedTemplate}\n\t\t\t\t\t\t\t\tgetSelectedTemplate={setSelectedTemplate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<GroupItem>\n\t\t\t\t\t<SelectBoxesComponent\n\t\t\t\t\t\tselectedTables={selectedTables}\n\t\t\t\t\t\ttablesList={tablesList}\n\t\t\t\t\t\tselectBoxes={selectBoxes}\n\t\t\t\t\t\tsetSelectedTables={setSelectedTables}\n\t\t\t\t\t/>\n\t\t\t\t</GroupItem>\n\t\t\t\t<GroupItem colCount={10}>\n\t\t\t\t\t<EmptyItem colSpan={7} />\n\t\t\t\t\t<GroupItem colSpan={3} colCount={2}>\n\t\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\t\tverticalAlignment={'center'}\n\t\t\t\t\t\t\tcssClass={'zeroPadding'}\n\t\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\t\ttext: translate('Destroy'),\n\t\t\t\t\t\t\t\ttype: 'normal',\n\t\t\t\t\t\t\t\tstylingMode: 'contained',\n\t\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\t\tdestroyScreenBuilder();\n\t\t\t\t\t\t\t\t\ttableInstance.tableRelatedUserParameters.storeScreenBuilderSettings(null, null);\n\t\t\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdisabled: !screenBuilderTemplateID,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\t\tverticalAlignment={'center'}\n\t\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\t\ttext: translate('BUILD'),\n\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t\tstylingMode: 'contained',\n\t\t\t\t\t\t\t\tonClick: async () => {\n\t\t\t\t\t\t\t\t\tconst splitElementsByTemplate = selectedTemplate.splitScreenConfig(\n\t\t\t\t\t\t\t\t\t\tObject.values(selectedTables),\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tdestroyScreenBuilder();\n\t\t\t\t\t\t\t\t\tsetScreenBuilderConfig(\n\t\t\t\t\t\t\t\t\t\tsplitElementsByTemplate,\n\t\t\t\t\t\t\t\t\t\tselectedTemplate.ID,\n\t\t\t\t\t\t\t\t\t\tObject.values(selectedTables),\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\ttableInstance.tableRelatedUserParameters.storeScreenBuilderSettings(\n\t\t\t\t\t\t\t\t\t\tselectedTemplate.ID,\n\t\t\t\t\t\t\t\t\t\tObject.values(selectedTables),\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdisabled:\n\t\t\t\t\t\t\t\t\t!selectedTemplate ||\n\t\t\t\t\t\t\t\t\t!(\n\t\t\t\t\t\t\t\t\t\tObject.keys(selectedTables).length === selectedTemplate.numberOfTables &&\n\t\t\t\t\t\t\t\t\t\tObject.values(selectedTables).every((table) => isDefined(table))\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GroupItem>\n\t\t\t\t</GroupItem>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default ScreenBuilderConfig;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { useMemo, useRef, useState } from 'react';\nimport { childParentScreenTemplates } from '../../constants/TemplateSource';\nimport Templates from '../ScreenBuilder/Templates';\nimport translate from '../../i18n/localization';\nimport { useDbeActionsHelpLink } from '../../hooks/useHelpLink';\nimport { DbeActions } from '../../models/Enums/HelpLinks';\nimport Form, { ButtonItem, EmptyItem, GroupItem, RequiredRule, SimpleItem } from 'devextreme-react/form';\nimport InputType from '../../models/Enums/InputType';\nimport { HelpIcon } from '../../assets/icons';\nimport useScreenBuilderContext from '../../context/ScreenBuilderContext';\n\nconst ChildParentTableModal = ({ closeModal, props: { tableInstance, isChildOrParentTable } }) => {\n\tconst tablesList = useMemo(() => tableInstance.getTables(isChildOrParentTable), [isChildOrParentTable]);\n\tconst link = useDbeActionsHelpLink(\n\t\ttableInstance.warehouseUiType,\n\t\tisChildOrParentTable ? DbeActions.CHILD_RECORDS : DbeActions.PARENT_RECORDS,\n\t);\n\tconst { parentChildTable, destroyChildParentTable, setChildParentConfig } = useScreenBuilderContext();\n\tconst { childParentTable, childParentTableTemplateID } = parentChildTable;\n\n\tconst [joinedColumnGroups, setJoinedColumnGroups] = useState(null);\n\tconst defaultTemplate = useMemo(\n\t\t() => childParentScreenTemplates.find((el) => el.ID === childParentTableTemplateID),\n\t\t[],\n\t);\n\tconst [selectedTemplate, selectTemplate] = useState(defaultTemplate);\n\tconst [table, setTable] = useState<string>(childParentTable);\n\tconst formRef = useRef<Form>();\n\n\treturn (\n\t\t<div id={'screen-builder-template'}>\n\t\t\t<Form ref={formRef}>\n\t\t\t\t<SimpleItem\n\t\t\t\t\tdataField={'table'}\n\t\t\t\t\teditorType={InputType.SelectBox}\n\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\tlabel: translate('TABLE'),\n\t\t\t\t\t\titems: tablesList,\n\t\t\t\t\t\tsearchEnabled: true,\n\t\t\t\t\t\tsearchExpr: 'localizedChildTableName',\n\t\t\t\t\t\tsearchMode: 'contains',\n\t\t\t\t\t\tdisplayExpr: 'localizedChildTableName',\n\t\t\t\t\t\tvalueExpr: 'childTableName',\n\t\t\t\t\t\tvalue: table,\n\t\t\t\t\t\tonSelectionChanged: (e) => {\n\t\t\t\t\t\t\tsetTable(e.selectedItem?.childTableName);\n\t\t\t\t\t\t\tsetJoinedColumnGroups(e.selectedItem?.joinedColumnGroups);\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<RequiredRule />\n\t\t\t\t</SimpleItem>\n\t\t\t\t<SimpleItem\n\t\t\t\t\trender={() => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Templates\n\t\t\t\t\t\t\t\ttemplatesElements={childParentScreenTemplates}\n\t\t\t\t\t\t\t\tdefaultValue={defaultTemplate}\n\t\t\t\t\t\t\t\tgetSelectedTemplate={selectTemplate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t></SimpleItem>\n\t\t\t\t<GroupItem colCount={10}>\n\t\t\t\t\t<GroupItem colSpan={1}>\n\t\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\t\tcssClass={'help-button'}\n\t\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\t\ticon: HelpIcon,\n\t\t\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\t\t\tonClick: () => window.open(link, '_blank'),\n\t\t\t\t\t\t\t\tstylingMode: 'text',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GroupItem>\n\t\t\t\t\t<EmptyItem colSpan={6} />\n\t\t\t\t\t<GroupItem colSpan={3} colCount={2}>\n\t\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\t\tverticalAlignment={'center'}\n\t\t\t\t\t\t\tcssClass={'zeroPadding'}\n\t\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\t\ttext: translate('Destroy'),\n\t\t\t\t\t\t\t\ttype: 'normal',\n\t\t\t\t\t\t\t\tstylingMode: 'contained',\n\t\t\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\t\tdestroyChildParentTable();\n\t\t\t\t\t\t\t\t\ttableInstance.tableRelatedUserParameters.storeParentChildTableBuilderSettings(\n\t\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\t\tverticalAlignment={'center'}\n\t\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\t\ttext: translate('BUILD'),\n\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t\tstylingMode: 'contained',\n\t\t\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\t\tif (formRef.current.instance.validate().isValid) {\n\t\t\t\t\t\t\t\t\t\tdestroyChildParentTable();\n\t\t\t\t\t\t\t\t\t\tsetChildParentConfig(\n\t\t\t\t\t\t\t\t\t\t\tselectedTemplate.splitScreenConfig(table),\n\t\t\t\t\t\t\t\t\t\t\ttable,\n\t\t\t\t\t\t\t\t\t\t\tselectedTemplate.ID,\n\t\t\t\t\t\t\t\t\t\t\tjoinedColumnGroups,\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\ttableInstance.tableRelatedUserParameters.storeParentChildTableBuilderSettings(\n\t\t\t\t\t\t\t\t\t\t\tselectedTemplate.ID,\n\t\t\t\t\t\t\t\t\t\t\t[table],\n\t\t\t\t\t\t\t\t\t\t\t{ joinedColumnGroups },\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdisabled: !selectedTemplate,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GroupItem>\n\t\t\t\t</GroupItem>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default ChildParentTableModal;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport FieldType from '../Enums/FieldType';\nimport MassUpdateOperationType from '../Enums/MassUpdateOperationType';\n\nclass MassUpdateOperation {\n\tconstructor(\n\t\tprivate readonly indexKey: MassUpdateOperationType,\n\t\tprivate readonly fieldType: FieldType,\n\t\tprivate readonly message: string,\n\t\tprivate readonly considerUnit: boolean,\n\t) {\n\t\tthis.indexKey = indexKey;\n\t\tthis.fieldType = fieldType;\n\t\tthis.message = message;\n\t\tthis.considerUnit = considerUnit;\n\t}\n\n\tpublic static create(operation: MassUpdateOperation): MassUpdateOperation {\n\t\treturn new MassUpdateOperation(\n\t\t\toperation.indexKey,\n\t\t\toperation.fieldType,\n\t\t\toperation.message,\n\t\t\toperation.considerUnit,\n\t\t);\n\t}\n\n\tpublic getIndexKey(): string {\n\t\treturn this.indexKey;\n\t}\n\n\tpublic getMessageKey(): string {\n\t\treturn this.message;\n\t}\n\n\tpublic getFieldType(): FieldType {\n\t\treturn this.fieldType;\n\t}\n\n\tpublic toNullOperation(): boolean {\n\t\treturn this.getIndexKey() == MassUpdateOperationType.NULL;\n\t}\n\n\tpublic toZeroOperation(): boolean {\n\t\treturn this.getIndexKey() == MassUpdateOperationType.REPLACE_TO_ZERO;\n\t}\n\n\tpublic toNullOrZeroOperation(): boolean {\n\t\treturn (\n\t\t\tthis.getIndexKey() == MassUpdateOperationType.NULL ||\n\t\t\tthis.getIndexKey() == MassUpdateOperationType.REPLACE_TO_ZERO\n\t\t);\n\t}\n\n\tpublic isDevideBy(): boolean {\n\t\treturn this.getIndexKey() == MassUpdateOperationType.DIVIDE_BY;\n\t}\n\n\tpublic isConsiderUnit(): boolean {\n\t\treturn this.considerUnit;\n\t}\n}\n\nexport default MassUpdateOperation;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport SelectBox from 'devextreme-react/select-box';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport communicator from '../../api/Communicator';\nimport { ColumnModel } from '../../models/Classes';\nimport MassUpdateOperation from '../../models/Classes/MassUpdateOperation';\nimport DbeTypesFactory from '../../services/TableDataModel/DbeColumn/DbeColumnFactory';\n\nconst SelectBoxMassiveUpdate = ({ selectColumn, setLoading, tableInstance }) => {\n\tconst [columnsList, setColumnsList] = useState<ColumnModel[]>([]);\n\tconst tableName = useMemo<string>(() => tableInstance.getTableName(), []);\n\n\tuseEffect(() => {\n\t\tPromise.all([\n\t\t\tcommunicator.getUpdatableColumnModels(tableName),\n\t\t\tcommunicator.getMassUpdateOperations(tableName),\n\t\t]).then(\n\t\t\tasync ([columnModels, massUpdateOperationByColumn]: [\n\t\t\t\tColumnModel[],\n\t\t\t\t{ [key: string]: MassUpdateOperation[] },\n\t\t\t]) => {\n\t\t\t\tconst colModels = ColumnModel.createColumnModels(columnModels, tableInstance.getMetadata);\n\t\t\t\tPromise.all(\n\t\t\t\t\tcolModels.map(async (colModel) => {\n\t\t\t\t\t\tconst model = DbeTypesFactory(colModel, ColumnModel) as ColumnModel;\n\t\t\t\t\t\tconst massUpdateOperation = massUpdateOperationByColumn[model.getName()].map(\n\t\t\t\t\t\t\tMassUpdateOperation.create,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst operationByColumn = massUpdateOperation.filter((operation: MassUpdateOperation) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t(operation.toZeroOperation() ? model.getViewModel().isZeroAsAny : true) &&\n\t\t\t\t\t\t\t\t(operation.toNullOperation() ? model.getColumnTypeObject().isNullable : true)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tmodel.setMassiveUpdateOperations(operationByColumn);\n\t\t\t\t\t\tmodel.setIsMassiveUpdateField(true);\n\t\t\t\t\t\tmodel.setTableDataModel(tableInstance.getTableDataModel());\n\t\t\t\t\t\treturn model;\n\t\t\t\t\t}),\n\t\t\t\t).then((colModels: ColumnModel[]) => {\n\t\t\t\t\tsetColumnsList(colModels);\n\t\t\t\t\tsetLoading(true);\n\t\t\t\t});\n\t\t\t},\n\t\t);\n\t}, []);\n\n\treturn (\n\t\t<div className=\"dx-field-label\">\n\t\t\t<SelectBox\n\t\t\t\tdeferRendering={false}\n\t\t\t\titems={columnsList}\n\t\t\t\tdisplayExpr={(model) => model?.getCaption()}\n\t\t\t\tvalueExpr={(model) => model}\n\t\t\t\tonValueChange={(value) => selectColumn(value)}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default SelectBoxMassiveUpdate;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { ColumnModel } from '../models/Classes';\nimport MassUpdateRange, { getConfirmationMessageByRange } from '../models/Enums/MassUpdateRange';\nimport MassUpdateOperation from '../models/Classes/MassUpdateOperation';\nimport { confirm } from 'devextreme/ui/dialog';\nimport { parseBoolean } from '../utils/utils';\nimport communicator from '../api/Communicator';\n\nconst useMassiveUpdate = ({ executeMassiveUpdate, tableInstance, dbeDxGridInstance, closeModal }) => {\n\tconst [selectedColumn, selectColumn] = useState<ColumnModel>(null);\n\tconst [massUpdateRange, setMassUpdateRange] = useState<MassUpdateRange[]>([MassUpdateRange.ENTIRE_TABLE]);\n\tconst [radioButtonsValue, setRadioButtonsValue] = useState<MassUpdateOperation>(null);\n\tconst [foreignKeyParams, setForeignKeyParamsValue] = useState({});\n\tconst [inputValue, setInputValue] = useState(selectedColumn?.getDefaultValue());\n\tconst tableName = useMemo(() => tableInstance.getTableName(), []);\n\n\tuseEffect(() => {\n\t\tselectedColumn && setRadioButtonsValue(selectedColumn.getMassiveUpdateOperations()[0]);\n\t\tselectedColumn && setInputValue(selectedColumn?.getDefaultValue());\n\t}, [selectedColumn]);\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\tconst selectedRowKeys = await dbeDxGridInstance.getSelectedRowKeys();\n\t\t\tconst allAppliedFilters = tableInstance.getTableDataModel().getAllAppliedFilters();\n\t\t\tconst isSelected = selectedRowKeys.length > 0;\n\t\t\tawait communicator.getMassiveDataUpdateRanges(isSelected, allAppliedFilters, tableName).then((ranges) => {\n\t\t\t\tsetMassUpdateRange(ranges);\n\t\t\t});\n\t\t})();\n\t}, []);\n\n\tconst onInputChange = useCallback(\n\t\t({ event }) => {\n\t\t\tconst e = Object.hasOwn(event, 'originalEvent') ? event?.originalEvent : event;\n\t\t\tconst val = e.target?.value;\n\t\t\tif (val !== inputValue) {\n\t\t\t\tsetInputValue(val);\n\t\t\t}\n\t\t},\n\t\t[inputValue],\n\t);\n\tconst handleSubmit = useCallback(\n\t\t(e, range) => {\n\t\t\tconfirm(getConfirmationMessageByRange(range), 'W2MO').then((isConfirmed) => {\n\t\t\t\tif (isConfirmed) {\n\t\t\t\t\tconst form = document.forms.namedItem('massiveUpdateForm');\n\t\t\t\t\tconst formData = new FormData(form);\n\t\t\t\t\tconst parameters = [...formData.entries()].reduce((result, [paramName, value]) => {\n\t\t\t\t\t\treturn { ...result, [paramName]: parseBoolean(value) };\n\t\t\t\t\t}, foreignKeyParams);\n\t\t\t\t\tconst updatedRow = radioButtonsValue.toNullOrZeroOperation()\n\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcolumnName: selectedColumn.getName(),\n\t\t\t\t\t\t\t\t\tvalue: radioButtonsValue.toNullOperation()\n\t\t\t\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t\t\t\t: radioButtonsValue.toZeroOperation()\n\t\t\t\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t\t\t\t: '',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t  ]\n\t\t\t\t\t\t: Object.entries(parameters).map(([columnName, value]) => ({ columnName, value }));\n\t\t\t\t\texecuteMassiveUpdate(radioButtonsValue.getIndexKey(), updatedRow, range, closeModal);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t[selectedColumn, radioButtonsValue, foreignKeyParams],\n\t);\n\tconst setParameters = useCallback((row, colName, value) => {\n\t\tsetForeignKeyParamsValue({ ...row, [colName]: value });\n\t}, []);\n\n\tconst dbeColumn = useMemo(() => selectedColumn, [selectedColumn]);\n\tconst isInputValid = useMemo<boolean>(() => {\n\t\tconst parsedValue = parseInt(inputValue, 10);\n\t\tif (radioButtonsValue?.isDevideBy()) {\n\t\t\treturn !isNaN(parsedValue) && parsedValue !== 0;\n\t\t}\n\t\tif (radioButtonsValue?.toNullOrZeroOperation()) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn inputValue !== '';\n\t}, [inputValue, radioButtonsValue, dbeColumn]);\n\tconst isMassiveUpdatePossible = useMemo<boolean>(() => {\n\t\treturn !(\n\t\t\t!tableInstance.getTableDataModel().getUniqColumns().length &&\n\t\t\t!!dbeDxGridInstance.getSelectedRowKeys().length\n\t\t);\n\t}, []);\n\tconst isDisabledApplyButton = useMemo<boolean>(() => {\n\t\treturn !selectedColumn || !radioButtonsValue || !isMassiveUpdatePossible || !isInputValid;\n\t}, [selectedColumn, radioButtonsValue, isMassiveUpdatePossible, isInputValid]);\n\n\treturn {\n\t\tselectColumn,\n\t\tselectedColumn,\n\t\tdbeColumn,\n\t\tforeignKeyParams,\n\t\tradioButtonsValue,\n\t\tsetParameters,\n\t\tonInputChange,\n\t\tsetRadioButtonsValue,\n\t\tisMassiveUpdatePossible,\n\t\tmassUpdateRange,\n\t\thandleSubmit,\n\t\tisDisabledApplyButton,\n\t};\n};\n\nexport default useMassiveUpdate;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { Fragment, useCallback, useRef } from 'react';\nimport Form, { SimpleItem } from 'devextreme-react/form';\nimport RadioGroup from 'devextreme-react/radio-group';\nimport translate from '../../i18n/localization';\nimport { Button } from 'devextreme-react/button';\nimport { getButtonNameByType } from '../../utils/utils';\nimport SelectBoxMassiveUpdate from './SelectBoxMassiveUpdate';\nimport useMassiveUpdate from '../../hooks/useMassiveUpdate';\nimport { useDbeActionsHelpLink } from '../../hooks/useHelpLink';\nimport { DbeActions } from '../../models/Enums/HelpLinks';\nimport { HelpIcon } from '../../assets/icons';\n\nconst MassiveUpdateModal = ({ props, closeModal, setLoading }) => {\n\tconst { dbeDxGridInstance, executeMassiveUpdate, tableInstance } = props;\n\tconst formRef = useRef<Form>(null);\n\tconst helpLink = useDbeActionsHelpLink(tableInstance.warehouseUiType, DbeActions.MASSIVE_UPDATE);\n\n\tconst {\n\t\tselectColumn,\n\t\tselectedColumn,\n\t\tdbeColumn,\n\t\tforeignKeyParams,\n\t\tradioButtonsValue,\n\t\tsetParameters,\n\t\tonInputChange,\n\t\tsetRadioButtonsValue,\n\t\tisMassiveUpdatePossible,\n\t\tmassUpdateRange,\n\t\thandleSubmit,\n\t\tisDisabledApplyButton,\n\t} = useMassiveUpdate({ executeMassiveUpdate, tableInstance, dbeDxGridInstance, closeModal });\n\n\tconst isFormValid = useCallback(() => {\n\t\tif (formRef?.current?.instance) {\n\t\t\treturn formRef.current.instance.validate().isValid;\n\t\t}\n\t\treturn false;\n\t}, [formRef]);\n\n\treturn (\n\t\t<div id={'massive-update-modal'}>\n\t\t\t<form action=\"src/Components/modals/index\" id=\"massiveUpdateForm\">\n\t\t\t\t<div className=\"dx-fieldset\">\n\t\t\t\t\t<div className=\"dx-field\">\n\t\t\t\t\t\t<SelectBoxMassiveUpdate\n\t\t\t\t\t\t\tselectColumn={selectColumn}\n\t\t\t\t\t\t\tsetLoading={setLoading}\n\t\t\t\t\t\t\ttableInstance={tableInstance}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"dx-field-value\">\n\t\t\t\t\t\t\t{selectedColumn && (\n\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t<Form colCount={1} labelMode={'hidden'} ref={formRef}>\n\t\t\t\t\t\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\t\t\t\t\t\tkey={dbeColumn.getName()}\n\t\t\t\t\t\t\t\t\t\t\tdataField={dbeColumn.getName()}\n\t\t\t\t\t\t\t\t\t\t\tname={dbeColumn.getName()}\n\t\t\t\t\t\t\t\t\t\t\tcomponent={dbeColumn.getFormCellRender(\n\t\t\t\t\t\t\t\t\t\t\t\tforeignKeyParams,\n\t\t\t\t\t\t\t\t\t\t\t\tradioButtonsValue?.toNullOrZeroOperation(),\n\t\t\t\t\t\t\t\t\t\t\t\tradioButtonsValue,\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\t\t\t\t\t\t...dbeColumn.getColumnEditorOptions(),\n\t\t\t\t\t\t\t\t\t\t\t\tname: dbeColumn.getName(),\n\t\t\t\t\t\t\t\t\t\t\t\tdataField: dbeColumn.getName(),\n\t\t\t\t\t\t\t\t\t\t\t\tsetParameters: setParameters,\n\t\t\t\t\t\t\t\t\t\t\t\twidth: 'auto',\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled: radioButtonsValue?.toNullOrZeroOperation(),\n\t\t\t\t\t\t\t\t\t\t\t\tonValueChanged: onInputChange,\n\t\t\t\t\t\t\t\t\t\t\t\tonChange: onInputChange,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\teditorType={dbeColumn.getViewModel().getInputType()}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{dbeColumn.getChildren()}\n\t\t\t\t\t\t\t\t\t\t</SimpleItem>\n\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\t\t\t\titems={selectedColumn.getMassiveUpdateOperations()}\n\t\t\t\t\t\t\t\t\t\tdefaultValue={selectedColumn.getMassiveUpdateOperations()[0]}\n\t\t\t\t\t\t\t\t\t\tonValueChanged={({ value }) => setRadioButtonsValue(value)}\n\t\t\t\t\t\t\t\t\t\tvalueExpr={(operation) => operation}\n\t\t\t\t\t\t\t\t\t\tdisplayExpr={(operation) => translate(operation.message)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{!isMassiveUpdatePossible && (\n\t\t\t\t\t\t<div className=\"dx-field\" style={{ display: 'flex', alignItems: 'flex-end', color: '#d9534f' }}>\n\t\t\t\t\t\t\t{translate('MASSIVE_UPDATE_FOR_SELECTED_ROWS_IS_NOT_POSSIBLE')}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<div className={'dx-field'}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype={'normal'}\n\t\t\t\t\t\t\tstylingMode={'text'}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\twindow.open(helpLink, '_blank');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ticon={HelpIcon}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className={'dx-field-value'}>\n\t\t\t\t\t\t\t{massUpdateRange.map((range) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tkey={range}\n\t\t\t\t\t\t\t\t\t\ttext={getButtonNameByType(range)}\n\t\t\t\t\t\t\t\t\t\ttype={'success'}\n\t\t\t\t\t\t\t\t\t\tonClick={(e) => handleSubmit(e, range)}\n\t\t\t\t\t\t\t\t\t\tuseSubmitBehavior={false}\n\t\t\t\t\t\t\t\t\t\tstylingMode={'contained'}\n\t\t\t\t\t\t\t\t\t\tdisabled={isDisabledApplyButton || !isFormValid()}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default MassiveUpdateModal;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { useCallback, useRef, useState } from 'react';\nimport Form, { GroupItem, SimpleItem } from 'devextreme-react/form';\nimport translate from '../../i18n/localization';\nimport { Button } from 'devextreme-react/button';\nimport { parseValue } from '../../utils/utils';\nimport { ScrollView } from 'devextreme-react';\n\nimport 'devextreme-react/color-box';\nimport 'devextreme-react/select-box';\n\nimport './styles.css';\n\nconst AddNewRowModal = ({ props, closeModal }) => {\n\tconst { tableInstance, handleSubmitEvent } = props;\n\tconst [newRow, updateNewRow] = useState(() => tableInstance.getTableDataModel().getRowDefaultValues());\n\tconst formRef = useRef<Form>();\n\tconst getFormRefInstance = useCallback(() => {\n\t\treturn formRef && formRef.current && formRef.current.instance;\n\t}, [formRef]);\n\tconst handleSubmit = useCallback(\n\t\t(e) => {\n\t\t\te.preventDefault();\n\t\t\tif (getFormRefInstance().validate().isValid) {\n\t\t\t\tconst form = document.forms.namedItem('addNewRowForm');\n\t\t\t\tconst formData = new FormData(form);\n\t\t\t\tconst parameters: object = [...formData.entries()].reduce(\n\t\t\t\t\t(result, [paramName, value]) => {\n\t\t\t\t\t\treturn { ...result, [paramName]: parseValue(value) };\n\t\t\t\t\t},\n\t\t\t\t\t{ ID_user_change: window['USER_ID'] },\n\t\t\t\t);\n\t\t\t\thandleSubmitEvent(parameters, closeModal);\n\t\t\t}\n\t\t},\n\t\t[handleSubmitEvent],\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<form onSubmit={handleSubmit} id=\"addNewRowForm\" action={''}>\n\t\t\t\t<ScrollView id=\"scrollview\" height={'75vh'}>\n\t\t\t\t\t<Form\n\t\t\t\t\t\tformData={newRow}\n\t\t\t\t\t\treadOnly={false}\n\t\t\t\t\t\tshowColonAfterLabel={true}\n\t\t\t\t\t\tlabelLocation={'left'}\n\t\t\t\t\t\tscrollingEnabled={true}\n\t\t\t\t\t\tref={formRef}\n\t\t\t\t\t\tstyle={{ maxHeight: 700 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<GroupItem colCount={2}>\n\t\t\t\t\t\t\t{tableInstance\n\t\t\t\t\t\t\t\t.getTableDataModel()\n\t\t\t\t\t\t\t\t.getColumnsForAddingCloning()\n\t\t\t\t\t\t\t\t.map((column) => {\n\t\t\t\t\t\t\t\t\tconst edOption = {\n\t\t\t\t\t\t\t\t\t\t...column.getColumnEditorOptions(),\n\t\t\t\t\t\t\t\t\t\tdisabled: !column.getIsEditable(),\n\t\t\t\t\t\t\t\t\t\tsetParameters: (selectedRow, dataField, value) => {\n\t\t\t\t\t\t\t\t\t\t\tupdateNewRow((prevRow) => ({ ...prevRow, [column.getName()]: value }));\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\t\t\t\t\t\tkey={column.getName()}\n\t\t\t\t\t\t\t\t\t\t\tdataField={column.getName()}\n\t\t\t\t\t\t\t\t\t\t\tname={column.getName()}\n\t\t\t\t\t\t\t\t\t\t\tcomponent={column.getFormCellRender(newRow)}\n\t\t\t\t\t\t\t\t\t\t\tlabel={{ text: column.getCaption() }}\n\t\t\t\t\t\t\t\t\t\t\teditorOptions={edOption}\n\t\t\t\t\t\t\t\t\t\t\teditorType={column.getViewModel().getInputType()}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{column.getChildren()}\n\t\t\t\t\t\t\t\t\t\t</SimpleItem>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</GroupItem>\n\t\t\t\t\t</Form>\n\t\t\t\t</ScrollView>\n\t\t\t\t<div className={'dx-field'}>\n\t\t\t\t\t<div className={'dx-field-value'}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\twidth={70}\n\t\t\t\t\t\t\ttype={'success'}\n\t\t\t\t\t\t\ttext={translate('ADD_ROW')}\n\t\t\t\t\t\t\tstylingMode={'contained'}\n\t\t\t\t\t\t\tuseSubmitBehavior={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</>\n\t);\n};\n\nexport default AddNewRowModal;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport DataGrid, { Column, Editing, MasterDetail, Selection } from 'devextreme-react/data-grid';\nimport React, { Fragment, useEffect, useRef, useState } from 'react';\nimport ToolbarPanel from '../ToolbarPanel/ToolbarPanel';\nimport TableInstanceManager from '../../services/TableInstanceManager/TableInstanceManager';\nimport DetailRecordView from '../DetailView/DetailRecordView';\nimport Toolbar from 'devextreme-react/toolbar';\n\nimport './styles.css';\n\nconst CloneSelectedRowsModal = ({ props, closeModal, setLoading }) => {\n\tconst { selectedRows, tableInstance } = props;\n\tconst dataTableRef = useRef<DataGrid>(null);\n\tconst toolbarRef = useRef<Toolbar>(null);\n\tconst [tableData, setTableData] = useState<any[]>([]);\n\n\tuseEffect(() => {\n\t\tconst data = selectedRows.map((row) => {\n\t\t\treturn Object.entries(row).reduce((configuredRow: object, [name, value]) => {\n\t\t\t\tconst columnModel = tableInstance.getTableDataModel().getColumnModelByName(name);\n\t\t\t\tif (columnModel) {\n\t\t\t\t\tif (columnModel.getViewModel().isHideOnCLone) {\n\t\t\t\t\t\treturn configuredRow;\n\t\t\t\t\t}\n\t\t\t\t\tif (columnModel.getViewModel().isClearOnClone) {\n\t\t\t\t\t\treturn { ...configuredRow, [name]: columnModel.getViewModel().getDefaultValue() };\n\t\t\t\t\t}\n\t\t\t\t\treturn { ...configuredRow, [name]: value };\n\t\t\t\t}\n\t\t\t\treturn configuredRow;\n\t\t\t}, {});\n\t\t});\n\t\tsetTableData(data);\n\t\tsetLoading(true);\n\t}, [selectedRows]);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<ToolbarPanel\n\t\t\t\ttableType={TableInstanceManager.CLONE_ROW_IN_ORIGINAL_TABLE}\n\t\t\t\ttableInstance={tableInstance}\n\t\t\t\tdbeDxGridRef={dataTableRef}\n\t\t\t\ttoolbarRef={toolbarRef}\n\t\t\t\tcloseModal={closeModal}\n\t\t\t\tsaveButtonVisibility={false}\n\t\t\t/>\n\t\t\t<DataGrid\n\t\t\t\tkey={`cloneTable-dataGrid`}\n\t\t\t\tref={dataTableRef}\n\t\t\t\tdataSource={tableData}\n\t\t\t\tallowColumnReordering={false}\n\t\t\t\tallowColumnResizing={false}\n\t\t\t\tcellHintEnabled={true}\n\t\t\t\tshowColumnHeaders={true}\n\t\t\t\tremoteOperations={true}\n\t\t\t\tcacheEnabled={false}\n\t\t\t\trowAlternationEnabled={true}\n\t\t\t\tshowRowLines={true}\n\t\t\t\tshowBorders={true}\n\t\t\t>\n\t\t\t\t<Editing mode=\"cell\" allowUpdating={true} refreshMode={'repaint'} startEditAction={'dblClick'} />\n\t\t\t\t<Selection mode={'multiple'} showCheckBoxesMode={'none'} />\n\t\t\t\t{tableInstance.getTableDataModel().columns.map((column) => {\n\t\t\t\t\tif (!column.getViewModel().isHideOnCLone) {\n\t\t\t\t\t\treturn <Column {...column.getColumnParameters()}>{column.getChildren()}</Column>;\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t})}\n\t\t\t\t<MasterDetail\n\t\t\t\t\tenabled={true}\n\t\t\t\t\tcomponent={({ data }) => (\n\t\t\t\t\t\t<DetailRecordView\n\t\t\t\t\t\t\t{...data}\n\t\t\t\t\t\t\tdbeDxGridRef={dataTableRef}\n\t\t\t\t\t\t\ttableInstance={tableInstance}\n\t\t\t\t\t\t\tid={'detail-row-view'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</DataGrid>\n\t\t</Fragment>\n\t);\n};\n\nexport default CloneSelectedRowsModal;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport translate from '../i18n/localization';\n\nexport const resultSettings = [\n\t{ id: 0, text: translate('SHOW_COMMON_RECORDS'), key: 'showCommonRecords' },\n\t{ id: 1, text: translate('SHOW_CHANGED_ON_DATE'), key: 'showChangedColumn' },\n];\n\nexport const excludedColumns = ['ID_user_change', 'changed'];\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport Form, { ButtonItem, GroupItem, SimpleItem } from 'devextreme-react/form';\nimport RadioGroup from 'devextreme-react/radio-group';\nimport translate from '../../i18n/localization';\nimport ICompareDataButton from '../../services/CompareTableManager/ICompareDataButton';\nimport DxCompareTypeGroup from '../../models/Enums/DxCompareTypeGroup';\nimport { useFilters, useHiddenColumns } from '../../hooks';\nimport CompareTableDto from '../../services/CompareTableManager/CompareTableDto';\nimport Communicator from '../../api/Communicator';\nimport useParentTablePopupContext from '../../context/ParentTablePopupContext';\nimport { excludedColumns, resultSettings } from '../../constants/CompareTableConstants';\nimport { ColumnModel } from '../../models/Classes';\nimport { useDbeActionsHelpLink } from '../../hooks/useHelpLink';\nimport { DbeActions } from '../../models/Enums/HelpLinks';\nimport { HelpIcon } from '../../assets/icons';\nimport InputType from '../../models/Enums/InputType';\nimport { NO_FILTER } from '../../constants/FiltersConstants';\n\nconst CompareTablesParametersModal = ({\n\tprops: { tableInstance, handleCompareTable, dbeDxGridInstance },\n\tcloseModal,\n}) => {\n\tconst formRef = useRef<Form>();\n\tconst { setCompareTableData } = useParentTablePopupContext();\n\tconst [campaigns, setCampaigns] = useState<{ [key: string]: any }>([]);\n\tconst primaryKeys = useMemo<string[]>(() => tableInstance.getTableDataModel().getPrimaryKeys(), []);\n\tconst compareTableDto = useMemo<CompareTableDto>(() => CompareTableDto.getCompareTableDto(), []);\n\tconst [compareType, setCompareType] = useState<ICompareDataButton>();\n\tconst [compareButtons, setCompareButtons] = useState<ICompareDataButton[]>([]);\n\n\tuseEffect(() => {\n\t\ttableInstance.tableDataModel.getCompareTableManager().then((compareManager) => {\n\t\t\tconst compareButtons = compareManager.getVisibleCompareTableButtons();\n\t\t\tsetCompareType(compareButtons[0]);\n\t\t\tsetCompareButtons(compareButtons);\n\t\t});\n\t}, []);\n\n\tconst columns = useMemo<ColumnModel[]>(() => {\n\t\treturn tableInstance\n\t\t\t.getTableDataModel()\n\t\t\t.getMetadata()\n\t\t\t.getVisibleColumnsModel()\n\t\t\t.filter(({ columnName }) => !excludedColumns.includes(columnName));\n\t}, []);\n\n\tuseEffect(() => {\n\t\tcompareTableDto.setComparableColumnsModels(primaryKeys);\n\t\tCommunicator.getAllCampaigns().then((data) => setCampaigns(data));\n\t}, []);\n\n\tconst [groupedFilters] = useFilters(tableInstance);\n\tconst [groupedHiddenColumns] = useHiddenColumns(tableInstance);\n\tconst actionType = useMemo(() => DbeActions[compareType?.name], [compareType]);\n\tconst helpLink = useDbeActionsHelpLink(tableInstance.warehouseUiType, actionType);\n\treturn (\n\t\t<div className=\"compare-table-modal form-container\">\n\t\t\t<Form colCount={2} ref={formRef}>\n\t\t\t\t<GroupItem caption={translate('SELECT_COMPARE_TYPE')}>\n\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\titems={compareButtons}\n\t\t\t\t\t\tdefaultValue={compareType}\n\t\t\t\t\t\tdisplayExpr={'localizedName'}\n\t\t\t\t\t\tonValueChange={(data: ICompareDataButton) => {\n\t\t\t\t\t\t\tsetCompareType(data);\n\t\t\t\t\t\t\tcompareTableDto.setCompareTablesType(data.getName(), primaryKeys);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</GroupItem>\n\t\t\t\t<GroupItem caption={compareType?.getCaption()}>\n\t\t\t\t\t{compareType?.getComponent(tableInstance, campaigns)}\n\t\t\t\t</GroupItem>\n\t\t\t\t<GroupItem caption={translate('FILTER_SETTINGS')}>\n\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\tlabel={{ text: translate('SELECT_FILTER') }}\n\t\t\t\t\t\teditorType={InputType.SelectBox}\n\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\tdataSource: groupedFilters,\n\t\t\t\t\t\t\tgrouped: true,\n\t\t\t\t\t\t\tdisplayExpr: 'settingName',\n\t\t\t\t\t\t\tvalue: NO_FILTER,\n\t\t\t\t\t\t\tonValueChanged: ({ value }) => {\n\t\t\t\t\t\t\t\tconst filter = value.settingId !== NO_FILTER ? value.setting : null;\n\t\t\t\t\t\t\t\tcompareTableDto.setCustomFilter(filter);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\tlabel={{ text: translate('HIDDEN_COLUMNS') }}\n\t\t\t\t\t\teditorType={InputType.SelectBox}\n\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\tdataSource: groupedHiddenColumns,\n\t\t\t\t\t\t\tgrouped: true,\n\t\t\t\t\t\t\tdisplayExpr: 'settingName',\n\t\t\t\t\t\t\tvalue: NO_FILTER,\n\t\t\t\t\t\t\tonValueChanged: ({ value }) => {\n\t\t\t\t\t\t\t\tconst hiddenColumns = value.settingId !== NO_FILTER ? value.setting : null;\n\t\t\t\t\t\t\t\tcompareTableDto.setHiddenColumns(hiddenColumns);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</GroupItem>\n\n\t\t\t\t<GroupItem caption={translate('RESULT_SETTINGS')}>\n\t\t\t\t\t{resultSettings.map(({ text, id, key }) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\t\t\tdataField={key}\n\t\t\t\t\t\t\t\tlabel={{ text: text }}\n\t\t\t\t\t\t\t\tkey={`${text}-${id}`}\n\t\t\t\t\t\t\t\teditorType={InputType.CheckBox}\n\t\t\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\t\t\tvalue: compareTableDto[key],\n\t\t\t\t\t\t\t\t\tonValueChanged: (e) => compareTableDto.setValueByKey(key, e.value),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</GroupItem>\n\n\t\t\t\t{compareType?.name === DxCompareTypeGroup.COMPARE_DATA_FROM_OTHER_LAYOUT && (\n\t\t\t\t\t<GroupItem\n\t\t\t\t\t\tcolSpan={2}\n\t\t\t\t\t\tcolCount={4}\n\t\t\t\t\t\titemType={'group'}\n\t\t\t\t\t\tcaption={translate('COMPARE_COLUMN_SETTINGS')}\n\t\t\t\t\t>\n\t\t\t\t\t\t{columns.map((column, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\t\t\t\tkey={`${column.columnName}-${index}`}\n\t\t\t\t\t\t\t\t\teditorType={InputType.CheckBox}\n\t\t\t\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\t\t\t\ttext: column.getCaption(),\n\t\t\t\t\t\t\t\t\t\tvalue: primaryKeys.includes(column.columnName),\n\t\t\t\t\t\t\t\t\t\tonValueChanged: () =>\n\t\t\t\t\t\t\t\t\t\t\tcompareTableDto.addComparableColumnsModels(column.columnName),\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</GroupItem>\n\t\t\t\t)}\n\n\t\t\t\t<GroupItem colSpan={2} colCount={2}>\n\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\tcssClass={'help-button'}\n\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\ticon: HelpIcon,\n\t\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\t\tonClick: () => window.open(helpLink, '_blank'),\n\t\t\t\t\t\t\tstylingMode: 'text',\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\ttext: translate('COMPARE'),\n\t\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tcompareTableDto.validate(primaryKeys) &&\n\t\t\t\t\t\t\t\t\tformRef?.current?.instance.validate().isValid\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\thandleCompareTable(\n\t\t\t\t\t\t\t\t\t\tcompareTableDto,\n\t\t\t\t\t\t\t\t\t\tsetCompareTableData,\n\t\t\t\t\t\t\t\t\t\ttableInstance.getTableName(),\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t\t\t\tdbeDxGridInstance.beginCustomLoading(translate('_COMPARE_LOADING_TEXT'));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</GroupItem>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default CompareTablesParametersModal;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport DataGrid, { Column } from 'devextreme-react/data-grid';\nimport React, { Fragment, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Button } from 'devextreme-react/button';\nimport translate from '../../i18n/localization';\n\nconst MergeRowsModal = ({ props, closeModal, setLoading }) => {\n\tconst { selectedRows, tableInstance, handleMergeRows } = props;\n\tconst dataTableRef = useRef<DataGrid>(null);\n\tconst [tableData, setTableData] = useState<any[]>([]);\n\n\tconst [finalRow, setFinalRow] = useState<any>({});\n\n\tconst selectedCells = useMemo(() => ({}), []);\n\n\tuseEffect(() => {\n\t\tsetTableData(selectedRows);\n\t\tsetFinalRow(selectedRows[0]);\n\t\tsetLoading(true);\n\t}, [selectedRows]);\n\n\tconst handleCellClick = useCallback((cellObj) => {\n\t\tif (cellObj.rowType === 'data') {\n\t\t\tconst {\n\t\t\t\tcolumn: { dataField },\n\t\t\t\tdata,\n\t\t\t\trowIndex,\n\t\t\t} = cellObj;\n\t\t\tselectedCells[dataField] = rowIndex;\n\t\t\tsetFinalRow((row) => {\n\t\t\t\treturn { ...row, [dataField]: data[dataField] };\n\t\t\t});\n\t\t}\n\t}, []);\n\n\tconst keyExpr = useMemo(() => {\n\t\treturn tableInstance ? tableInstance.getTableDataModel().getPrimaryKeys() : [];\n\t}, [tableInstance]);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<DataGrid\n\t\t\t\tkey={`mergeRows-dataGrid`}\n\t\t\t\tref={dataTableRef}\n\t\t\t\tdataSource={tableData}\n\t\t\t\tkeyExpr={keyExpr}\n\t\t\t\tallowColumnReordering={false}\n\t\t\t\tallowColumnResizing={false}\n\t\t\t\tcellHintEnabled={true}\n\t\t\t\tshowColumnHeaders={true}\n\t\t\t\tremoteOperations={true}\n\t\t\t\tcacheEnabled={false}\n\t\t\t\trowAlternationEnabled={true}\n\t\t\t\tshowRowLines={true}\n\t\t\t\tshowBorders={true}\n\t\t\t\tonCellClick={handleCellClick}\n\t\t\t\tonCellPrepared={(cellData) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tcolumn: { dataField },\n\t\t\t\t\t\tcellElement,\n\t\t\t\t\t\trowType,\n\t\t\t\t\t\trowIndex,\n\t\t\t\t\t} = cellData;\n\t\t\t\t\tif (rowType === 'data') {\n\t\t\t\t\t\tif (selectedCells[dataField] === rowIndex) {\n\t\t\t\t\t\t\tcellElement.style.backgroundColor = '#E6F5D6';\n\t\t\t\t\t\t} else if (selectedCells[dataField] === undefined && rowIndex === 0) {\n\t\t\t\t\t\t\tcellElement.style.backgroundColor = '#E6F5D6';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{tableInstance.getTableDataModel().columns.map((column) => {\n\t\t\t\t\tif (!column.getViewModel().isHideOnCLone) {\n\t\t\t\t\t\treturn <Column {...column.getColumnParameters()}>{column.getChildren()}</Column>;\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t})}\n\t\t\t</DataGrid>\n\t\t\t<div className={'dx-field'}>\n\t\t\t\t<div className={'dx-field-value'}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttext={translate('MERGE_ROWS')}\n\t\t\t\t\t\ttype={'success'}\n\t\t\t\t\t\tonClick={() => handleMergeRows(tableData, finalRow, closeModal)}\n\t\t\t\t\t\tuseSubmitBehavior={false}\n\t\t\t\t\t\tstylingMode={'contained'}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n\nexport default MergeRowsModal;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { Fragment, useCallback, useEffect, useRef, useState } from 'react';\nimport Form, { ButtonItem, GroupItem, SimpleItem } from 'devextreme-react/form';\nimport { InputParameterModel } from '../../models/Classes';\nimport translate from '../../i18n/localization';\nimport { CellType } from '../../models/Enums';\nimport DbeTypesFactory from '../../services/TableDataModel/DbeColumn/DbeColumnFactory';\nimport { IAbstractColumnModel } from '../../models/Interfaces';\nimport { useHelpLink } from '../../hooks';\nimport { HelpIcon } from '../../assets/icons';\n\nconst RecalculateReportData = ({ props, closeModal, setLoading }) => {\n\tconst { tableInstance, executeRecalculateReportData } = props;\n\tconst [inputParams, setInputParams] = useState<IAbstractColumnModel[]>([]);\n\tconst [foreignParams, setForeignParams] = useState({});\n\tconst formRef = useRef<Form>();\n\n\tconst [helpLink] = useHelpLink(tableInstance, tableInstance.table.getSpLink());\n\n\tconst isValidForeignKeys = useCallback(() => {\n\t\treturn Object.values(foreignParams).some(({ value, isRequired }) => {\n\t\t\treturn isRequired && !value;\n\t\t});\n\t}, [foreignParams]);\n\tconst handleSubmit = useCallback(\n\t\t(e) => {\n\t\t\te.preventDefault();\n\t\t\tif (formRef.current.instance.validate().isValid && !isValidForeignKeys()) {\n\t\t\t\tconst formData = new FormData(e.target);\n\t\t\t\tconst parameters = [...formData.entries()].reduce((result, [paramName, value]) => {\n\t\t\t\t\treturn { ...result, [paramName]: value };\n\t\t\t\t}, {});\n\n\t\t\t\tconst res = [];\n\t\t\t\t[\n\t\t\t\t\t...Object.entries({ ...parameters }),\n\t\t\t\t\t...Object.entries(foreignParams).map(([name, value]: [string, any]) => [name, value?.value]),\n\t\t\t\t].forEach((item: [string, string]) => {\n\t\t\t\t\tconst [key, value] = item;\n\t\t\t\t\tconst paramIndex = inputParams.findIndex((input) => input.getName() === key);\n\t\t\t\t\tres[paramIndex] = value;\n\t\t\t\t});\n\t\t\t\texecuteRecalculateReportData(res);\n\t\t\t\tcloseModal();\n\t\t\t}\n\t\t},\n\t\t[foreignParams, inputParams],\n\t);\n\n\tconst setForeignParameters = useCallback(\n\t\t(value, input) => {\n\t\t\tconst foreignKeyValue = value[input.foreignKeyInfo.joinedKeyColumnNames[input.parameterName]];\n\t\t\tsetForeignParams((prevParams) => ({\n\t\t\t\t...prevParams,\n\t\t\t\t[input.parameterName]: { value: foreignKeyValue, isRequired: input.getIsRequired() },\n\t\t\t}));\n\t\t},\n\t\t[foreignParams],\n\t);\n\n\tuseEffect(() => {\n\t\tconst inputParams = tableInstance.getReportInputParameters().map((input) => {\n\t\t\treturn DbeTypesFactory(input, InputParameterModel);\n\t\t});\n\n\t\tsetInputParams(inputParams);\n\t\tinputParams.forEach((input) => {\n\t\t\tif (input.getCellType() === CellType.FOREIGN_KEY_CELL) {\n\t\t\t\tsetForeignParams((prevParams) => ({\n\t\t\t\t\t...prevParams,\n\t\t\t\t\t[input.getName()]: { value: input.getDefaultValue(), isRequired: input.getIsRequired() },\n\t\t\t\t}));\n\t\t\t}\n\t\t});\n\t\tsetLoading(true);\n\t}, []);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<form onSubmit={handleSubmit} id={'recalculateReportDataForm'}>\n\t\t\t\t<Form ref={formRef}>\n\t\t\t\t\t{inputParams.map((input) => {\n\t\t\t\t\t\tinput.setTableDataModel(tableInstance.getTableDataModel());\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<SimpleItem\n\t\t\t\t\t\t\t\t{...input.getInputParameters()}\n\t\t\t\t\t\t\t\tcomponent={input.getFormCellRender()}\n\t\t\t\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\t\t\t\tsetParameters: (value) => setForeignParameters(value, input),\n\t\t\t\t\t\t\t\t\t...input.getEditorOptionsForInputParameters(),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\teditorType={input.getViewModel().getInputType()}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{input.getChildren()}\n\t\t\t\t\t\t\t</SimpleItem>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t\t<GroupItem colCount={2}>\n\t\t\t\t\t\t{helpLink && (\n\t\t\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\t\t\tcssClass={'help-button'}\n\t\t\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\t\t\ticon: HelpIcon,\n\t\t\t\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\t\t\t\tonClick: () => window.open(helpLink, '_blank'),\n\t\t\t\t\t\t\t\t\tstylingMode: 'text',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\t\t\ttext: translate('_EXECUTE_BUTTON'),\n\t\t\t\t\t\t\t\tuseSubmitBehavior: true,\n\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GroupItem>\n\t\t\t\t</Form>\n\t\t\t</form>\n\t\t</Fragment>\n\t);\n};\n\nexport default RecalculateReportData;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { useCallback, useRef, useState } from 'react';\nimport translate from '../../i18n/localization';\nimport Form, { ButtonItem, SimpleItem } from 'devextreme-react/form';\nimport InputType from '../../models/Enums/InputType';\nimport debounce from 'lodash/debounce';\nimport { getValidationForFilterName } from '../common/DbeColumnChildrens';\nimport { useSettingHooks } from '../../hooks';\n\nconst SelectionForFilterModal = ({ props: { tableInstance, setting, dataGrid, type }, closeModal }) => {\n\tconst formRef = useRef<Form>();\n\n\tconst {\n\t\taddSetting,\n\t\tsetSelectedSetting,\n\t\tcreateNewSetting,\n\t\tgetTheBiggestObjectId,\n\t\tisNameExists,\n\t\tgetNextSettingName,\n\t\tupdateToolbarButton,\n\t\tapplySettingToDataGrid,\n\t} = useSettingHooks(type)(tableInstance, dataGrid);\n\n\tconst [filterName, setFilterName] = useState<string>(`Filter (${getNextSettingName()})`);\n\tconst toolbarPanelDispatch = useCallback(\n\t\t(...args) => {\n\t\t\treturn tableInstance.toolbarPanelButtonManager.dispatchForToolbar(...args);\n\t\t},\n\t\t[tableInstance, tableInstance.toolbarPanelButtonManager],\n\t);\n\tconst getFormRefInstance = useCallback(() => {\n\t\treturn formRef && formRef.current && formRef.current.instance;\n\t}, [formRef]);\n\n\tconst onSaveHandler = useCallback(() => {\n\t\tconst newFilter = createNewSetting(filterName, false, getTheBiggestObjectId(), setting);\n\t\taddSetting(newFilter);\n\t\tsetSelectedSetting(newFilter);\n\t\tupdateToolbarButton(toolbarPanelDispatch, newFilter);\n\t\tapplySettingToDataGrid(newFilter);\n\t}, [filterName, setting, dataGrid]);\n\n\treturn (\n\t\t<div>\n\t\t\t<Form ref={formRef}>\n\t\t\t\t<SimpleItem\n\t\t\t\t\teditorType={InputType.TextBox}\n\t\t\t\t\teditorOptions={{\n\t\t\t\t\t\tvalue: filterName,\n\t\t\t\t\t\tonValueChanged: debounce(\n\t\t\t\t\t\t\t({ value }) => {\n\t\t\t\t\t\t\t\tsetFilterName(value);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t500,\n\t\t\t\t\t\t\t{ leading: true },\n\t\t\t\t\t\t),\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{getValidationForFilterName(isNameExists)}\n\t\t\t\t</SimpleItem>\n\t\t\t\t<ButtonItem\n\t\t\t\t\tverticalAlignment={'center'}\n\t\t\t\t\tcolSpan={1}\n\t\t\t\t\tbuttonOptions={{\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\ttext: translate('SAVE'),\n\t\t\t\t\t\tuseSubmitBehavior: false,\n\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\tif (getFormRefInstance() && getFormRefInstance().validate().isValid) {\n\t\t\t\t\t\t\t\tonSaveHandler();\n\t\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t\t\tdataGrid.clearSelection();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default SelectionForFilterModal;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport ExportModal from './ExportModal';\nimport SettingsModal from './SettingsModal';\nimport ImportModal from './ImportModal';\nimport UserParamsSettingsModal from './UserParamsSettingsModal';\nimport LinkWithFilter from './LinkWithFilter';\nimport TableActionModal from './TableActionModal';\nimport AddNewSettingsModal from './AddNewSetting';\nimport EditSetting from './EditSetting';\nimport ScreenBuilderConfig from './ScreenBuilderConfig';\n\nimport ModalsTypes from '../../constants/ModalsTypes';\nimport ChildParentTableModal from './ChildParentTableModal';\nimport MassiveUpdateModal from './MassiveUpdateModal';\nimport AddNewRowModal from './AddNewRowModal';\nimport CloneSelectedRowsModal from './CloneSelectedRowsModal';\nimport CompareTablesParametersModal from './CompareTablesParametersModal';\nimport MergeRowsModal from './MergeRowsModal';\nimport RecalculateReportData from './RecalculateReportData';\nimport SelectionForFilterModal from './SelectionForFilterModal';\n\nconst modalContentByName = {\n\t[ModalsTypes.TABLE_ACTION_MODAL]: TableActionModal,\n\t[ModalsTypes.SETTINGS_MODAL]: SettingsModal,\n\t[ModalsTypes.EXPORT_MODAL]: ExportModal,\n\t[ModalsTypes.IMPORT_MODAL]: ImportModal,\n\t[ModalsTypes.LINK_WITH_FILTER]: LinkWithFilter,\n\t[ModalsTypes.MASSIVE_UPDATE_MODAL]: MassiveUpdateModal,\n\n\t[ModalsTypes.USER_PARAMS_SETTINGS_MODAL]: UserParamsSettingsModal,\n\t[ModalsTypes.ADD_NEW_SETTINGS_MODAL]: AddNewSettingsModal,\n\t[ModalsTypes.EDIT_SETTING_MODAL]: EditSetting,\n\n\t[ModalsTypes.SCREEN_BUILDER_CONFIG]: ScreenBuilderConfig,\n\t[ModalsTypes.CHILD_PARENT_TABLE_MODAL]: ChildParentTableModal,\n\n\t[ModalsTypes.ADD_NEW_ROW_MODAL]: AddNewRowModal,\n\t[ModalsTypes.CLONE_SELECTED_ROWS_MODAL]: CloneSelectedRowsModal,\n\t[ModalsTypes.COMPARE_TABLES_PARAMETERS_MODAL]: CompareTablesParametersModal,\n\t[ModalsTypes.MERGE_ROWS_MODAL]: MergeRowsModal,\n\t[ModalsTypes.RECALCULATE_REPORT_DATA]: RecalculateReportData,\n\t[ModalsTypes.SELECTION_FOR_FILTER_MODAL]: SelectionForFilterModal,\n};\n\nexport { modalContentByName };\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, { useCallback, useState } from 'react';\nimport { Popup } from 'devextreme-react/popup';\nimport { isDefined } from '../../utils/utils';\n\nimport './styles.css';\nconst WithModalPopup = ({ ModalContent, modalName, visibility, props, closeModal }) => {\n\tconst [isLoading, setLoading] = useState<boolean>(false);\n\tconst close = useCallback(() => {\n\t\tcloseModal(modalName);\n\t\tsetLoading(false);\n\t}, [modalName]);\n\n\treturn (\n\t\t<Popup\n\t\t\tkey={modalName}\n\t\t\tvisible={visibility}\n\t\t\tonHiding={close}\n\t\t\tanimation={{ show: null }}\n\t\t\tdragEnabled={true}\n\t\t\thideOnOutsideClick={!isDefined(props.hideOnOutsideClick) ? props.hideOnOutsideClick : true}\n\t\t\tshowCloseButton={true}\n\t\t\tshowTitle={true}\n\t\t\ttitle={props.modalTitle || modalName}\n\t\t\twidth={props.width || 550}\n\t\t\theight={props.height || 'auto'}\n\t\t\tdeferRendering={true}\n\t\t\tminHeight={100}\n\t\t\twrapperAttr={{ class: 'modal-container' }}\n\t\t>\n\t\t\t{visibility ? (\n\t\t\t\t<ModalContent\n\t\t\t\t\ttableType={props.tableType}\n\t\t\t\t\topenModal={props.openModal}\n\t\t\t\t\tcloseModal={close}\n\t\t\t\t\tprops={props}\n\t\t\t\t\tsetLoading={setLoading}\n\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<div>Loading...</div>\n\t\t\t)}\n\t\t</Popup>\n\t);\n};\n\nexport const MemoizedModalPopup = React.memo(WithModalPopup, (prevProps, nextProps) => {\n\treturn prevProps.visibility === nextProps.visibility;\n});\n\nexport default MemoizedModalPopup;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2023\n ******************************************************************************/\n\nimport React, { useCallback, useContext, useReducer } from 'react';\nimport { modalContentByName } from '../Components/modals';\nimport MemoizedModalPopup from '../Components/modals/ToolbarModal';\n\ninterface IContextProps {\n\tchildren: JSX.Element[] | JSX.Element;\n}\n\nexport const ModalWindowPopupContext = React.createContext<any>(null);\n\nfunction reducer(state, action) {\n\tswitch (action.type) {\n\t\tcase 'OPEN_MODAL_WITH_PROPS': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[action.modalName]: { ...state[action.modalName], visibility: true, props: action.props },\n\t\t\t};\n\t\t}\n\n\t\tcase 'CLOSE_MODAL': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[action.modalName]: { visibility: false, props: {} },\n\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const ModalWindowPopupContextProvider = ({ children }: IContextProps) => {\n\tconst [state, dispatch] = useReducer(reducer, {}, () => {\n\t\treturn Object.keys(modalContentByName).reduce((acc, modalName) => {\n\t\t\treturn { ...acc, [modalName]: { visibility: false, props: {} } };\n\t\t}, {});\n\t});\n\n\tconst closeModal = useCallback(\n\t\t(modalName) => {\n\t\t\tdispatch({ type: 'CLOSE_MODAL', modalName });\n\t\t},\n\t\t[state, dispatch],\n\t);\n\n\tconst openModalWithProps = useCallback(\n\t\tasync (modalName, props) => {\n\t\t\tdispatch({ type: 'OPEN_MODAL_WITH_PROPS', modalName, props });\n\t\t\treturn async () => await closeModal(modalName);\n\t\t},\n\t\t[state, dispatch, closeModal],\n\t);\n\n\treturn (\n\t\t<ModalWindowPopupContext.Provider value={{ openModalWithProps, closeModal }}>\n\t\t\t<>\n\t\t\t\t{children}\n\t\t\t\t<div id=\"modals-root\">\n\t\t\t\t\t{Object.entries(modalContentByName).map(([modalName, ModalContent]) => {\n\t\t\t\t\t\tconst allProps = state[modalName];\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<MemoizedModalPopup\n\t\t\t\t\t\t\t\tkey={modalName}\n\t\t\t\t\t\t\t\tModalContent={ModalContent}\n\t\t\t\t\t\t\t\tmodalName={modalName}\n\t\t\t\t\t\t\t\tvisibility={allProps.visibility}\n\t\t\t\t\t\t\t\tprops={allProps.props}\n\t\t\t\t\t\t\t\tcloseModal={closeModal}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</>\n\t\t</ModalWindowPopupContext.Provider>\n\t);\n};\n\nconst useModalWindowPopupContext = () => useContext(ModalWindowPopupContext);\n\nexport default useModalWindowPopupContext;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nexport enum DbeActions {\n\tEXPORT = 'export',\n\tIMPORT = 'import',\n\tCHILD_RECORDS = 'show-child-records',\n\tPARENT_RECORDS = 'show-parent-records',\n\tMASSIVE_UPDATE = 'massive_update',\n\tSETTINGS = 'settings',\n\tCOMPARE_DATA_FROM_OTHER_LAYOUT = 'compare-data-from-other-layout',\n\tCOMPARE_DATA_WITHIN_THIS_LAYOUT = 'compare-data-within-this-layout',\n\tCOMPARE_DATA_BY_CAMPAIGN = 'compare-data-by-campaign',\n\tHIDDEN_COLUMN_FILTER = 'hidden-columns-filter',\n\tTABLE_SORTING = 'table-sorting',\n\tFILTERS = 'filters',\n\tLINK_WITH_FILTER = 'get-link-filtered-by-selected-rows',\n}\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\nimport { isDefined } from 'devextreme/core/utils/type';\n\nenum MassUpdateOperationType {\n\tREPLACE = 'replaceWith',\n\tREPLACE_TO_ZERO = 'replaceToZero',\n\tADD = 'add',\n\tSUBTRACT_BY = 'subtractBy',\n\tSUBTRACTED_BY = 'subtractedBy',\n\tMULTIPLY = 'multiply',\n\tDIVIDE_BY = 'divideBy',\n\tDIVIDED_BY = 'dividedBy',\n\tPREFIX_BY = 'prefixBy',\n\tSUFFIX_BY = 'suffixBy',\n\tNULL = 'null',\n}\n\ntype TypeForOperation = string | number | undefined | any;\n\nexport const MassUpdateValueStrategy = {\n\t[MassUpdateOperationType.REPLACE](prevValue: TypeForOperation, nextValue: TypeForOperation) {\n\t\treturn nextValue;\n\t},\n\t[MassUpdateOperationType.REPLACE_TO_ZERO]() {\n\t\treturn 0;\n\t},\n\t[MassUpdateOperationType.ADD](prevValue: TypeForOperation, nextValue: TypeForOperation) {\n\t\treturn parseInt(isDefined(prevValue) ? prevValue : 0, 10) + parseInt(isDefined(nextValue) ? nextValue : 0, 10);\n\t},\n\t[MassUpdateOperationType.SUBTRACT_BY](prevValue: TypeForOperation, nextValue: TypeForOperation) {\n\t\treturn parseInt(isDefined(prevValue) ? prevValue : 0, 10) - parseInt(isDefined(nextValue) ? nextValue : 0, 10);\n\t},\n\t[MassUpdateOperationType.SUBTRACTED_BY](prevValue: TypeForOperation, nextValue: TypeForOperation) {\n\t\treturn parseInt(isDefined(nextValue) ? nextValue : 0, 10) + parseInt(isDefined(prevValue) ? prevValue : 0, 10);\n\t},\n\t[MassUpdateOperationType.MULTIPLY](prevValue: TypeForOperation, nextValue: TypeForOperation) {\n\t\treturn parseInt(isDefined(prevValue) ? prevValue : 0, 10) * parseInt(isDefined(nextValue) ? nextValue : 0, 10);\n\t},\n\t[MassUpdateOperationType.DIVIDE_BY](prevValue: TypeForOperation, nextValue: TypeForOperation) {\n\t\treturn parseInt(isDefined(prevValue) ? prevValue : 0, 10) / parseInt(isDefined(nextValue) ? nextValue : 0, 10);\n\t},\n\t[MassUpdateOperationType.DIVIDED_BY](prevValue: TypeForOperation, nextValue: TypeForOperation) {\n\t\treturn parseInt(isDefined(nextValue) ? nextValue : 0, 10) - parseInt(isDefined(prevValue) ? prevValue : 0, 10);\n\t},\n\t[MassUpdateOperationType.PREFIX_BY](prevValue: TypeForOperation, nextValue: TypeForOperation) {\n\t\treturn (isDefined(nextValue) ? nextValue : '').toString() + (isDefined(prevValue) ? prevValue : '').toString();\n\t},\n\t[MassUpdateOperationType.SUFFIX_BY](prevValue: TypeForOperation, nextValue: TypeForOperation) {\n\t\treturn (isDefined(prevValue) ? prevValue : '').toString() + (isDefined(nextValue) ? nextValue : '').toString();\n\t},\n\t[MassUpdateOperationType.NULL]() {\n\t\treturn null;\n\t},\n};\n\nexport default MassUpdateOperationType;\n"],"names":["DetailRecordView","data","id","tableInstance","component","rowIndex","colCount","formRef","useRef","getFormRefInstance","useCallback","current","instance","saveValueToDataGrid","name","value","cellValue","saveEditData","column","useMemo","getTableDataModel","columns","formData","readOnly","showColonAfterLabel","labelLocation","validationGroup","minColWidth","ref","map","edOption","getColumnEditorOptions","disabled","getIsEditable","onValueChanged","e","getValidators","getValidatorForAsyncRule","then","isValid","getName","validate","setParameters","selectedRow","dataField","getIsRequired","repaint","SimpleItem","getFormCellRender","label","text","getCaption","editorOptions","editorType","getViewModel","getInputType","getValidationRules","React","KEY_MAP","backspace","tab","enter","escape","pageup","pagedown","end","home","arrowleft","arrowup","arrowright","arrowdown","delete","f","a","alt","control","shift","LEGACY_KEY_CODES","normalizeKeyName","event","isKeySupported","key","which","toLowerCase","String","fromCharCode","ShortcutOptions","code","ctrl","extraParams","keyOpt","this","KeyboardProcessor","tableType","keyListeners","Map","componentStorage","instances","listenKeyboardEvents","setComponentInstance","bind","buttonName","set","document","addEventListener","isComposing","keyCode","runListeners","keyName","ctrlKey","location","metaKey","shiftKey","altKey","originalEvent","keyDownOpt","values","forEach","shortcutOptions","handler","isSameKey","get","itemData","toString","ToolbarItem","title","cssClass","locateInMenu","widget","visible","options","children","isDown","icon","clickHandler","shortcutHandler","push","hint","iconName","getIcon","className","widgetName","Object","assign","setShortcutHandler","onClick","Icons","toolbarPanelButtonEvents","tableKey","getTableKey","tableName","getTableName","closeScreenBuilderTableButton","ButtonNames","setTitle","translate","setIcon","setClickHandler","closeScreenBuilderTableButtonClickHandler","tableActions","metadata","tableRelatedUserParameters","getActions","sort","nameA","nameB","header","tableActionsMenuButton","setWidget","mergeOptions","items","displayExpr","dropDownOptions","minWidth","onItemClick","tableActionsClickHandler","itemTemplate","reloadButton","reloadButtonClickHandler","setShortcut","executeTableUpdateButton","getLinkButton","getLinkButtonClickHandler","toggleSelectionButton","toggleSelectionButtonClickHandler","setCssClass","deleteRowsButton","deleteRowsButtonClickHandler","addRowButton","addRowButtonClickHandler","cloneRowsButton","cloneRowButtonClickHandler","saveRowsButton","saveRowsButtonClickHandler","saveForeignKeyButton","saveForeignKeyButtonClickHandler","massUpdateButton","massUpdateButtonClickHandler","exportButton","exportButtonClickHandler","importButton","importButtonClickHandler","settingsButton","settingsButtonClickHandler","compareButton","compareButtonClickHandler","masterButton","helpButton","helpButtonClickHandler","linksMenuButton","filtersActions","FilterSetting","settingName","FilterActions","filters","defaultFilterId","defaultFilter","settingId","filterSettingButton","filterSettingButtonItemClick","filter","selectedItemKey","useSelectMode","keyExpr","onInitialized","hiddenColumnSettingButton","hiddenColumnSettingActions","HiddenColumnSetting","HiddenColumnActions","hiddenColumnSettings","defaultHiddenColumn","getSettingId","hiddenColumnSettingSplitMenuButtonItemClick","groupingSettingSplitMenuButton","tableSortButton","sortSettings","sortOrderSettings","defaultSortOrderId","defaultSortOrder","sortSettingsActions","SortSetting","SortingActions","sortSetting","tableSortButtonItemClick","viewChartMenuButton","tableRelatedCharts","tableRelatedChartsButtonClickHandler","childRecordsMenuButton","openChildParentTable","parentRecordsMenuButton","synchronizeChildButton","mergeButton","mergeRowsButtonClickHandler","screenBuilderButton","screenBuilderButtonClickHandler","columnChooserButton","columnChooserButtonClickHandler","tableReferences","linkReferenceButton","linkReferenceTableButtonClickHandler","recalculateReportDataButton","recalculateReportDataClickHandler","goToOldDBEClickHandler","ForeignButtonUpdater","selectedRows","originalTableDataModel","gridInstance","notificationController","foreignProxy","setSelectedRow","NotificationController","ForeignButtonProxy","foreignButtonFilterBuilderUpdate","foreignButtonFormUpdate","foreignButtonCellUpdate","reduce","promise","nextPromise","runNext","Promise","resolve","Error","editorOption","hasOwn","closeParentTable","setValueToBuilder","size","parentTableColumnName","foreignKeyInfo","parentKeyColumnText","foreignButtonId","foreignButtonText","clearCache","columnName","repaintComponent","dataFromCellData","joinedKeyColumnNames","parentColumnName","fromEntries","entries","cellData","getColumnByName","validator","getValidatorName","newValue","cellToUpdate","cells","childColumn","parentColumn","has","getDefaultValue","resolveForeignKeys","refresh","createNotification","message","Validators","type","Severity","childColumnModel","defaultValue","isDefined","getColumns","columnModel","getForeignKeyInfo","keys","getJoinedColumnNames","equalsIgnoreCase","close","selectedRowObj","ToolbarPanelButtonEvents","dbeDxGridRef","actions","tableInstanceManager","warehouseId","TableInstanceManager","getDbeDxGridInstance","setTimeout","openModal","ModalsTypes","width","modalTitle","dxGridInstance","handleSubmitEvent","parameters","successCallback","params","updateOptionsToActionParams","getPrimaryKeys","acc","getRowDefaultValues","ID_wh","communicator","getSelectedRowKeys","length","displayTime","getSelectedRowsData","asyncRender","selectedRowsKeys","confirm","isConfirmed","recordsDeleted","parameter","clearSelection","element","classList","remove","add","selectAll","actionDetail","getTableActionParameters","tableActionParametersModel","executeTableAction","inputParams","primaryKeys","runTableActionByOutputType","res","alias","severity","endCustomLoading","catch","error","errorMessage","isEmpty","confirmationRequired","checkBeforeExecuteAction","dbeDxGridInstance","hideOnOutsideClick","selectedSortOrder","selectedHiddenColumnFilter","option","setting","includes","asyncGridRepaint","compareTableDto","CompareTableDto","handleCompareTable","setCompareTableData","table","resetToDefaultParams","TypeOfUserParamSettings","helpKey","DbeActions","applySetting","setSelectedFilter","repaintDropDown","unfilter","selectedFilter","sortingSetting","setSelectedSortOrder","clearSorting","selectedSortSetting","hiddenColumnActions","showAllHiddenColumns","setSelectedHiddenColumnFilter","getPrimaryKeysAsArray","valuesByPrimaryKey","Set","row","filterForLink","FilterGroup","filterString","JSON","stringify","isChildOrParentTable","executeMassiveUpdate","operation","updatedRow","massUpdateRange","allAppliedFilters","getAllAppliedFilters","bodyParams","executeMassiveUpdateForCloningRows","updatedRows","store","getDataSource","MassUpdateRange","rowsForUpdate","updateValueStrategy","MassUpdateValueStrategy","all","updatedValue","update","newRows","rows","closeModal","originalTableInstance","tableInstanceStorage","foreignButtonUpdater","showColumnChooser","url","createUrl","window","open","allRows","getTemporaryTableData","uniqKeysData","prepareUniqueKeysData","notEmpty","selectedRowsDexieDB","addRecord","URL","searchParams","append","pathname","updateSplitElements","destroyChildParentTable","screenBuilderTableKey","getMetadata","getTable","result","namePinned","getReportInputParameters","executeRecalculateReportData","helpUrl","link","getHelpLink","split","topic","section","subSection","layoutTypeTopic","WarehouseTypeForHelp","WarehouseUiType","warehouseUiType","queryParams","generateQueryParams","origin","global","CONTEXT_PATH","hash","handleMergeRows","tableData","finalRow","resultRow","selectedRowsData","ToolbarPanelButtonManager","toolbarButtons","ToolbarItemBuilder","pagerPanel","hiddenColumnSettingSplitMenuButton","goToOldDBEButton","toolbarPanelConfig","toolbarPanelConfigByTable","setVisible","isCloseScreenBuilderTableButtonVisible","isToggleSelectionButton","isReloadButtonVisible","isExecuteTableUpdateButtonVisible","isGetLinkButtonVisible","isDeleteRowsButtonVisible","isCloneRowsButtonVisible","isSaveRowsButtonVisible","isSaveForeignKeyButtonVisible","isMassUpdateButtonVisible","isExportButtonVisible","isImportButtonVisible","isSettingsButtonVisible","isPagerPanelVisible","isCompareButtonVisible","isUserHelpLinkVisible","isLinksMenuButtonVisible","isTableActionsMenuButtonVisible","isFilterSettingButtonVisible","isHiddenColumnSettingSplitMenuButtonVisible","isGroupingFilterVisible","isTableSortButtonVisible","isChildRecordsMenuButtonVisible","isParentRecordsMenuButtonVisible","isViewChartMenuButtonVisible","isMergeButtonVisible","isScreenBuilderVisible","isColumnChooserVisible","isLinkReferenceButton","isRecalculateReportDataButtonVisible","getButtonsAsArray","button","getShortcuts","shortcut","registerShortcut","getShortcutHandler","actionName","action","isVisible","ToolbarPanelConfigBuilder","isPagerTextBoxVisible","groupingFilterVisible","mergeButtonVisible","screenBuilderVisible","columnChooserVisible","closeScreenBuilderTableButtonVisible","ToolbarPanelConfig","saveButtonVisibility","ToolbarPanelView","getMainViewToolbarPanelConfig","getCloneRowViewToolbarPanelConfig","getScreenBuilderTablesPanelConfig","getForeignKeyToolbarPanelConfig","getCompareTableResultConfig","setIsToggleSelectionButton","setIsReloadButtonVisible","setIsGetLinkButtonVisible","setIsDeleteRowsButtonVisible","setIsCloneRowsButtonVisible","setIsTableActionsMenuButtonVisible","setIsFilterSettingButtonVisible","setIsHiddenColumnSettingSplitMenuButtonVisible","setIsTableSortButtonVisible","setIsChildRecordsMenuButtonVisible","setIsParentRecordsMenuButtonVisible","setIsMassUpdateButtonVisible","setIsViewChartMenuButtonVisible","setIsExportButtonVisible","setIsCompareButtonVisible","setIsImportButtonVisible","setIsSettingsButtonVisible","setScreenBuilderVisible","setColumnChooserVisible","setIsLinkReferenceButton","setIsRecalculateReportDataButtonVisible","setMergeButtonVisible","setIsUserHelpLinkVisible","build","setIsSaveForeignKeyButtonVisible","setIsSaveRowsButtonVisible","setCloseScreenBuilderTableButtonVisible","setIsPagerPanelVisible","setIsPagerTextBoxVisible","canAddRecords","canDelete","canExecuteTableAction","canExport","canImport","canMassUpdate","canCompareTable","canExecuteUpdateTable","canMergeRows","hasHelpButton","isExistTableRelatedCharts","isExistTableReferences","ToolbarPanelConfigByTable","setIsMergeButtonVisible","useScreenBuilderContext","destroyScreenBuilder","screenBuilder","useModalWindowPopupContext","openModalWithProps","buttonManager","setDbeDxGridRef","setButtonManager","setToolbarPanelButtonManager","setActions","tableToDelete","createToolbarBarEvents","buildToolbarButtons","registerShortcuts","configureButtonsVisibility","reducer","state","payload","ToolbarPanel","toolbarRef","buttonsManager","useButtonManager","useReducer","getVisibleButtons","getButtonOptions","dispatch","useEffect","Fragment","Item","getItemProps","getChildren","getKey","defaultProps","useState","setValues","setValue","validateForm","saveValues","index","prev","slice","closeEditor","deleteValues","getCellRenderForFilterBuilder","getEditorOptionsForFilterBuilder","validation","brokenRules","ValidationError","ButtonItem","buttonOptions","useSubmitBehavior","prevValues","some","endsWith","RegExp","startWith","inputValue","setInputValue","matchAll","next","leftPercent","setLeftPercent","rightPercent","setRightPercent","GroupItem","colSpan","elementAttr","class","stylingMode","fieldSeparator","floatingPointSeparator","nullValueEscape","recordSeparator","thousandSeparator","props","exportIdsCheckBox","notExportHiddenColumns","sortByPrimaryKey","exportParams","setExportParams","setExportParameters","paramName","prevParams","submitHandler","columnsForHiding","alreadyHiddenColumns","getColumnChooserRef","columnViewModel","isRequired","undefined","hiddenColumns","hiddenColumnNames","exportedHiddenColumnsCaption","join","rowsCount","getTotalRowCount","columnCount","primaryColCount","csvExportSettings","referencesAsIds","FormData","downloadFile","blob","getExportedDataSuggestedName","finally","exportSettings","storedParams","find","item","helpLink","useDbeActionsHelpLink","template","caption","layout","HelpIcon","useFilters","groupedFilters","useSorting","groupedSorting","useHiddenColumns","groupedHiddenColumns","isAutoRefresh","setIsAutoRefresh","applyFilter","useSettings","handleSubmit","preventDefault","form","forms","namedItem","parseBoolean","parsedParams","getFilters","defaultHiddenColumnFilter","getHiddenColumns","getSortOrderSettings","saveSettings","getTableId","resetSettingsToDefault","getDxGridCommonSettings","reload","onSubmit","InputType","tabTitleConstants","valueExpr","tabTitle","dataSource","grouped","NO_FILTER","pageSize","RangeRule","max","getMaxPageSize","min","intervalInSeconds","lastSelectionMode","horizontalAlignment","verticalAlignment","resultHeader","failedRecords","importedRecords","headerText","importedRowsLabel","failedRowsLabel","resultBody","skippedColumnNames","recordNumber","failedReason","collapsible","animationDuration","itemTitleRender","itemRender","body","skippedColNames","isRightSeparator","postProcessingResult","ImportExportResultHelpers","getNotificationSeverityForImport","Content","createNotificationHeader","createNotificationBody","hasCopyButton","postProcessingRes","targetSelector","createDateFormatRow","letter","desc","example","dateFormats","Tooltip","target","position","allowColumnReordering","rowAlternationEnabled","showBorders","Selection","mode","Paging","defaultPageSize","Column","notifySeparatorWrong","debounce","showLoadingBox","cancelImportTable","buttons","custom","messageHtml","showTitle","dateFormatTooltipVisibility","setDateFormatTooltipVisibility","importDataFile","customDateFormat","useCustomDateFormat","updateIfExistCheckBox","oldImportTypeCheckBox","importParams","setImportParams","importSettings","isSeparatorsWrong","allSeparators","newParams","beginCustomLoading","csvImportSettings","updateIfExist","oldImportType","dateFormatPattern","longTermId","loadingBox","show","hide","setImportParameters","isEqual","selectButtonText","labelText","accept","uploadMode","onFocusIn","onFocusOut","style","display","filtersSplit","ownerUserFilters","setOwnerUserFilters","dataGridRef","selectedSettingRow","setSelectedSettingRow","useSettingHooks","settingElements","addSetting","editSetting","deleteSetting","builderKey","setSelectedSetting","shareUnshareSetting","checkSelectedSetting","createNewSetting","getTheBiggestObjectId","isNameExists","getNextSettingName","useProxiedFiltersForSaving","setProxiedSettings","saveSetting","dataGridRefSettings","setDataSource","showRowLines","allowColumnResizing","onSelectionChanged","onRowRemoved","onRowInserted","Editing","allowUpdating","allowAdding","allowDeleting","refreshMode","startEditAction","showCheckBoxesMode","Pager","displayMode","showInfo","showNavigationButtons","allowEditing","dataType","RequiredRule","cellRender","activeStateEnabled","setLink","console","log","newUrl","getElementsByTagName","select","navigator","clipboard","writeText","setLoading","isLoading","tableId","actionId","useHelpLink","inputModels","paramNames","initialDisabledInputs","setDisabledInputs","foreignKeysObjects","setForeignKeysObject","actionParameters","setActionParameters","allParamsForRow","finalParams","isExecuteBtnDisabled","every","model","getCellType","cellType","foreignObj","obj","propName","finalValue","inputParametersModels","InputParameterModel","input","setActionId","DbeTypesFactory","paramModel","getDependsOnParamsList","models","parameterName","disableFieldsByDependsOnParamsList","inputModel","getEditor","getInputParameters","getEditorOptionsForInputParameters","getSettingChanges","filterBuilderRef","fields","getSortedColumn","getColumnByFieldName","fieldName","field","getParsedFilter","dxFilter","getFilterExpression","DxOperations","Array","isArray","val","Field","getColumnParametersForFilterSetting","CustomOperation","editorRender","EditorComponentCustomOperations","SearchInText","setSortSettings","sortSettingsKeys","decs","sortingValues","sortOrderName","OrderingType","marginTop","searchMode","searchEnabled","searchExpr","col","previousValue","findIndex","Close","setSortSetting","setColumns","name1","name2","Add","listRefVisible","listRefHidden","listOfColumn","getVisibleColumnsModelSortedByAlphabet","setHiddenColumns","visibleColumns","setVisibleColumns","lastColumn","selectedHiddenColumns","setSelectedHiddenColumns","selectedVisibleColumns","setSelectedVisibleColumns","deselectAll","unselectAll","alignItemLabels","height","repaintChangesOnly","selectionMode","getHeader","addedItem","addedItems","removedItem","removedItems","ItemDragging","allowReordering","group","onAdd","toIndex","fromIndex","onRemove","pageLoadMode","BuildersTypes","setName","isPublic","setIsPublic","newSetting","setNewSetting","settingChanges","toolbarPanelDispatch","toolbarPanelButtonManager","dispatchForToolbar","leading","getValidationForFilterName","newFilter","setSettingChanges","getSetting","Button","setSetting","Templates","templatesElements","getSelectedTemplate","selectedTemplate","selectTemplate","isSelected","ID","src","ImageSrc","SelectBoxesComponent","selectBoxes","tablesList","selectedTables","setSelectedTables","selectBox","SelectBox","searchTimeout","selectedItem","table_name","getAllVisibleTables","setScreenBuilderConfig","screenBuilderTemplateID","screenBuilderTables","isScreenBuilderOn","defaultTemplate","screenBuilderTemplates","el","setSelectedTemplate","numberOfTables","fill","_","i","render","EmptyItem","storeScreenBuilderSettings","splitElementsByTemplate","splitScreenConfig","getTables","parentChildTable","setChildParentConfig","childParentTable","childParentTableTemplateID","joinedColumnGroups","setJoinedColumnGroups","childParentScreenTemplates","setTable","childTableName","storeParentChildTableBuilderSettings","indexKey","fieldType","considerUnit","getIndexKey","MassUpdateOperationType","MassUpdateOperation","selectColumn","columnsList","setColumnsList","columnModels","massUpdateOperationByColumn","colModels","ColumnModel","colModel","massUpdateOperation","operationByColumn","toZeroOperation","isZeroAsAny","toNullOperation","getColumnTypeObject","isNullable","setMassiveUpdateOperations","setIsMassiveUpdateField","setTableDataModel","deferRendering","onValueChange","selectedColumn","setMassUpdateRange","radioButtonsValue","setRadioButtonsValue","foreignKeyParams","setForeignKeyParamsValue","getMassiveUpdateOperations","selectedRowKeys","ranges","onInputChange","range","getConfirmationMessageByRange","toNullOrZeroOperation","colName","dbeColumn","isInputValid","parsedValue","parseInt","isDevideBy","isNaN","isMassiveUpdatePossible","getUniqColumns","isDisabledApplyButton","useMassiveUpdate","isFormValid","labelMode","onChange","alignItems","color","getButtonNameByType","newRow","updateNewRow","parseValue","ID_user_change","scrollingEnabled","maxHeight","getColumnsForAddingCloning","prevRow","dataTableRef","setTableData","configuredRow","getColumnModelByName","isHideOnCLone","isClearOnClone","cellHintEnabled","showColumnHeaders","remoteOperations","cacheEnabled","getColumnParameters","MasterDetail","enabled","resultSettings","excludedColumns","useParentTablePopupContext","campaigns","setCampaigns","compareType","setCompareType","compareButtons","setCompareButtons","tableDataModel","getCompareTableManager","compareManager","getVisibleCompareTableButtons","getVisibleColumnsModel","setComparableColumnsModels","Communicator","actionType","setCompareTablesType","getComponent","setCustomFilter","setValueByKey","DxCompareTypeGroup","itemType","addComparableColumnsModels","setFinalRow","selectedCells","handleCellClick","cellObj","rowType","onCellClick","onCellPrepared","cellElement","backgroundColor","setInputParams","foreignParams","setForeignParams","getSpLink","isValidForeignKeys","paramIndex","setForeignParameters","foreignKeyValue","CellType","dataGrid","updateToolbarButton","applySettingToDataGrid","filterName","setFilterName","onSaveHandler","modalContentByName","TableActionModal","SettingsModal","ExportModal","ImportModal","LinkWithFilter","MassiveUpdateModal","UserParamsSettingsModal","AddNewSettingsModal","EditSetting","ScreenBuilderConfig","ChildParentTableModal","AddNewRowModal","CloneSelectedRowsModal","CompareTablesParametersModal","MergeRowsModal","RecalculateReportData","SelectionForFilterModal","WithModalPopup","ModalContent","modalName","visibility","Popup","onHiding","animation","dragEnabled","showCloseButton","minHeight","wrapperAttr","prevProps","nextProps","ModalWindowPopupContext","ModalWindowPopupContextProvider","Provider","allProps","useContext","REPLACE","prevValue","nextValue","REPLACE_TO_ZERO","ADD","SUBTRACT_BY","SUBTRACTED_BY","MULTIPLY","DIVIDE_BY","DIVIDED_BY","PREFIX_BY","SUFFIX_BY","NULL"],"sourceRoot":""}