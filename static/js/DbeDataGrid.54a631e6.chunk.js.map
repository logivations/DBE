{"version":3,"file":"static/js/DbeDataGrid.54a631e6.chunk.js","mappings":"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","sources":["hooks/useDebouncedRefresh.ts","Components/DbeDataGrid/useDbeDataGrid.ts","Components/DxDbeFooter/useDbeFooter.ts","Components/DxDbeFooter/DxDbeFooter.tsx","Components/DbeDataGrid/DbeDataGrid.tsx"],"sourcesContent":["/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport { useMemo } from 'react';\nimport debounce from 'lodash/debounce';\n\nconst useDebouncedRefresh = (tableInstance) => {\n\treturn useMemo(() => {\n\t\treturn debounce(({ component }) => {\n\t\t\t(async () => {\n\t\t\t\tif (!tableInstance.getTableDataModel().hasSummary()) return;\n\t\t\t\tconst selectedRows = await component.getSelectedRowsData();\n\t\t\t\tconst selectionFilter = tableInstance.getTableDataModel().createFilterGroupFromUniqueKeys(selectedRows);\n\t\t\t\ttableInstance\n\t\t\t\t\t.getTableDataModel()\n\t\t\t\t\t.setSelectionFilter(selectionFilter.isZeroFilter() ? null : selectionFilter);\n\t\t\t\tcomponent.refresh(true);\n\t\t\t})();\n\t\t}, 1000);\n\t}, [tableInstance]);\n};\n\nexport default useDebouncedRefresh;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport { useEffect, useMemo } from 'react';\nimport useDebouncedRefresh from '../../hooks/useDebouncedRefresh';\nimport translate from '../../i18n/localization';\nimport { Severity } from '../../models/Enums/Notification';\nimport NotificationController from '../../services/Notification/NotificationController';\n\nconst useDbeDataGrid = (tableInstance, dbeDxGridRef, tableInstanceManager, toolbarRef, height) => {\n\tconst notificationController = useMemo(() => new NotificationController(), []);\n\tconst debouncedRefresh = useDebouncedRefresh(tableInstance);\n\tconst additionalProps = useMemo(() => (height ? { height } : {}), [height]);\n\n\tuseEffect(() => {\n\t\tif (tableInstance) {\n\t\t\ttableInstance.setTableRef(dbeDxGridRef);\n\t\t}\n\t}, [tableInstance, dbeDxGridRef, dbeDxGridRef.current]);\n\n\tuseEffect(() => {\n\t\tif (toolbarRef && tableInstance) {\n\t\t\ttableInstanceManager.setToolbarInstance(tableInstance.table.getTableName(), toolbarRef);\n\t\t}\n\t}, [toolbarRef, toolbarRef.current, tableInstance]);\n\n\tuseEffect(() => {\n\t\tif (tableInstance && tableInstance.canExecuteUpdateTable() && tableInstance.toolbarPanelButtonManager) {\n\t\t\tnotificationController.createNotification({\n\t\t\t\tmessage: translate('_RECALCULATE_REPORT_DATA'),\n\t\t\t\ttype: Severity.INFO,\n\t\t\t\tclickHandler:\n\t\t\t\t\ttableInstance?.toolbarPanelButtonManager?.toolbarPanelButtonEvents.recalculateReportDataClickHandler(),\n\t\t\t});\n\t\t}\n\t}, [tableInstance]);\n\treturn { debouncedRefresh, additionalProps };\n};\n\nexport default useDbeDataGrid;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport { useCallback, useEffect, useState } from 'react';\nimport TableInstance from '../../services/TableInstanceManager/TableInstance';\nimport { FilterGroup } from '../../models/Classes';\nimport ModalsTypes from '../../constants/ModalsTypes';\nimport translate from '../../i18n/localization';\nimport { TypeOfUserParamSettings } from '../../constants/userParamsSettingsConstants';\nimport ButtonNames from '../../services/ToolbarPanelManager/ButtonNames';\nimport useModalWindowPopupContext from '../../context/ModalPopupContext';\nimport DxGridSettings from '../../helpers/DxGridSettingsService';\n\nconst useDbeFooter = (tableInstance: TableInstance, dbeDxGridRef) => {\n\tconst { openModalWithProps } = useModalWindowPopupContext();\n\tconst [allRowsCount, setAllRowsCount] = useState<number>(0);\n\tconst [selectedRowsCount, setSelectedRowsCount] = useState<number>(0);\n\tconst [selectionFilter, setSelectionFilter] = useState<FilterGroup>(new FilterGroup());\n\tconst [headerAndRowFilter, setHeaderAndRowFilter] = useState<FilterGroup>(new FilterGroup());\n\tconst [isHeaderAndRowFilterButtonVisible, setHeaderAndRowFilterButtonVisibility] = useState(false);\n\tconst [hiddenColumnFilter, setHiddenColumnFilter] = useState([]);\n\n\tuseEffect(() => {\n\t\tif (tableInstance) {\n\t\t\ttableInstance.getTableDataModel().setRefreshCounter(({ totalCount }) => {\n\t\t\t\tsetAllRowsCount(totalCount);\n\t\t\t});\n\t\t}\n\t}, [tableInstance]);\n\n\tuseEffect(() => {\n\t\tsetHeaderAndRowFilterButtonVisibility(tableInstance.checkIfColumnsFiltered());\n\t\tdbeDxGridRef.current.instance.on('selectionChanged', async ({ component }) => {\n\t\t\tconst rows = await component.getSelectedRowsData();\n\t\t\tconst selectionFilter = tableInstance.getTableDataModel().createFilterGroupFromUniqueKeys(rows);\n\n\t\t\tsetSelectedRowsCount(rows.length);\n\t\t\tsetSelectionFilter(selectionFilter);\n\t\t});\n\t\tdbeDxGridRef.current.instance.on('optionChanged', async (e) => {\n\t\t\tif (e.name !== 'columns') return;\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst filter = tableInstance.getTableDataModel().getRowAndHeaderFilter();\n\t\t\t\tsetHeaderAndRowFilterButtonVisibility(filter && !filter.isZeroFilter());\n\t\t\t\tsetHeaderAndRowFilter(filter);\n\t\t\t}, 800);\n\t\t});\n\t}, [dbeDxGridRef]);\n\n\tconst toolbarPanelDispatch = useCallback(\n\t\t(...args) => {\n\t\t\treturn tableInstance.toolbarPanelButtonManager.dispatchForToolbar(...args);\n\t\t},\n\t\t[tableInstance, tableInstance.toolbarPanelButtonManager],\n\t);\n\n\tuseEffect(() => {\n\t\tdbeDxGridRef.current.instance.on('optionChanged', (data) => {\n\t\t\tconst [_, fieldName] = DxGridSettings.parseSettingFullName(data.fullName);\n\t\t\tif (fieldName === 'visible') {\n\t\t\t\tconst columnChooserView = data.component.getView('columnChooserView');\n\t\t\t\tconst columns = columnChooserView.getColumns().map((column) => column.dataField);\n\t\t\t\tcolumnChooserView.isColumnChooserVisible() && setHiddenColumnFilter(columns);\n\t\t\t\ttoolbarPanelDispatch({\n\t\t\t\t\ttype: 'UPDATE_SELECTED_ITEM_KEY',\n\t\t\t\t\tpayload: { selectedItemKey: null, buttonName: ButtonNames.hiddenColumnSettingButton },\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (fieldName === 'sortOrder') {\n\t\t\t\ttoolbarPanelDispatch({\n\t\t\t\t\ttype: 'UPDATE_SELECTED_ITEM_KEY',\n\t\t\t\t\tpayload: { selectedItemKey: null, buttonName: ButtonNames.tableSortButton },\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tdbeDxGridRef.current.instance.on('contentReady', ({ component }) => {\n\t\t\tconst columnChooserView = component.getView('columnChooserView');\n\t\t\tconst columns = columnChooserView.getColumns().map((column) => column.dataField);\n\t\t\tcolumnChooserView.isColumnChooserVisible() && setHiddenColumnFilter(columns);\n\t\t\ttableInstance.setColumnChooserRef(columnChooserView);\n\t\t\tif (!columnChooserView._popupContainer) {\n\t\t\t\tcolumnChooserView._initializePopupContainer();\n\t\t\t\tcolumnChooserView.render();\n\t\t\t\tcolumnChooserView._popupContainer.on('hiding', function () {\n\t\t\t\t\tsetHiddenColumnFilter([]);\n\t\t\t\t});\n\t\t\t\tcolumnChooserView._popupContainer.on('showing', function () {\n\t\t\t\t\tconst columns = columnChooserView.getColumns().map((column) => column.dataField);\n\t\t\t\t\tsetHiddenColumnFilter(columns);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}, [dbeDxGridRef]);\n\n\tconst createSelectionFilter = useCallback(() => {\n\t\topenModalWithProps(ModalsTypes.SELECTION_FOR_FILTER_MODAL, {\n\t\t\ttableInstance,\n\t\t\ttype: TypeOfUserParamSettings.FILTER_SETTINGS,\n\t\t\tmodalTitle: translate('_SAVE_SELECTION_FOR_FILTER_AS'),\n\t\t\tsetting: selectionFilter,\n\t\t\tdataGrid: dbeDxGridRef?.current?.instance,\n\t\t});\n\t}, [selectionFilter]);\n\n\tconst createRowAndHeaderFilter = useCallback(() => {\n\t\topenModalWithProps(ModalsTypes.SELECTION_FOR_FILTER_MODAL, {\n\t\t\ttableInstance,\n\t\t\ttype: TypeOfUserParamSettings.FILTER_SETTINGS,\n\t\t\tmodalTitle: translate('_SAVE_QUICK_FILTER_AS'),\n\t\t\tsetting: headerAndRowFilter,\n\t\t\tdataGrid: dbeDxGridRef?.current?.instance,\n\t\t});\n\t}, [headerAndRowFilter]);\n\n\tconst createHiddenColumnFilter = useCallback(() => {\n\t\topenModalWithProps(ModalsTypes.SELECTION_FOR_FILTER_MODAL, {\n\t\t\ttableInstance,\n\t\t\ttype: TypeOfUserParamSettings.HIDDEN_COLUMNS_SETTING,\n\t\t\tmodalTitle: translate('_SAVE_HIDDEN_COLUMNS_FILTER_AS'),\n\t\t\tsetting: hiddenColumnFilter,\n\t\t\tdataGrid: dbeDxGridRef?.current?.instance,\n\t\t});\n\t}, [hiddenColumnFilter]);\n\n\treturn {\n\t\tallRowsCount,\n\t\tselectedRowsCount,\n\t\tselectionFilter,\n\t\tcreateSelectionFilter,\n\t\tcreateRowAndHeaderFilter,\n\t\tisHeaderAndRowFilterButtonVisible,\n\t\tcreateHiddenColumnFilter,\n\t\thiddenColumnFilter,\n\t};\n};\n\nexport default useDbeFooter;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport Toolbar, { Item } from 'devextreme-react/toolbar';\nimport translate from '../../i18n/localization';\nimport React from 'react';\nimport useDbeFooter from './useDbeFooter';\n\nimport './style.css';\n\nconst DxDbeFooter = ({ tableInstance, dbeDxGridRef }) => {\n\tconst {\n\t\tallRowsCount,\n\t\tselectedRowsCount,\n\t\tselectionFilter,\n\t\tcreateSelectionFilter,\n\t\tcreateRowAndHeaderFilter,\n\t\tisHeaderAndRowFilterButtonVisible,\n\t\tcreateHiddenColumnFilter,\n\t\thiddenColumnFilter,\n\t} = useDbeFooter(tableInstance, dbeDxGridRef);\n\n\treturn (\n\t\t<>\n\t\t\t<Toolbar className={'footer-holder'}>\n\t\t\t\t<Item\n\t\t\t\t\tkey={'selectionFilter'}\n\t\t\t\t\tvisible={!selectionFilter.isZeroFilter()}\n\t\t\t\t\twidget={'dxButton'}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\ttext: translate('_SAVE_SELECTION_FOR_FILTER_AS'),\n\t\t\t\t\t\tonClick: createSelectionFilter,\n\t\t\t\t\t}}\n\t\t\t\t\tlocation={'before'}\n\t\t\t\t\tlocateInMenu={'auto'}\n\t\t\t\t/>\n\t\t\t\t<Item\n\t\t\t\t\tkey={'rowAndHeaderFilter'}\n\t\t\t\t\tvisible={isHeaderAndRowFilterButtonVisible}\n\t\t\t\t\twidget={'dxButton'}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\ttext: translate('_SAVE_QUICK_FILTER_AS'),\n\t\t\t\t\t\tonClick: createRowAndHeaderFilter,\n\t\t\t\t\t}}\n\t\t\t\t\tlocation={'before'}\n\t\t\t\t\tlocateInMenu={'auto'}\n\t\t\t\t/>\n\t\t\t\t<Item\n\t\t\t\t\tkey={'hiddenColumnFilter'}\n\t\t\t\t\tvisible={hiddenColumnFilter.length}\n\t\t\t\t\twidget={'dxButton'}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\ttext: translate('_SAVE_HIDDEN_COLUMNS_FILTER_AS'),\n\t\t\t\t\t\tonClick: createHiddenColumnFilter,\n\t\t\t\t\t}}\n\t\t\t\t\tlocation={'before'}\n\t\t\t\t\tlocateInMenu={'auto'}\n\t\t\t\t/>\n\t\t\t\t<Item\n\t\t\t\t\tkey={'selectedRows'}\n\t\t\t\t\tlocation={'after'}\n\t\t\t\t\tlocateInMenu=\"auto\"\n\t\t\t\t\thtml={`<div>\n                    <span>${translate('SELECTED_ROWS')}:</span>\n                    <span><b>${selectedRowsCount}</b></span>\n                </div>`}\n\t\t\t\t/>\n\t\t\t\t<Item\n\t\t\t\t\tkey={'allRows'}\n\t\t\t\t\tlocation={'after'}\n\t\t\t\t\tlocateInMenu=\"auto\"\n\t\t\t\t\thtml={`<div>\n                    <span>${translate('ALL_ROWS')}:</span>\n                    <span><b>${allRowsCount}</b></span>\n                </div>`}\n\t\t\t\t/>\n\t\t\t</Toolbar>\n\t\t</>\n\t);\n};\n\nexport default DxDbeFooter;\n","/*******************************************************************************\n * (C) Copyright\n * Logivations GmbH, Munich 2010-2022\n ******************************************************************************/\n\nimport React, {Fragment, lazy, Suspense, useMemo, useRef} from 'react';\nimport DataGrid, {\n\tColumn,\n\tColumnFixing,\n\tEditing,\n\tFilterRow,\n\tHeaderFilter,\n\tMasterDetail,\n\tPager,\n\tPaging,\n\tScrolling,\n\tSelection,\n\tSorting,\n\tSummary,\n\tTotalItem,\n} from 'devextreme-react/data-grid';\nimport Toolbar from 'devextreme-react/toolbar';\n\nimport {useCellPreparing, useDefaultSettings, useTableInstance} from '../../hooks';\nimport translate from '../../i18n/localization';\nimport TableInstanceManager from '../../services/TableInstanceManager/TableInstanceManager';\nimport Loader from '../Loader/Loader';\nimport useDbeDataGrid from './useDbeDataGrid';\nimport ToolbarPanel from '../ToolbarPanel/ToolbarPanel';\nimport DxDbeFooter from '../DxDbeFooter/DxDbeFooter';\nimport {isDefined} from \"../../utils/utils\";\nimport ArrayStore from 'devextreme/data/array_store';\nimport DataSource from 'devextreme/data/data_source';\nimport getTableData from \"../../mockedData/tableData\";\n\nimport '../../styles/general.css';\n\nconst DetailRecordView = lazy(\n\t() => import(/* webpackChunkName: \"DetailRecordView\" */ '../DetailView/DetailRecordView'),\n);\n\nconst DbeDataGrid = ({ tableName, height, isScreenBuilderTable, tableType, initialFilter, saveButtonVisibility }) => {\n\tconst dbeDxGridRef = useRef<DataGrid>();\n\tconst toolbarRef = useRef<Toolbar>();\n\n\tconst { tableInstance, tableInstanceManager } = useTableInstance(tableName);\n\tconst [customizeColumns, onOptionChanged, onInitialized] = useDefaultSettings(\n\t\ttableInstance,\n\t\tdbeDxGridRef,\n\t\ttableName,\n\t\ttableType,\n\t\tinitialFilter,\n\t\ttableInstanceManager,\n\t);\n\tconst { debouncedRefresh, additionalProps } = useDbeDataGrid(\n\t\ttableInstance,\n\t\tdbeDxGridRef,\n\t\ttableInstanceManager,\n\t\ttoolbarRef,\n\t\theight,\n\t);\n\tconst onCellPrepared = useCellPreparing(tableInstance);\n\tconsole.log('tableInstance', tableInstance);\n\tconsole.log('dbeDxGridRef', dbeDxGridRef);\n\tconst store = useMemo(() => {\n\t\treturn new DataSource({\n\t\t\tstore: new ArrayStore({\n\t\t\t\tkey: 'ID_station',\n\t\t\t\tdata: getTableData(),\n\t\t\t}),\n\t\t})\n\t}, []);\n\n\tif (!tableInstance || height === null) {\n\t\treturn <Loader message={`${translate('TABLE_LOADING')} ...`} />;\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<ToolbarPanel\n\t\t\t\ttableType={isScreenBuilderTable ? TableInstanceManager.SCREEN_BUILDER_TABLE : tableType}\n\t\t\t\ttableInstance={tableInstance}\n\t\t\t\tdbeDxGridRef={dbeDxGridRef}\n\t\t\t\ttoolbarRef={toolbarRef}\n\t\t\t\tsaveButtonVisibility={saveButtonVisibility}\n\t\t\t/>\n\t\t\t<DataGrid\n\t\t\t\twidth={'100%'}\n\t\t\t\tkey={`${tableName}-dataGrid`}\n\t\t\t\tref={dbeDxGridRef}\n\t\t\t\tdataSource={store}\n\t\t\t\thoverStateEnabled={true}\n\t\t\t\tallowColumnReordering={true}\n\t\t\t\tallowColumnResizing={true}\n\t\t\t\tcolumnResizingMode={'widget'}\n\t\t\t\tcellHintEnabled={true}\n\t\t\t\tshowColumnHeaders={true}\n\t\t\t\tremoteOperations={true}\n\t\t\t\thighlightChanges={true}\n\t\t\t\trepaintChangesOnly={true}\n\t\t\t\tcacheEnabled={false}\n\t\t\t\trowAlternationEnabled={true}\n\t\t\t\tshowRowLines={true}\n\t\t\t\tshowBorders={true}\n\t\t\t\tcustomizeColumns={customizeColumns}\n\t\t\t\tonInitialized={onInitialized}\n\t\t\t\tonOptionChanged={onOptionChanged}\n\t\t\t\tonSelectionChanged={(e) => debouncedRefresh(e)}\n\t\t\t\tonCellPrepared={onCellPrepared}\n\t\t\t\t{...additionalProps}\n\t\t\t>\n\t\t\t\t<ColumnFixing enabled={true} />\n\t\t\t\t<Editing\n\t\t\t\t\tmode=\"cell\"\n\t\t\t\t\tallowUpdating={tableInstance.isTableEditable}\n\t\t\t\t\trefreshMode={'repaint'}\n\t\t\t\t\tstartEditAction={'dblClick'}\n\t\t\t\t/>\n\t\t\t\t<Selection\n\t\t\t\t\tmode={tableName === TableInstanceManager.ORIGINAL_TABLE ? 'multiple' : 'single'}\n\t\t\t\t\tdeferred={false}\n\t\t\t\t\tshowCheckBoxesMode={'none'}\n\t\t\t\t/>\n\t\t\t\t<FilterRow visible={true} />\n\t\t\t\t<HeaderFilter visible={true} />\n\t\t\t\t<Scrolling\n\t\t\t\t\tmode=\"virtual\"\n\t\t\t\t\trowRenderingMode=\"virtual\"\n\t\t\t\t/>\n\t\t\t\t<Sorting mode=\"multiple\" />\n\t\t\t\t<Paging pageSize={tableInstance.pageSize || 300} />\n\t\t\t\t<Pager\n\t\t\t\t\tvisible={true}\n\t\t\t\t\tdisplayMode={'full'}\n\t\t\t\t\tshowPageSizeSelector={true}\n\t\t\t\t\tshowInfo={false}\n\t\t\t\t\tshowNavigationButtons={true}\n\t\t\t\t/>\n\n\t\t\t\t{tableInstance.getTableDataModel().columns.map((column) => {\n\t\t\t\t\treturn <Column {...column.getColumnParameters()}>{column.getChildren()}</Column>;\n\t\t\t\t})}\n\n\t\t\t\t<Summary>\n\t\t\t\t\t{tableInstance.getTableDataModel().columns.reduce((acc, column) => {\n\t\t\t\t\t\tcolumn.getFooterAction() &&\n\t\t\t\t\t\t\tacc.push(\n\t\t\t\t\t\t\t\t<TotalItem\n\t\t\t\t\t\t\t\t\tkey={column.getName()}\n\t\t\t\t\t\t\t\t\tcolumn={column.getName()}\n\t\t\t\t\t\t\t\t\tsummaryType={column.getFooterAction()}\n\t\t\t\t\t\t\t\t\tcustomizeText={({ value }) => (isDefined(value) ? Number(value).toFixed(3) : '-')}\n\t\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}, [])}\n\t\t\t\t</Summary>\n\t\t\t\t<MasterDetail\n\t\t\t\t\tenabled={true}\n\t\t\t\t\tcomponent={({ data }) => (\n\t\t\t\t\t\t<Suspense\n\t\t\t\t\t\t\tfallback={\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Loader />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<DetailRecordView\n\t\t\t\t\t\t\t\t{...data}\n\t\t\t\t\t\t\t\tdbeDxGridRef={dbeDxGridRef}\n\t\t\t\t\t\t\t\ttableInstance={tableInstance}\n\t\t\t\t\t\t\t\tid={'detail-row-view'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Suspense>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</DataGrid>\n\t\t\t<DxDbeFooter tableInstance={tableInstance} dbeDxGridRef={dbeDxGridRef} />\n\t\t</Fragment>\n\t);\n};\n\nDbeDataGrid.defaultProps = {\n\ttableName: TableInstanceManager.ORIGINAL_TABLE,\n\ttableType: TableInstanceManager.ORIGINAL_TABLE,\n\tisScreenBuilderTable: false,\n\theight: undefined,\n};\n\nexport default DbeDataGrid;\n"],"names":["tableInstance","useMemo","debounce","component","getTableDataModel","hasSummary","getSelectedRowsData","selectedRows","selectionFilter","createFilterGroupFromUniqueKeys","setSelectionFilter","isZeroFilter","refresh","dbeDxGridRef","tableInstanceManager","toolbarRef","height","notificationController","NotificationController","debouncedRefresh","useDebouncedRefresh","additionalProps","useEffect","setTableRef","current","setToolbarInstance","table","getTableName","canExecuteUpdateTable","toolbarPanelButtonManager","createNotification","message","translate","type","Severity","clickHandler","toolbarPanelButtonEvents","recalculateReportDataClickHandler","openModalWithProps","useModalWindowPopupContext","useState","allRowsCount","setAllRowsCount","selectedRowsCount","setSelectedRowsCount","FilterGroup","headerAndRowFilter","setHeaderAndRowFilter","isHeaderAndRowFilterButtonVisible","setHeaderAndRowFilterButtonVisibility","hiddenColumnFilter","setHiddenColumnFilter","setRefreshCounter","totalCount","checkIfColumnsFiltered","instance","on","rows","length","e","name","setTimeout","filter","getRowAndHeaderFilter","toolbarPanelDispatch","useCallback","dispatchForToolbar","data","DxGridSettings","fullName","fieldName","columnChooserView","getView","columns","getColumns","map","column","dataField","isColumnChooserVisible","payload","selectedItemKey","buttonName","ButtonNames","setColumnChooserRef","_popupContainer","_initializePopupContainer","render","createSelectionFilter","ModalsTypes","TypeOfUserParamSettings","modalTitle","setting","dataGrid","createRowAndHeaderFilter","createHiddenColumnFilter","useDbeFooter","className","Item","visible","widget","options","text","onClick","location","locateInMenu","html","DetailRecordView","lazy","DbeDataGrid","tableName","isScreenBuilderTable","tableType","initialFilter","saveButtonVisibility","useRef","useTableInstance","useDefaultSettings","customizeColumns","onOptionChanged","onInitialized","useDbeDataGrid","onCellPrepared","useCellPreparing","console","log","store","DataSource","ArrayStore","key","getTableData","Fragment","ToolbarPanel","TableInstanceManager","width","ref","dataSource","hoverStateEnabled","allowColumnReordering","allowColumnResizing","columnResizingMode","cellHintEnabled","showColumnHeaders","remoteOperations","highlightChanges","repaintChangesOnly","cacheEnabled","rowAlternationEnabled","showRowLines","showBorders","onSelectionChanged","ColumnFixing","enabled","Editing","mode","allowUpdating","isTableEditable","refreshMode","startEditAction","Selection","deferred","showCheckBoxesMode","FilterRow","HeaderFilter","Scrolling","rowRenderingMode","Sorting","Paging","pageSize","Pager","displayMode","showPageSizeSelector","showInfo","showNavigationButtons","Column","getColumnParameters","getChildren","Summary","reduce","acc","getFooterAction","push","TotalItem","getName","summaryType","customizeText","value","isDefined","Number","toFixed","MasterDetail","Suspense","fallback","Loader","id","defaultProps","undefined"],"sourceRoot":""}